#define TA

#include "sfxtype.h"
#include "exptype.h"

piece  base, pelvis, lleg, lboot, lfoot, rleg, rboot, rfoot, torso, torsorecoil, headturn, head, punk, pitchhit, hit,
       armpitch, larm, larmz, lwrist, lwristy, lhandz, lhandx, lsword, rarm, rarmz, rwrist, rwristy, rhandz, rhandx, rsword,
       pitchturret, barrel, flare1, flare2, fire, gem, gema, gemb, gemc, gemd, shieldturn, shield, gib, sp;

static-var  DamageNow, LastDamage, ShieldOn, ShieldBlocks, ShieldPower, bMoving, bAiming,
            Melee, AttackType, PrimaryAim, PrimaryAttack, SecondaryAim, UnitAim;

ShieldUnit(CycleDone)
{
	signal 64;
	set-signal-mask 64;
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 500;
	}
	while( TRUE )
	{
		//Shield control
		if( ShieldPower < 0 )
		{
			ShieldPower = 0;
		}
		if( ShieldOn == 1 )
		{
			ShieldPower = ShieldPower + 2.5;
			if( ShieldPower > 0 )
			{
				show gema;
				hide gemb;
				hide gemc;
				hide gemd;
				if( ShieldPower < 75 )
				{
					hide gema;
					show gemb;
					hide gemc;
					hide gemd;
				}
				if( ShieldPower < 50 )
				{
					hide gema;
					hide gemb;
					show gemc;
					hide gemd;
				}
			}
			if( ShieldPower > 100 )
			{
				ShieldPower = 100;
			}
		}
		if( ShieldBlocks == 0 )
		{
			hide gema;
			hide gemb;
			hide gemc;
			show gemd;
			if( ShieldPower >= 50 )
			{
				ShieldBlocks = 1;
				set ARMORED to 1;
				hide gema;
				hide gemb;
				show gemc;
				hide gemd;
			}
		}

		//Damage effects
		CycleDone = 0;
		LastDamage = get HEALTH;
		if( CycleDone == 0 )
		{
			if( LastDamage < 30 )
			{
				emit-sfx 256 | 2 from torso;
				emit-sfx 256 | 1 from lwrist;
				emit-sfx 256 | 2 from rarm;
				sleep 100;
				emit-sfx 256 | 2 from torso;
				emit-sfx 256 | 1 from lwrist;
				emit-sfx 256 | 2 from rarm;
				sleep 100;
				emit-sfx 256 | 2 from torso;
				emit-sfx 256 | 1 from lwrist;
				emit-sfx 256 | 2 from rarm;
				sleep 100;
				emit-sfx 256 | 2 from torso;
				emit-sfx 256 | 1 from lwrist;
				emit-sfx 256 | 2 from rarm;
				sleep 100;
				emit-sfx 256 | 2 from torso;
				emit-sfx 256 | 1 from lwrist;
				emit-sfx 256 | 2 from rarm;
				sleep 100;
				CycleDone = 1;
			}
		}
		if( CycleDone == 0 )
		{
			if( LastDamage < 60 )
			{
				emit-sfx 256 | 1 from torso;
				sleep 175;
				emit-sfx 256 | 1 from torso;
				sleep 175;
				emit-sfx 256 | 1 from torso;
				sleep 150;
				CycleDone = 1;
			}
		}
		if( CycleDone == 0 )
		{
			sleep 500;
		}
		
		//Melee stance control
		if( PrimaryAim == 0 AND PrimaryAttack == 0 )
		{
			Melee = 0;
		}
	}
}

HitByWeapon(AngleX, AngleZ, Impact)
{
	DamageNow = get HEALTH;
	hide shield;
	if( ShieldBlocks == 1 )
	{
		signal 128;
		set-signal-mask 128;
		turn shieldturn to z-axis (55 * AngleZ) now;
		turn shieldturn to x-axis (55 * AngleX) now;
		show shield;
		Impact = 3 * ( LastDamage - DamageNow );
		if( Impact < 5 )
		{
			Impact = 5;
		}
		ShieldPower = ShieldPower - Impact;
		LastDamage = DamageNow;
		if( ShieldPower <= 0 )
		{
			set ARMORED to 0;
			ShieldBlocks = 0;
			hide gema;
			hide gemb;
			hide gemc;
			show gemd;
		}
		sleep 100;
		hide shield;
		return (0);
	}
	LastDamage = DamageNow;
}

MotionControl(Moving, Aiming, JustMoved)
{
	JustMoved = TRUE;
	while( TRUE )
	{
		Moving = bMoving;
		Aiming = bAiming;
		if( Moving )
		{
			if( bMoving )
			{
				if( !PrimaryAttack )
				{
					turn lleg to x-axis <30.00> speed <200.00>;
					turn lboot to x-axis <-10.00> speed <80.00>;
					turn lfoot to x-axis <-20.00> speed <160.00>;
					turn rleg to x-axis <-60.00> speed <480.00>;
					turn rboot to x-axis <100.00> speed <80.00>;
					turn rfoot to x-axis <0.00> speed <0.00>;
					move pelvis to y-axis [0.90] speed [10.80];
				}
				if( !bAiming )
				{
					turn larm to x-axis <25.00> speed <80.00>;
					turn lwrist to x-axis <40.00> speed <26.66>;
					turn rarm to x-axis <45.00> speed <80.00>;
					turn rwrist to x-axis <50.00> speed <26.66>;
					turn torso to y-axis <-10.00> speed <80.00>;
					turn headturn to y-axis <10.00> speed <80.00>;
					turn torsorecoil to x-axis <5.00> speed <40.00>;
				}		
				sleep 125;
			}
			
			if( bMoving )
			{
				if( !PrimaryAttack )
				{
					turn lleg to x-axis <50.00> speed <160.00>;
					turn lboot to x-axis <20.00> speed <240.00>;
					turn lfoot to x-axis <10.00> speed <240.00>;
					turn rleg to x-axis <-40.00> speed <160.00>;
					turn rboot to x-axis <10.00> speed <720.00>;
					turn rfoot to x-axis <20.00> speed <160.00>;
					move pelvis to y-axis [-0.90] speed [14.40];
				}
				if( !bAiming )
				{
					turn torsorecoil to x-axis <0.00> speed <40.00>;
				}		
				sleep 125;
			}
			
			if( bMoving )
			{
				if( !PrimaryAttack )
				{
					turn lleg to x-axis <0.00> speed <400.00>;
					turn lboot to x-axis <90.00> speed <560.00>;
					turn lfoot to x-axis <0.00> speed <80.00>;
					turn rleg to x-axis <5.00> speed <360.00>;
					turn rboot to x-axis <0.00> speed <80.00>;
					turn rfoot to x-axis <0.00> speed <160.00>;
					move pelvis to y-axis [-0.45] speed [3.60];
				}
				if( !bAiming )
				{
					turn larm to x-axis <35.00> speed <80.00>;
					turn lwrist to x-axis <45.00> speed <40.00>;
					turn rarm to x-axis <35.00> speed <80.00>;
					turn rwrist to x-axis <45.00> speed <40.00>;
					turn torso to y-axis <0.00> speed <80.00>;
					turn headturn to y-axis <0.00> speed <80.00>;
					turn torsorecoil to x-axis <10.00> speed <80.00>;
				}
				sleep 125;
			}
			
			if( bMoving )
			{
				if( !PrimaryAttack )
				{
					turn lleg to x-axis <-60.00> speed <480.00>;
					turn lboot to x-axis <100.00> speed <80.00>;
					turn lfoot to x-axis <0.00> speed <0.00>;
					turn rleg to x-axis <30.00> speed <200.00>;
					turn rboot to x-axis <-10.00> speed <80.00>;
					turn rfoot to x-axis <-20.00> speed <160.00>;
					move pelvis to y-axis [0.90] speed [10.80];
				}
				if( !bAiming )
				{
					turn larm to x-axis <45.00> speed <80.00>;
					turn lwrist to x-axis <50.00> speed <26.66>;
					turn rarm to x-axis <25.00> speed <80.00>;
					turn rwrist to x-axis <40.00> speed <26.66>;
					turn torso to y-axis <10.00> speed <80.00>;
					turn headturn to y-axis <-10.00> speed <80.00>;
					turn torsorecoil to x-axis <5.00> speed <40.00>;
				}	
				sleep 125;
			}
			
			if( bMoving )
			{
				if( !PrimaryAttack )
				{
					turn lleg to x-axis <-40.00> speed <160.00>;
					turn lboot to x-axis <10.00> speed <720.00>;
					turn lfoot to x-axis <20.00> speed <160.00>;
					turn rleg to x-axis <50.00> speed <160.00>;
					turn rboot to x-axis <20.00> speed <240.00>;
					turn rfoot to x-axis <10.00> speed <240.00>;
					move pelvis to y-axis [-0.90] speed [14.40];
				}
				if( !bAiming )
				{		
					turn torsorecoil to x-axis <0.00> speed <40.00>;
				}			
				sleep 125;
			}
			
			if( bMoving )
			{
				if( !PrimaryAttack )
				{
					turn lleg to x-axis <5.00> speed <360.00>;
					turn lboot to x-axis <0.00> speed <80.00>;
					turn lfoot to x-axis <0.00> speed <160.00>;
					turn rleg to x-axis <0.00> speed <400.00>;
					turn rboot to x-axis <90.00> speed <560.00>;
					turn rfoot to x-axis <0.00> speed <80.00>;
					move pelvis to y-axis [-0.45] speed [3.60];
				}
				if( !bAiming )
				{
					turn larm to x-axis <35.00> speed <80.00>;
					turn lwrist to x-axis <45.00> speed <40.00>;
					turn rarm to x-axis <35.00> speed <80.00>;
					turn rwrist to x-axis <45.00> speed <40.00>;
					turn torso to y-axis <0.00> speed <80.00>;
					turn headturn to y-axis <0.00> speed <80.00>;
					turn torsorecoil to x-axis <10.00> speed <80.00>;
				}				
				sleep 125;
			}
			JustMoved = TRUE;
		}
		if( !Moving )
		{
			if( JustMoved )
			{
				if( !PrimaryAttack )
				{
					turn lleg to x-axis <-60.00> speed <200.00>;
					turn lboot to x-axis <60.00> speed <200.00>;
					turn rleg to x-axis <30.00> speed <200.00>;
					turn rboot to x-axis <60.00> speed <200.00>;
					move pelvis to y-axis [-2.40] speed [8.10];
					turn pelvis to x-axis <0.00> speed <20.00>;
					turn torsorecoil to x-axis <0.00> speed <20.00>;
					turn lfoot to x-axis <0.00> speed <200.00>;
					turn rfoot to x-axis <0.00> speed <200.00>;
				}
				if( !Aiming )
				{
					turn larm to x-axis <35.00> speed <100.00>;
					turn lwrist to x-axis <45.00> speed <200.00>;
					turn rarm to x-axis <35.00> speed <100.00>;
					turn rwrist to x-axis <45.00> speed <200.00>;
					turn torso to y-axis <0.00> speed <200.00>;
					turn headturn to y-axis <0.00> speed <200.00>;
				}
				JustMoved = FALSE;
			}
			sleep 100;
		}
	}
}

Create()
{
	bMoving = FALSE;
	bAiming = FALSE;
	Melee = 0;
	AttackType = 1;
	PrimaryAim = 0;
	PrimaryAttack = 0;
	SecondaryAim = 0;
	ShieldOn = 0;
	ShieldBlocks = 0;
	ShieldPower = 0;
	DamageNow = 100;
	LastDamage = 100;
	
	hide flare1;
	hide flare2;
    hide shield;
	hide gema;
	hide gemb;
	hide gemc;
	hide gib;
	dont-cache flare1;
	dont-cache flare2;
    dont-cache shield;
	
	spin flare1 around z-axis speed <200.00>;
	spin flare2 around z-axis speed <-210.00>;

	turn larm to x-axis <35.00> now;
	turn lwrist to x-axis <45.00> now;
	turn rarm to x-axis <35.00> now;
	turn rwrist to x-axis <45.00> now;
	
	turn lleg to x-axis <-60.00> now;
	turn lboot to x-axis <60.00> now;
	turn rleg to x-axis <30.00> now;
	turn rboot to x-axis <60.00> now;
	move pelvis to y-axis [-2.40] now;
	
	move punk to y-axis [3.00] now;
	move lsword to y-axis [3.00] now;
	move rsword to y-axis [3.00] now;
	
	start-script MotionControl();
	start-script ShieldUnit();
	
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 500;
	}
	
	ShieldOn = 1;
	ShieldBlocks = 1;
	ShieldPower = 100;
	LastDamage = get HEALTH;
	set ARMORED to 1;
	show gema;
	hide gemd;
	
    spin shield around y-axis speed <-720.00>;
}

RestoreAfterDelay()
{
	signal 16;
	set-signal-mask 16;
	sleep 1500;
	PrimaryAim = 0;
	SecondaryAim = 0;
	bAiming = FALSE;
	
	turn larm to x-axis <45.00> speed <90.00>;
	turn rarm to x-axis <45.00> speed <90.00>;
	turn lwrist to x-axis <80.00> speed <160.00>;
	turn rwrist to x-axis <80.00> speed <160.00>;
	turn lwristy to y-axis <0.00> speed <120.00>;
	turn rwristy to y-axis <0.00> speed <120.00>;
	turn larmz to z-axis <-30.00> speed <60.00>;
	turn rarmz to z-axis <30.00> speed <60.00>;
	turn lhandx to x-axis <75.00> speed <150.00>;
	turn rhandx to x-axis <75.00> speed <150.00>;
	turn lhandz to z-axis <30.00> speed <120.00>;
	turn rhandz to z-axis <-30.00> speed <120.00>;
	
	sleep 1000;

	turn larm to x-axis <35.00> speed <90.00>;
	turn rarm to x-axis <35.00> speed <90.00>;
	turn lwrist to x-axis <45.00> speed <160.00>;
	turn rwrist to x-axis <45.00> speed <160.00>;
	turn lwristy to y-axis <0.00> speed <120.00>;
	turn rwristy to y-axis <0.00> speed <120.00>;
	turn larmz to z-axis <0.00> speed <60.00>;
	turn rarmz to z-axis <0.00> speed <60.00>;
	turn lhandx to x-axis <0.00> speed <150.00>;
	turn rhandx to x-axis <0.00> speed <150.00>;
	turn lhandz to z-axis <0.00> speed <120.00>;
	turn rhandz to z-axis <0.00> speed <120.00>;
	
	turn headturn to y-axis <0.00> speed <150.00>;
	turn head to y-axis <0.00>  speed <300.00>;
	turn torso to y-axis <0.00> speed <150.00>;
	turn torsorecoil to y-axis <0.00> speed <75.00>;
	turn armpitch to x-axis <0.00> speed <180.00>;
	turn pitchturret to x-axis <0.00> speed <180.00>;
}

StartMoving()
{
	bMoving = TRUE;
}

StopMoving()
{
	bMoving = FALSE;
}

SweetSpot(PieceNum)
{
	PieceNum = sp;
}

AimFromPrimary(PieceNum)
{
	PieceNum = base;
}

QueryPrimary(PieceNum)
{
	PieceNum = base;
}

AimPrimary(Heading, Pitch)
{
	return(0);
}

AimFromSecondary(PieceNum)
{
	PieceNum = torso;
}

QuerySecondary(PieceNum)
{
	PieceNum = hit;
}

AimSecondary(Heading, Pitch)
{
	signal 2;
	set-signal-mask 2;
	bAiming = TRUE;
	PrimaryAim = 1;
	Melee = 1;
//	while( SecondaryAim )
//	{
//		sleep 50;
//	}
	if( SecondaryAim )
	{
		signal 4;//This was a necessary change due to paralyzers jamming weapons permanently.
		SecondaryAim = 0;
	}
	while( PrimaryAttack )
	{
		sleep 50;
	}

	if( AttackType == 1 )//Whirlwind from the left
	{
		move pelvis to y-axis [0.00] speed [6.00];
		
		turn larm to x-axis <0.00> speed <280.00>;
		turn rarm to x-axis <-45.00> speed <280.00>;
		turn larmz to z-axis <-30.00> speed <180.00>;
		turn rarmz to z-axis <15.00> speed <180.00>;
		turn lwrist to x-axis <0.00> speed <360.00>;
		turn rwrist to x-axis <0.00> speed <360.00>;
		turn lwristy to y-axis <90.00> speed <360.00>;
		turn rwristy to y-axis <60.00> speed <360.00>;
		turn lhandx to x-axis <0.00> speed <280.00>;
		turn rhandx to x-axis <70.00> speed <280.00>;
		turn lhandz to z-axis <90.00> speed <480.00>;
		turn rhandz to z-axis <30.00> speed <480.00>;
		
		turn torso to y-axis Heading speed <360.00>;
		turn torsorecoil to y-axis <60.00> speed <280.00>;
		turn headturn to y-axis <-60.00> - Heading speed <360.00>;
		turn head to y-axis Heading speed <480.00>;
		turn pitchhit to x-axis <0.00> - Pitch speed <720.00>;
		turn armpitch to x-axis <0.00> - Pitch speed <720.00>;
		turn pitchturret to x-axis <0.00> speed <180.00>;
		
		wait-for-turn torso around y-axis;
		wait-for-turn torsorecoil around y-axis;
		wait-for-turn pitchhit around x-axis;
		wait-for-turn lhandz around z-axis;
		wait-for-turn rhandz around z-axis;
		
		PrimaryAim = 0;
		start-script RestoreAfterDelay();
		return (1);
	}
	if( AttackType == 2 )//Whirlwind from the right
	{
		move pelvis to y-axis [0.00] speed [6.00];
		
		turn rarm to x-axis <0.00> speed <280.00>;
		turn larm to x-axis <-45.00> speed <280.00>;
		turn rarmz to z-axis <30.00> speed <180.00>;
		turn larmz to z-axis <-15.00> speed <180.00>;
		turn rwrist to x-axis <0.00> speed <360.00>;
		turn lwrist to x-axis <0.00> speed <360.00>;
		turn rwristy to y-axis <-90.00> speed <360.00>;
		turn lwristy to y-axis <-60.00> speed <360.00>;
		turn rhandx to x-axis <0.00> speed <280.00>;
		turn lhandx to x-axis <70.00> speed <280.00>;
		turn rhandz to z-axis <-90.00> speed <480.00>;
		turn lhandz to z-axis <-30.00> speed <480.00>;
		
		turn torso to y-axis Heading speed <360.00>;
		turn torsorecoil to y-axis <-60.00> speed <280.00>;
		turn headturn to y-axis <60.00> - Heading speed <360.00>;
		turn head to y-axis Heading speed <480.00>;
		turn pitchhit to x-axis <0.00> - Pitch speed <720.00>;
		turn armpitch to x-axis <0.00> - Pitch speed <720.00>;
		turn pitchturret to x-axis <0.00> speed <180.00>;
		
		wait-for-turn torso around y-axis;
		wait-for-turn torsorecoil around y-axis;
		wait-for-turn pitchhit around x-axis;
		wait-for-turn lhandz around z-axis;
		wait-for-turn rhandz around z-axis;
		
		PrimaryAim = 0;
		start-script RestoreAfterDelay();
		return (1);
	}
}

FireSecondary()
{
	//Hard targets in close combat!
	ShieldPower = ShieldPower + 12.5;
	
	PrimaryAttack = 1;
	if( AttackType == 1 )//Whirlwind from the left
	{
		AttackType = 2;
		
		turn larm to x-axis <-60.00> speed <120.00>;
		turn rarm to x-axis <0.00> speed <90.00>;
		turn larmz to z-axis <-10.00> speed <40.00>;
		turn rarmz to z-axis <90.00> speed <150.00>;
		turn lwrist to x-axis <60.00> speed <120.00>;
		turn rwrist to x-axis <90.00> speed <180.00>;
		turn lwristy to y-axis <-60.00> speed <300.00>;
		turn rwristy to y-axis <0.00> speed <120.00>;
		turn lhandx to x-axis <60.00> speed <120.00>;
		turn rhandx to x-axis <70.00> speed <280.00>;
		turn lhandz to z-axis <90.00> speed <60.00>;
		turn rhandz to z-axis <0.00> speed <60.00>;
		
		turn torsorecoil to y-axis <-60.00> speed <120.00>;
		
		turn lleg to x-axis <0.00> speed <480.00>;
		turn lboot to x-axis <0.00> speed <480.00>;
		turn lfoot to x-axis <45.00> speed <480.00>;
		turn rleg to x-axis <-60.00> speed <480.00>;
		turn rboot to x-axis <120.00> speed <480.00>;
		turn rfoot to x-axis <45.00> speed <480.00>;
		turn pelvis to y-axis <-120.00> speed <360.00>;
		turn pitchhit to y-axis <120.00> speed <360.00>;
		move pelvis to y-axis [2.00] speed [6.00];
		sleep 300;
		turn pelvis to y-axis <-240.00> speed <480.00>;
		turn pitchhit to y-axis <240.00> speed <360.00>;
		sleep 250;
		turn pelvis to y-axis <0.00> speed <360.00>;
		turn pitchhit to y-axis <0.00> speed <360.00>;
		turn lleg to x-axis <-60.00> speed <480.00>;
		turn lboot to x-axis <120.00> speed <480.00>;
		turn lfoot to x-axis <45.00> speed <480.00>;
		turn rleg to x-axis <0.00> speed <480.00>;
		turn rboot to x-axis <0.00> speed <480.00>;
		turn rfoot to x-axis <30.00> speed <480.00>;
		sleep 300;
		move pelvis to y-axis [0.00] speed [6.00];
		
		PrimaryAttack = 0;
		
		return (0);
	}
	if( AttackType == 2 )//Whirlwind from the right
	{
		AttackType = 1;
		
		turn rarm to x-axis <-60.00> speed <120.00>;
		turn larm to x-axis <0.00> speed <90.00>;
		turn rarmz to z-axis <10.00> speed <40.00>;
		turn larmz to z-axis <-90.00> speed <150.00>;
		turn rwrist to x-axis <60.00> speed <120.00>;
		turn lwrist to x-axis <90.00> speed <180.00>;
		turn rwristy to y-axis <60.00> speed <300.00>;
		turn lwristy to y-axis <0.00> speed <120.00>;
		turn rhandx to x-axis <60.00> speed <120.00>;
		turn lhandx to x-axis <70.00> speed <280.00>;
		turn rhandz to z-axis <-90.00> speed <60.00>;
		turn lhandz to z-axis <0.00> speed <60.00>;
		
		turn torsorecoil to y-axis <60.00> speed <120.00>;
		
		turn rleg to x-axis <0.00> speed <480.00>;
		turn rboot to x-axis <0.00> speed <480.00>;
		turn rfoot to x-axis <45.00> speed <480.00>;
		turn lleg to x-axis <-60.00> speed <480.00>;
		turn lboot to x-axis <120.00> speed <480.00>;
		turn lfoot to x-axis <45.00> speed <480.00>;
		turn pelvis to y-axis <120.00> speed <360.00>;
		turn pitchhit to y-axis <-120.00> speed <360.00>;
		move pelvis to y-axis [2.00] speed [6.00];
		sleep 300;
		turn pelvis to y-axis <240.00> speed <480.00>;
		turn pitchhit to y-axis <-240.00> speed <360.00>;
		sleep 250;
		turn pelvis to y-axis <0.00> speed <360.00>;
		turn pitchhit to y-axis <0.00> speed <360.00>;
		turn rleg to x-axis <-60.00> speed <480.00>;
		turn rboot to x-axis <120.00> speed <480.00>;
		turn rfoot to x-axis <45.00> speed <480.00>;
		turn lleg to x-axis <0.00> speed <480.00>;
		turn lboot to x-axis <0.00> speed <480.00>;
		turn lfoot to x-axis <30.00> speed <480.00>;
		sleep 300;
		move pelvis to y-axis [0.00] speed [6.00];
		
		PrimaryAttack = 0;
		
		return (0);
	}
}

AimFromTertiary(PieceNum)
{
	PieceNum = pitchturret;
}

QueryTertiary(PieceNum)
{
	PieceNum = fire;
}

AimTertiary(Heading, Pitch)
{
	signal 4;
	set-signal-mask 4;
	while( Melee )
	{
		sleep 100;
	}
	bAiming = TRUE;
	SecondaryAim = 1;
	
	//Aiming behind
	turn larm to x-axis <-55.00> speed <90.00>;
	turn rarm to x-axis <-55.00> speed <90.00>;
	turn lwrist to x-axis <35.00> speed <160.00>;
	turn rwrist to x-axis <45.00> speed <160.00>;
	turn lwristy to y-axis <-60.00> speed <120.00>;
	turn rwristy to y-axis <45.00> speed <120.00>;
	turn larmz to z-axis <10.00> speed <60.00>;
	turn rarmz to z-axis <-10.00> speed <60.00>;
	turn lhandx to x-axis <15.00> speed <150.00>;
	turn rhandx to x-axis <15.00> speed <150.00>;
	turn lhandz to z-axis <5.00> speed <120.00>;
	turn rhandz to z-axis <10.00> speed <120.00>;
	
	//Aiming forward
	if( Heading <= <45> OR Heading >= <315> )
	{
		turn larm to x-axis <45.00> speed <90.00>;
		turn rarm to x-axis <45.00> speed <90.00>;
		turn lwrist to x-axis <80.00> speed <160.00>;
		turn rwrist to x-axis <80.00> speed <160.00>;
		turn lwristy to y-axis <0.00> speed <120.00>;
		turn rwristy to y-axis <0.00> speed <120.00>;
		turn larmz to z-axis <-30.00> speed <60.00>;
		turn rarmz to z-axis <30.00> speed <60.00>;
		turn lhandx to x-axis <75.00> speed <150.00>;
		turn rhandx to x-axis <75.00> speed <150.00>;
		turn lhandz to z-axis <30.00> speed <120.00>;
		turn rhandz to z-axis <-30.00> speed <120.00>;
	}
	
	//Aiming left
	if( Heading > <45> AND Heading < <145> )
	{
		turn larm to x-axis <15.00> speed <90.00>;
		turn rarm to x-axis <-30.00> speed <90.00>;
		turn lwrist to x-axis <80.00> speed <160.00>;
		turn rwrist to x-axis <15.00> speed <160.00>;
		turn lwristy to y-axis <0.00> speed <120.00>;
		turn rwristy to y-axis <45.00> speed <120.00>;
		turn larmz to z-axis <-45.00> speed <60.00>;
		turn rarmz to z-axis <15.00> speed <60.00>;
		turn lhandx to x-axis <75.00> speed <150.00>;
		turn rhandx to x-axis <30.00> speed <150.00>;
		turn lhandz to z-axis <30.00> speed <120.00>;
		turn rhandz to z-axis <45.00> speed <120.00>;
	}
	
	//Aiming right
	if( Heading > <225> AND Heading < <315> )
	{
		turn larm to x-axis <-30.00> speed <90.00>;
		turn rarm to x-axis <15.00> speed <90.00>;
		turn lwrist to x-axis <15.00> speed <160.00>;
		turn rwrist to x-axis <80.00> speed <160.00>;
		turn lwristy to y-axis <-45.00> speed <120.00>;
		turn rwristy to y-axis <0.00> speed <120.00>;
		turn larmz to z-axis <-15.00> speed <60.00>;
		turn rarmz to z-axis <45.00> speed <60.00>;
		turn lhandx to x-axis <30.00> speed <150.00>;
		turn rhandx to x-axis <75.00> speed <150.00>;
		turn lhandz to z-axis <-45.00> speed <120.00>;
		turn rhandz to z-axis <-30.00> speed <120.00>;
	}
	
	//Not moving
	if( !bMoving )
	{
		turn larm to x-axis <35.00> speed <90.00>;
		turn rarm to x-axis <35.00> speed <90.00>;
		turn lwrist to x-axis <45.00> speed <160.00>;
		turn rwrist to x-axis <45.00> speed <160.00>;
		turn lwristy to y-axis <0.00> speed <120.00>;
		turn rwristy to y-axis <0.00> speed <120.00>;
		turn larmz to z-axis <-30.00> speed <60.00>;
		turn rarmz to z-axis <30.00> speed <60.00>;
		turn lhandx to x-axis <0.00> speed <150.00>;
		turn rhandx to x-axis <0.00> speed <150.00>;
		turn lhandz to z-axis <0.00> speed <120.00>;
		turn rhandz to z-axis <0.00> speed <120.00>;
	}
	
	turn torso to y-axis Heading speed <350.00>;
	turn torsorecoil to y-axis <0.00> speed <350.00>;
	turn headturn to y-axis <0.00> - Heading speed <350.00>;
	turn head to y-axis Heading speed <500.00>;
	turn pitchturret to x-axis <0.00> - Pitch speed <350.00>;
	turn armpitch to x-axis <0.00> speed <180.00>;	
	wait-for-turn torso around y-axis;
	wait-for-turn pitchturret around x-axis;
	SecondaryAim = 0;
	start-script RestoreAfterDelay();
	return (1);
}

FireTertiary()
{
	show flare1;
	show flare2;	
	sleep 75;
	hide flare1;
	hide flare2;
}

Killed(Severity, CorpseType, Random)
{
	if( get BUILD_PERCENT_LEFT )
	{
		CorpseType = 3;
		return (0);
	}
	
	hide flare1;
	hide flare2;
    hide shield;
	hide gema;
	hide gemb;
	hide gemc;
	hide gemd;
	
	Random = Rand( 1, 2 );
	if( Random <= 1 )
	{
		explode lsword type FALL | BITMAP1;
	}
	Random = Rand( 1, 2 );
	if( Random <= 1 )
	{
		explode rsword type FALL | BITMAP1;
	}
	
	show gib;
	explode gib type SHATTER | BITMAP5;
	if( Severity <= 100 )
	{
		CorpseType = 1;
		explode gem type BITMAPONLY | BITMAP5;
		return (0);
	}
	CorpseType = 2;
	explode gib type SHATTER | BITMAP5;
	explode pelvis type BITMAPONLY | BITMAP5;
	explode head type FALL | SMOKE | EXPLODE_ON_HIT | BITMAP1;
	explode rboot type FALL | SMOKE | EXPLODE_ON_HIT | BITMAP1;
}
