// Arm Tor

piece base,turret,sleeve,flare,barrel;
static-var restore_delay,gun_0,canshoot;

#define SMOKEPIECE1	base
#define SIG_NUM1	2
#INCLUDE "smokeunit.h"
#INCLUDE "exptype.h"
#include "hitweap.h"
#include "rockunit.h"


Create()
	{
		hide flare;
		gun_0 = 1;
		canshoot = 1;
		restore_delay = 3000;
		start-script SmokeUnit();
	}
Reload()
	{
		SLEEP 6000;
		canshoot = 1;
	}
	
SetMaxReloadTime(time)
	{
		restore_delay = time * 2 ;
	}
	
ReStoreAfterDelay()
	{
		sleep restore_delay;
		turn turret to y-axis <0> speed <25.00>;
		turn sleeve to x-axis <0> speed <10.00>;
	}
	
AimPrimary(heading,pitch)
	{
		signal SIG_NUM1;
		set-signal-mask SIG_NUM1;
		WHILE (!canshoot )
			{
			SLEEP 25;
			}
		turn turret to y-axis heading speed <35.00>;
		turn sleeve to x-axis (0 - pitch) speed <15.00>;
		wait-for-turn turret around y-axis;
		wait-for-turn sleeve around x-axis;
		start-script RestoreAfterDelay();
		return ( TRUE );
	}

FirePrimary()
	{
		if (gun_0 == 1 )
			{
			show flare;
			sleep 100;
			turn barrel to z-axis <90> speed <600>;
			hide flare;
			}
		if (gun_0 == 2)	
			{	
			show flare;
			sleep 100;
			turn barrel to z-axis <180> speed <600>;
			hide flare;
			}
		if (gun_0 == 3)	
			{
			show flare;
			sleep 100;
			turn barrel to z-axis <270> speed <600>;
			hide flare;
			}
		if (gun_0 == 4)
			{
			show flare;
			sleep 100;
			turn barrel to z-axis <0> speed <600>;
			hide flare;
			}	
		if (gun_0 == 5)
			{
			gun_0 = 1;
			canshoot = 0;
			call-script Reload();
			}
		gun_0 = gun_0 + 1;								
	}	
	
AimFromPrimary(piecenum)
	{
	piecenum = flare;		
	}
	
QueryPrimary(piecenum)
	{
	piecenum = flare;
	}
	
SweetSpot(piecenum)	
	{
	piecenum = base;
	}
	
Killed(severity,corpsetype)
	{
		IF (severity <= 25 )
			{
			corpsetype = 1 ;
			EXPLODE  barrel type  	BITMAPONLY | BITMAP1;
			EXPLODE  base type  	BITMAPONLY | BITMAP2;
			EXPLODE  flare type  	BITMAPONLY | BITMAP3;
			EXPLODE  turret type  	BITMAPONLY | BITMAP2;
			RETURN ( 0 );
			}
		IF (severity <= 50 )
			{
			corpsetype = 2 ;
			EXPLODE  barrel type  	FALL | BITMAP1;
			EXPLODE  base type  	BITMAPONLY | BITMAP2;
			EXPLODE  flare type  	BITMAPONLY | BITMAP3;
			EXPLODE  turret type  	FALL | BITMAP2;
			RETURN ( 0 );
			}
		IF (severity <= 99 )
			{
			corpsetype = 3 ;
			EXPLODE  barrel type  	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
			EXPLODE  base type  	SHATTER | FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
			EXPLODE  flare type  	BITMAPONLY | BITMAP3;
			EXPLODE  turret type  	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
			RETURN ( 0 );
			}
		corpsetype = 3 ;
		EXPLODE  barrel type  	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		EXPLODE  base type  	SHATTER | FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		EXPLODE  flare type  	BITMAPONLY | BITMAP4;
		EXPLODE  turret type  	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	}
	