#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  body, thigh1, thigh2, leg2, foot2, leg1, foot1, dish1,
       arm1, arm2;

static-var  bMoving, Static_Var_2, moveSpeed, currentSpeed;

// Signal definitions
#define SIG_ACTIVATE			2


walkscr()
{
	if( bMoving )
	{
		move body to y-axis [-1.125000] now;
		move body to y-axis [-0.875000] speed [6.707321];
		move thigh1 to x-axis [0.000000] now;
		move thigh2 to x-axis [0.000000] now;
		move leg2 to y-axis [0.000000] now;
		move leg2 to z-axis [0.000000] now;
		move foot2 to z-axis [0.000000] now;
		move leg1 to y-axis [0.000000] now;
		move leg1 to z-axis [0.000000] now;
		move foot1 to z-axis [0.000000] now;
		turn body to z-axis <-8.703297> now;
		turn body to z-axis <-5.538462> speed <84.92967>;
		turn thigh1 to x-axis <-27.697802> now;
		turn thigh1 to x-axis <-11.076923> speed <445.8868>;
		turn thigh2 to x-axis <20.302198> now;
		turn thigh2 to x-axis <14.593407> speed <153.033>;
		turn leg2 to x-axis <0.538462> now;
		turn leg2 to x-axis <-13.989011> speed <389.8956>;
		turn foot2 to x-axis <-2.884615> now;
		turn foot2 to x-axis <12.164835> speed <403.7725>;
		turn leg1 to x-axis <3.956044> now;
		turn leg1 to x-axis <2.373626> speed <42.46484>;
		turn foot1 to x-axis <22.950549> now;
		turn foot1 to x-axis <7.120879> speed <424.6483>;
		sleep 3700/currentSpeed;
	}
	if( bMoving )
	{
		move body to y-axis [-0.750000] speed [2.989114];
		turn body to z-axis <-3.956044> speed <37.84726>;
		turn thigh1 to x-axis <2.373626> speed <321.7198>;
		turn thigh2 to x-axis <1.214286> speed <319.9912>;
		turn foot2 to x-axis <19.697802> speed <180.1582>;
		turn leg1 to x-axis <4.747253> speed <56.76484>;
		turn foot1 to x-axis <-6.329670> speed <321.7198>;
		sleep 4200/currentSpeed;
	}
	if( bMoving )
	{
		move body to y-axis [0.000000] speed [17.1875];
		turn body to z-axis <-0.791209> speed <72.53956>;
		turn thigh1 to x-axis <10.285714> speed <181.3549>;
		turn thigh2 to x-axis <-26.532967> speed <635.9572>;
		turn leg2 to x-axis <-10.335165> speed <83.62418>;
		turn foot2 to x-axis <31.016484> speed <259.4429>;
		turn leg1 to x-axis <15.032967> speed <235.7626>;
		turn foot1 to x-axis <-25.324176> speed <435.2615>;
		sleep 4400/currentSpeed;
	}
	if( bMoving )
	{
		move body to y-axis [-2.125000] speed [50.26884];
		turn body to z-axis <12.659341> speed <318.2626>;
		turn thigh1 to x-axis <21.362637> speed <262.0901>;
		turn thigh2 to x-axis <-58.043956> speed <745.4374>;
		turn leg2 to x-axis <21.115385> speed <744.2044>;
		turn foot2 to x-axis <36.681319> speed <133.9824>;
		turn leg1 to x-axis <16.615385> speed <37.43626>;
		turn foot1 to x-axis <-5.538462> speed <468.0319>;
		sleep 4200/currentSpeed;
	}
	if( bMoving )
	{
		move body to y-axis [-1.375000] speed [18.33336];
		turn body to z-axis <9.494505> speed <77.37473>;
		turn thigh1 to x-axis <18.197802> speed <77.37473>;
		turn thigh2 to x-axis <-40.631868> speed <425.5912>;
		turn leg2 to x-axis <12.412088> speed <212.7956>;
		turn foot2 to x-axis <27.978022> speed <212.7956>;
		turn leg1 to x-axis <7.120879> speed <232.1363>;
		turn foot1 to x-axis <-11.076923> speed <135.4088>;
		sleep 4100/currentSpeed;
	}
	if( bMoving )
	{
		move body to y-axis [-0.875000] speed [11.70207];
		turn body to z-axis <5.538462> speed <92.6055>;
		turn thigh1 to x-axis <9.494505> speed <203.7418>;
		turn thigh2 to x-axis <-17.681319> speed <537.1385>;
		turn leg2 to x-axis <3.703297> speed <203.7418>;
		turn foot2 to x-axis <13.730769> speed <333.3967>;
		turn leg1 to x-axis <-4.747253> speed <277.8286>;
		turn foot1 to x-axis <10.285714> speed <500.089>;
		sleep 4300/currentSpeed;
	}
	if( bMoving )
	{
		move body to y-axis [-0.375000] speed [11.70214];
		turn thigh1 to x-axis <-11.868132> speed <500.089>;
		turn thigh2 to x-axis <3.681319> speed <500.089>;
		turn leg2 to x-axis <2.912088> speed <18.51868>;
		turn foot2 to x-axis <-7.631868> speed <500.089>;
		turn leg1 to x-axis <-4.747253> speed <0>;
		turn foot1 to x-axis <17.406593> speed <166.6923>;
		sleep 4300/currentSpeed;
	}
	if( bMoving )
	{
		move body to y-axis [0.000000] speed [8.870998];
		turn body to z-axis <0.000000> speed <131.0451>;
		turn thigh1 to x-axis <-27.697802> speed <374.4231>;
		turn thigh2 to x-axis <17.131868> speed <318.2626>;
		turn leg2 to x-axis <13.203297> speed <243.3659>;
		turn foot2 to x-axis <-14.752747> speed <168.4813>;
		turn foot1 to x-axis <23.741758> speed <149.7692>;
		sleep 4200/currentSpeed;
	}
	if( bMoving )
	{
		move body to y-axis [-2.125000] speed [49.73401];
		turn body to z-axis <-8.703297> speed <203.7418>;
		turn thigh1 to x-axis <-53.021978> speed <592.7066>;
		turn thigh2 to x-axis <22.675824> speed <129.655>;
		turn foot2 to x-axis <-11.587912> speed <74.08681>;
		turn leg1 to x-axis <17.406593> speed <518.6198>;
		turn foot1 to x-axis <35.609890> speed <277.8286>;
		sleep 4300/currentSpeed;
	}
}

MotionControl(Func_Var_1)
{
	while( TRUE )
	{
		Func_Var_1 = bMoving;
		if( Func_Var_1 )
		{
			call-script walkscr();
		}
		else
		{
			turn body to z-axis <0.000000> speed <200.043956>;
			move body to y-axis [0.000000] speed [2.500000];
			turn leg1 to x-axis <0.000000> speed <200.043956>;
			turn foot1 to x-axis <0.000000> speed <200.043956>;
			turn thigh2 to x-axis <0.000000> speed <200.043956>;
			turn leg2 to x-axis <0.000000> speed <200.043956>;
			turn foot2 to x-axis <0.000000> speed <200.043956>;
		}
		sleep 100;
	}
}

UnitSpeed()
{
	while(TRUE)
	{
		currentSpeed = (get CURRENT_SPEED)*100/moveSpeed;
		if (currentSpeed<20) currentSpeed=20;
		sleep 142;
	}
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 500;
	}
	start-script UnitSpeed();
	start-script MotionControl();
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = SFXTYPE_BLACKSMOKE;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = SFXTYPE_WHITESMOKE;
			}
			emit-sfx smoketype from body;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Create()
{
	bMoving = FALSE;
	Static_Var_2 = 1000;
	moveSpeed = get MAX_SPEED;
	currentSpeed = 100;
	start-script SmokeUnit();
}

Activate()
{
	signal SIG_ACTIVATE;
	set-signal-mask SIG_ACTIVATE;
	spin dish1 around y-axis speed <100.021978>;
}

Deactivate()
{
	signal SIG_ACTIVATE;
	set-signal-mask SIG_ACTIVATE;
	turn dish1 to y-axis <0.000000> speed <100.021978>;
	wait-for-turn dish1 around y-axis;
}

StartMoving()
{
	bMoving = TRUE;
}

StopMoving()
{
	bMoving = FALSE;
}

RestoreAfterDelay()
{
	sleep Static_Var_2;
}

SweetSpot(piecenum)
{
	piecenum = body;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode arm1 type BITMAPONLY | BITMAP1;
		explode arm2 type BITMAPONLY | BITMAP2;
		explode body type BITMAPONLY | BITMAP3;
		explode dish1 type BITMAPONLY | BITMAP4;
		explode foot1 type BITMAPONLY | BITMAP5;
		explode foot2 type BITMAPONLY | BITMAP1;
		explode leg1 type BITMAPONLY | BITMAP2;
		explode leg2 type BITMAPONLY | BITMAP3;
		explode thigh1 type BITMAPONLY | BITMAP4;
		explode thigh2 type BITMAPONLY | BITMAP5;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode arm1 type FALL | BITMAP1;
		explode arm2 type FALL | BITMAP2;
		explode body type BITMAPONLY | BITMAP3;
		explode dish1 type SHATTER | BITMAP4;
		explode foot1 type FALL | BITMAP5;
		explode foot2 type FALL | BITMAP1;
		explode leg1 type FALL | BITMAP2;
		explode leg2 type FALL | BITMAP3;
		explode thigh1 type FALL | BITMAP4;
		explode thigh2 type FALL | BITMAP5;
		return (0);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode arm1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode arm2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode body type BITMAPONLY | BITMAP3;
		explode dish1 type SHATTER | BITMAP4;
		explode foot1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
		explode foot2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode leg1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode leg2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode thigh1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode thigh2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
		return (0);
	}
	corpsetype = 3;
	explode arm1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode arm2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode body type BITMAPONLY | BITMAP3;
	explode dish1 type SHATTER | EXPLODE_ON_HIT | BITMAP4;
	explode foot1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
	explode foot2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode leg1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode leg2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode thigh1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode thigh2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
	return (0);
}
