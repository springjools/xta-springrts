#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  torso, gun, rfirept, lfirept, rgun, lgun, pelvis, rleg,
       rfoot, lleg, lfoot, lthigh, rthigh, ground;

static-var  Static_Var_1, gun_1, bMoving, bAiming, moveSpeed, currentSpeed;


walk()
{
	if( bMoving )
	{
		move pelvis to y-axis [2.375000] now;
		move torso to y-axis [2.250000] now;
		move torso to z-axis [0.000000] now;
		move rleg to z-axis [0.000000] now;
		move rfoot to z-axis [0.000000] now;
		move lleg to z-axis [0.000000] now;
		move lfoot to z-axis [0.000000] now;
		move gun to z-axis [0.000000] now;
		move lfirept to x-axis [0.000000] now;
		move lfirept to y-axis [0.000000] now;
		move rfirept to x-axis [0.000000] now;
		move rfirept to y-axis [0.000000] now;
		turn torso to x-axis <-10.549451> now;
		turn lthigh to x-axis <-13.005495> now;
		turn rthigh to x-axis <13.005495> now;
		turn rleg to x-axis <-50.637363> now;
		turn rfoot to x-axis <56.967033> now;
		turn lleg to x-axis <13.005495> now;
		turn lfoot to x-axis <0.000000> now;
		sleep 2500/currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [2.000000] now;
		move torso to y-axis [2.250000] now;
		turn torso to x-axis <-11.604396> now;
		turn lthigh to x-axis <-7.379121> now;
		turn rthigh to x-axis <-4.560440> now;
		turn rleg to x-axis <-52.747253> now;
		turn rfoot to x-axis <36.571429> now;
		turn lleg to x-axis <21.445055> now;
		turn lfoot to x-axis <-3.868132> now;
		sleep 2000/currentSpeed;
	}
	if( bMoving )
	{
		turn torso to x-axis <-8.082418> now;
		turn rthigh to x-axis <-7.879121> now;
		sleep 1500/currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [1.625000] now;
		turn torso to x-axis <-4.923077> now;
		turn lthigh to x-axis <-5.269231> now;
		turn rthigh to x-axis <-11.593407> now;
		turn rleg to x-axis <-68.214286> now;
		turn rfoot to x-axis <39.027473> now;
		turn lleg to x-axis <28.835165> now;
		turn lfoot to x-axis <-8.082418> now;
		sleep 3000/currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [1.375000] now;
		turn torso to x-axis <4.214286> now;
		turn lthigh to x-axis <0.346154> now;
		turn rthigh to x-axis <-22.505495> now;
		turn rleg to x-axis <-38.324176> now;
		turn rfoot to x-axis <61.538462> now;
		turn lleg to x-axis <28.478022> now;
		turn lfoot to x-axis <16.879121> now;
		sleep 1500/currentSpeed;
	}
	if( bMoving )
	{
		move torso to y-axis [1.875000] now;
		turn torso to x-axis <4.923077> now;
		sleep 1500/currentSpeed;
	}
	if( bMoving )
	{
		move torso to y-axis [1.000000] now;
		turn torso to x-axis <6.681319> now;
		sleep 2000/currentSpeed;
	}
	if( bMoving )
	{
		move torso to y-axis [1.750000] now;
		turn torso to x-axis <5.626374> now;
		sleep 1500/currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [1.625000] now;
		move torso to y-axis [2.250000] now;
		turn torso to x-axis <0.000000> now;
		turn lthigh to x-axis <12.659341> now;
		turn rthigh to x-axis <-20.038462> now;
		turn rleg to x-axis <-34.456044> now;
		turn rfoot to x-axis <54.505495> now;
		turn lleg to x-axis <7.379121> now;
		turn lfoot to x-axis <19.335165> now;
		sleep 3000/currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [2.000000] now;
		turn torso to x-axis <-5.269231> now;
		turn lthigh to x-axis <15.824176> now;
		turn rthigh to x-axis <-17.923077> now;
		turn rleg to x-axis <-27.071429> now;
		turn rfoot to x-axis <45.005495> now;
		turn lleg to x-axis <-19.692308> now;
		turn lfoot to x-axis <27.769231> now;
		sleep 2500/currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [2.375000] now;
		turn torso to x-axis <-10.549451> now;
		turn lthigh to x-axis <8.082418> now;
		turn rthigh to x-axis <-13.703297> now;
		turn rleg to x-axis <13.714286> now;
		turn rfoot to x-axis <0.000000> now;
		turn lleg to x-axis <-38.324176> now;
		turn lfoot to x-axis <42.549451> now;
		sleep 2500/currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [2.000000] now;
		turn torso to x-axis <-11.401099> now;
		turn lthigh to x-axis <-0.346154> now;
		turn rthigh to x-axis <-11.593407> now;
		turn rleg to x-axis <27.780220> now;
		turn rfoot to x-axis <-11.247253> now;
		turn lleg to x-axis <-62.945055> now;
		turn lfoot to x-axis <67.516484> now;
		sleep 2000/currentSpeed;
	}
	if( bMoving )
	{
		turn torso to x-axis <-8.082418> now;
		turn lthigh to x-axis <-5.082418> now;
		sleep 1500/currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [1.625000] now;
		turn torso to x-axis <-4.214286> now;
		turn lthigh to x-axis <-7.736264> now;
		turn rthigh to x-axis <-7.379121> now;
		turn rleg to x-axis <31.291209> now;
		turn rfoot to x-axis <-9.137363> now;
		turn lleg to x-axis <-64.346154> now;
		turn lfoot to x-axis <34.104396> now;
		sleep 3000/currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [1.375000] now;
		move torso to y-axis [1.875000] now;
		turn torso to x-axis <4.214286> now;
		turn lthigh to x-axis <-21.093407> now;
		turn rthigh to x-axis <-1.747253> now;
		turn rleg to x-axis <28.835165> now;
		turn rfoot to x-axis <24.615385> now;
		turn lleg to x-axis <-36.923077> now;
		turn lfoot to x-axis <57.313187> now;
		sleep 1500/currentSpeed;
	}
	if( bMoving )
	{
		move torso to y-axis [1.375000] now;
		turn torso to x-axis <5.626374> now;
		sleep 1500/currentSpeed;
	}
	if( bMoving )
	{
		move torso to y-axis [1.000000] now;
		turn torso to x-axis <6.324176> now;
		sleep 2000/currentSpeed;
	}
	if( bMoving )
	{
		move torso to y-axis [1.875000] now;
		turn torso to x-axis <4.214286> now;
		sleep 1500/currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [1.625000] now;
		move torso to y-axis [2.250000] now;
		turn torso to x-axis <0.000000> now;
		turn lthigh to x-axis <-15.824176> now;
		turn rthigh to x-axis <10.192308> now;
		turn rleg to x-axis <-12.659341> now;
		turn lleg to x-axis <-29.181319> now;
		turn lfoot to x-axis <45.357143> now;
		sleep 3000/currentSpeed;
	}
	move pelvis to y-axis [2.000000] now;
	turn torso to x-axis <-5.269231> now;
	turn lthigh to x-axis <-13.357143> now;
	turn rthigh to x-axis <10.549451> now;
	turn rleg to x-axis <-30.593407> now;
	turn rfoot to x-axis <32.703297> now;
	turn lleg to x-axis <-14.769231> now;
	turn lfoot to x-axis <28.126374> now;
	sleep 2500/currentSpeed;
}

walklegs()
{
	if( bMoving )
	{
		move pelvis to y-axis [2.375000] now;
		move rleg to z-axis [0.000000] now;
		move rfoot to z-axis [0.000000] now;
		move lleg to z-axis [0.000000] now;
		move lfoot to z-axis [0.000000] now;
		move gun to z-axis [0.000000] now;
		move lfirept to x-axis [0.000000] now;
		move lfirept to y-axis [0.000000] now;
		move rfirept to x-axis [0.000000] now;
		move rfirept to y-axis [0.000000] now;
		turn lthigh to x-axis <-13.005495> now;
		turn rthigh to x-axis <13.005495> now;
		turn rleg to x-axis <-50.637363> now;
		turn rfoot to x-axis <56.967033> now;
		turn lleg to x-axis <13.005495> now;
		turn lfoot to x-axis <0.000000> now;
		sleep 2500/currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [2.000000] now;
		turn lthigh to x-axis <-7.379121> now;
		turn rthigh to x-axis <-4.560440> now;
		turn rleg to x-axis <-52.747253> now;
		turn rfoot to x-axis <36.571429> now;
		turn lleg to x-axis <21.445055> now;
		turn lfoot to x-axis <-3.868132> now;
		sleep 2000/currentSpeed;
	}
	if( bMoving )
	{
		turn rthigh to x-axis <-7.879121> now;
		sleep 1500/currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [1.625000] now;
		turn lthigh to x-axis <-5.269231> now;
		turn rthigh to x-axis <-11.593407> now;
		turn rleg to x-axis <-68.214286> now;
		turn rfoot to x-axis <39.027473> now;
		turn lleg to x-axis <28.835165> now;
		turn lfoot to x-axis <-8.082418> now;
		sleep 3000/currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [1.375000] now;
		turn lthigh to x-axis <0.346154> now;
		turn rthigh to x-axis <-22.505495> now;
		turn rleg to x-axis <-38.324176> now;
		turn rfoot to x-axis <61.538462> now;
		turn lleg to x-axis <28.478022> now;
		turn lfoot to x-axis <16.879121> now;
		sleep 3500/currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [1.625000] now;
		turn lthigh to x-axis <12.659341> now;
		turn rthigh to x-axis <-20.038462> now;
		turn rleg to x-axis <-34.456044> now;
		turn rfoot to x-axis <54.505495> now;
		turn lleg to x-axis <7.379121> now;
		turn lfoot to x-axis <19.335165> now;
		sleep 3000/currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [2.000000] now;
		turn lthigh to x-axis <15.824176> now;
		turn rthigh to x-axis <-17.923077> now;
		turn rleg to x-axis <-27.071429> now;
		turn rfoot to x-axis <45.005495> now;
		turn lleg to x-axis <-19.692308> now;
		turn lfoot to x-axis <27.769231> now;
		sleep 2500/currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [2.375000] now;
		turn lthigh to x-axis <8.082418> now;
		turn rthigh to x-axis <-13.703297> now;
		turn rleg to x-axis <13.714286> now;
		turn rfoot to x-axis <0.000000> now;
		turn lleg to x-axis <-38.324176> now;
		turn lfoot to x-axis <42.549451> now;
		sleep 2500/currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [2.000000] now;
		turn lthigh to x-axis <-0.346154> now;
		turn rthigh to x-axis <-11.593407> now;
		turn rleg to x-axis <27.780220> now;
		turn rfoot to x-axis <-11.247253> now;
		turn lleg to x-axis <-62.945055> now;
		turn lfoot to x-axis <67.516484> now;
		sleep 2000/currentSpeed;
	}
	if( bMoving )
	{
		turn lthigh to x-axis <-5.082418> now;
		sleep 1500/currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [1.625000] now;
		turn lthigh to x-axis <-7.736264> now;
		turn rthigh to x-axis <-7.379121> now;
		turn rleg to x-axis <31.291209> now;
		turn rfoot to x-axis <-9.137363> now;
		turn lleg to x-axis <-64.346154> now;
		turn lfoot to x-axis <34.104396> now;
		sleep 3000/currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [1.375000] now;
		turn lthigh to x-axis <-21.093407> now;
		turn rthigh to x-axis <-1.747253> now;
		turn rleg to x-axis <28.835165> now;
		turn rfoot to x-axis <24.615385> now;
		turn lleg to x-axis <-36.923077> now;
		turn lfoot to x-axis <57.313187> now;
		sleep 3500/currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [1.625000] now;
		turn lthigh to x-axis <-15.824176> now;
		turn rthigh to x-axis <10.192308> now;
		turn rleg to x-axis <-12.659341> now;
		turn lleg to x-axis <-29.181319> now;
		turn lfoot to x-axis <45.357143> now;
		sleep 3000/currentSpeed;
	}
	move pelvis to y-axis [2.000000] now;
	turn lthigh to x-axis <-13.357143> now;
	turn rthigh to x-axis <10.549451> now;
	turn rleg to x-axis <-30.593407> now;
	turn rfoot to x-axis <32.703297> now;
	turn lleg to x-axis <-14.769231> now;
	turn lfoot to x-axis <28.126374> now;
	sleep 2500/currentSpeed;
}

MotionControl(moving, aiming, justmoved)
{
	justmoved = TRUE;
	while( TRUE )
	{
		moving = bMoving;
		aiming = bAiming;
		if( moving )
		{
			if( aiming )
			{
				call-script walklegs();
			}
			else
			{
				call-script walk();
			}
			justmoved = TRUE;
		}
		else
		{
			if( justmoved )
			{
				move pelvis to y-axis [0.000000] speed [2.500000];
				turn rthigh to x-axis <0.000000> speed <200.038462>;
				turn rleg to x-axis <0.000000> speed <200.038462>;
				turn rfoot to x-axis <0.000000> speed <200.038462>;
				turn lthigh to x-axis <0.000000> speed <200.038462>;
				turn lleg to x-axis <0.000000> speed <200.038462>;
				turn lfoot to x-axis <0.000000> speed <200.038462>;
				if( !aiming )
				{
					turn torso to y-axis <0.000000> speed <90.016484>;
					turn gun to x-axis <0.000000> speed <200.038462>;
				}
				justmoved = FALSE;
			}
			sleep 100;
		}
	}
}

UnitSpeed()
{
	while(TRUE)
	{
		currentSpeed = (get CURRENT_SPEED)*100/moveSpeed;
		if (currentSpeed<20) currentSpeed=20;
		sleep 142;
	}
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 500;
	}
	start-script UnitSpeed();
	start-script MotionControl();
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 258;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 257;
			}
			emit-sfx smoketype from torso;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Create()
{
	hide rfirept;
	hide lfirept;
	turn rfirept to y-axis <180.000000> now;
	turn lfirept to y-axis <180.000000> now;
	bMoving = FALSE;
	bAiming = 0;
	gun_1 = 0;
	Static_Var_1 = 0;
	moveSpeed = get MAX_SPEED;
	currentSpeed = 100;
	start-script SmokeUnit();
}

StartMoving()
{
	bMoving = TRUE;
}

StopMoving()
{
	bMoving = FALSE;
}

SweetSpot(piecenum)
{
	piecenum = torso;
}

AimFromPrimary(piecenum)
{
	piecenum = gun;
}

QueryPrimary(piecenum)
{
	piecenum = rfirept + gun_1;
}

RestoreAfterDelay()
{
	sleep 2750;
	turn torso to y-axis <0.000000> speed <90.016484>;
	turn gun to x-axis <0.000000> speed <45.005495>;
	bAiming = 0;
}

AimWeapon1(heading, pitch)
{
	if( pitch >= 10012) return (0);
	signal 2;
	set-signal-mask 2;
	turn torso to y-axis heading speed <130.000000>;
	turn gun to x-axis <0.000000> - pitch speed <35.000000>;
	wait-for-turn torso around y-axis;
	wait-for-turn gun around x-axis;
	return (1);
}

FirePrimary()
{
	if( gun_1 )
	{
		move lgun to z-axis [-5.000000] speed [150.000000];
		emit-sfx UNIT_SFX1 from lfirept;
		sleep 100;
		wait-for-move lgun along z-axis;
		move lgun to z-axis [0.000000] speed [10.000000];
		wait-for-move lgun along z-axis;
	}
	else
	{
		move rgun to z-axis [-5.000000] speed [150.000000];
		emit-sfx UNIT_SFX1 from rfirept;
		sleep 100;
		wait-for-move rgun along z-axis;
		move rgun to z-axis [0.000000] speed [10.000000];
		wait-for-move rgun along z-axis;
	}
	gun_1 = !gun_1;
}

AimWeapon2(heading, pitch)
{
	if (pitch < 10012) return (0);
	signal 2;
	set-signal-mask 2;
	turn torso to y-axis heading speed <130.000000>;
	turn gun to x-axis <0.000000> - pitch speed <35.000000>;
	wait-for-turn torso around y-axis;
	wait-for-turn gun around x-axis;
	return (1);
}

FireWeapon2()
{
	if( gun_1 )
	{
		move lgun to z-axis [-5.000000] speed [150.000000];
		emit-sfx UNIT_SFX1 from lfirept;
		sleep 100;
		wait-for-move lgun along z-axis;
		move lgun to z-axis [0.000000] speed [10.000000];
		wait-for-move lgun along z-axis;
	}
	else
	{
		move rgun to z-axis [-5.000000] speed [150.000000];
		emit-sfx UNIT_SFX1 from rfirept;
		sleep 100;
		wait-for-move rgun along z-axis;
		move rgun to z-axis [0.000000] speed [10.000000];
		wait-for-move rgun along z-axis;
	}
	gun_1 = !gun_1;
}

QueryWeapon2(piecenum)
{
	piecenum = rfirept + gun_1;
}

AimFromWeapon2(piecenum)
{
	piecenum = gun;
}

Killed(severity, corpsetype)
{
	hide rfirept;
	hide lfirept;
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode gun type SHATTER | BITMAP2;
		explode lfirept type FALL | BITMAP3;
		explode lfoot type FALL | BITMAP4;
		explode lgun type FALL | BITMAP5;
		explode lleg type FALL | BITMAP1;
		explode lthigh type FALL | BITMAP2;
		explode pelvis type FALL | BITMAP3;
		explode rfirept type FALL | BITMAP3;
		explode rfoot type FALL | BITMAP4;
		explode rgun type FALL | BITMAP5;
		explode rleg type FALL | BITMAP1;
		explode rthigh type FALL | BITMAP2;
		explode torso type BITMAPONLY | BITMAP5;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode ground type FALL | BITMAP1;
		explode gun type SHATTER | BITMAP2;
		explode lfirept type FALL | BITMAP3;
		explode lfoot type FALL | BITMAP4;
		explode lgun type FALL | BITMAP5;
		explode lleg type FALL | BITMAP1;
		explode lthigh type FALL | BITMAP2;
		explode pelvis type FALL | BITMAP3;
		explode rfirept type FALL | BITMAP3;
		explode rfoot type FALL | BITMAP4;
		explode rgun type FALL | BITMAP5;
		explode rleg type FALL | BITMAP1;
		explode rthigh type FALL | BITMAP2;
		explode torso type BITMAPONLY | BITMAP5;
		return (0);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode ground type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode gun type SHATTER | BITMAP2;
		explode lfirept type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode lfoot type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode lgun type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
		explode lleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode lthigh type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode pelvis type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode rfirept type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode rfoot type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode rgun type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
		explode rleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode rthigh type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode torso type BITMAPONLY | BITMAP5;
		return (0);
	}
	corpsetype = 3;
	explode ground type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode gun type SHATTER | EXPLODE_ON_HIT | BITMAP2;
	explode lfirept type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode lfoot type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode lgun type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
	explode lleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode lthigh type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode pelvis type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode rfirept type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode rfoot type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode rgun type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
	explode rleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode rthigh type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode torso type BITMAPONLY | BITMAP5;
}
