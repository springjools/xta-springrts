#define TAK			// This is a TAK script

#include "sfxtype.h"
#include "exptype.h"

piece  body, turret, flare, barrel, lfupleg, lrupleg, rrupleg, head,
       rfupleg, rrleg, rfleg, lrleg, lfleg, missilebase1, missilebase2, sleeve,
       sleeve2, flare2, flare3, barrel2, barrel3;

static-var  bMoving, bAiming, Static_Var_3, restore_delay, Static_Var_7, Static_Var_8;


walk()
{
	if( bMoving )
	{
		move lfupleg to y-axis [0.000000] now;
		move lfupleg to y-axis [0.625000] speed [5.681778];
		move lrupleg to y-axis [0.000000] now;
		move lrupleg to y-axis [2.250000] speed [20.454544];
		move rrupleg to y-axis [0.000000] now;
		move rrupleg to y-axis [2.000000] speed [18.181778];
		turn body to x-axis <11.835165> now;
		turn body to x-axis <22.258242> speed <94.758242>;
		turn head to x-axis <8.527473> now;
		turn head to x-axis <20.368132> speed <107.681319>;
		turn lfupleg to x-axis <-50.214286> now;
		turn lfupleg to x-axis <-22.258242> speed <254.126374>;
		turn lrupleg to x-axis <23.214286> now;
		turn lrupleg to x-axis <-28.901099> speed <473.791209>;
		turn rfupleg to x-axis <-49.269231> now;
		turn rfupleg to x-axis <-32.681319> speed <150.747253>;
		turn rrupleg to x-axis <27.478022> now;
		turn rrupleg to x-axis <-20.846154> speed <439.335165>;
		turn rrleg to x-axis <45.005495> now;
		turn rrleg to x-axis <-24.637363> speed <633.159341>;
		turn rfleg to x-axis <0.000000> now;
		turn rfleg to x-axis <12.313187> speed <111.989011>;
		turn lrleg to x-axis <44.527473> now;
		turn lrleg to x-axis <-9.945055> speed <495.335165>;
		sleep 110;
	}
	if( bMoving )
	{
		move lfupleg to y-axis [1.875000] speed [11.061905];
		move lrupleg to y-axis [4.000000] speed [15.486725];
		move rfupleg to y-axis [2.125000] speed [18.805283];
		move rrupleg to y-axis [3.625000] speed [14.380493];
		turn body to x-axis <0.945055> speed <188.681319>;
		turn lfupleg to x-axis <53.538462> speed <670.857143>;
		turn lrupleg to x-axis <-39.791209> speed <96.434066>;
		turn rfupleg to x-axis <51.170330> speed <742.137363>;
		turn rrupleg to x-axis <-32.214286> speed <100.626374>;
		turn rrleg to x-axis <14.681319> speed <348.005495>;
		turn rfleg to x-axis <-52.115385> speed <570.236264>;
		turn lrleg to x-axis <25.582418> speed <314.467033>;
		turn lfleg to x-axis <-52.582418> speed <465.412088>;
		sleep 113;
	}
	if( bMoving )
	{
		move lrupleg to y-axis [4.562500] speed [10.044647];
		move rrupleg to y-axis [4.312500] speed [12.276779];
		turn body to x-axis <-12.549451> speed <241.126374>;
		turn lfupleg to x-axis <87.412088> speed <604.934066>;
		turn lrupleg to x-axis <-61.115385> speed <380.725275>;
		turn rfupleg to x-axis <82.670330> speed <562.637363>;
		turn rrupleg to x-axis <-61.824176> speed <528.791209>;
		turn rrleg to x-axis <72.725275> speed <1036.434066>;
		turn rfleg to x-axis <-58.038462> speed <105.758242>;
		turn lrleg to x-axis <71.538462> speed <820.681319>;
		sleep 56;
	}
	if( bMoving )
	{
		move lrupleg to y-axis [4.125000] speed [7.543076];
		move rrupleg to y-axis [4.250000] speed [1.077545];
		turn body to x-axis <-26.049451> speed <232.813187>;
		turn lfupleg to x-axis <121.291209> speed <584.071429>;
		turn lrupleg to x-axis <-32.214286> speed <498.302198>;
		turn rfupleg to x-axis <114.181319> speed <543.225275>;
		turn rrupleg to x-axis <-31.269231> speed <526.890110>;
		turn rrleg to x-axis <54.956044> speed <306.335165>;
		turn rfleg to x-axis <-63.956044> speed <102.104396>;
		turn lrleg to x-axis <57.324176> speed <245.060440>;
		sleep 58;
	}
	if( bMoving )
	{
		move lrupleg to y-axis [2.375000] speed [15.625000];
		move rrupleg to y-axis [2.750000] speed [13.392822];
		turn body to x-axis <0.000000> speed <232.659341>;
		turn head to x-axis <0.000000> speed <181.901099>;
		turn lfupleg to x-axis <60.170330> speed <545.714286>;
		turn lrupleg to x-axis <3.780220> speed <321.505495>;
		turn rfupleg to x-axis <53.060440> speed <545.714286>;
		turn rrupleg to x-axis <-3.313187> speed <249.582418>;
		turn rrleg to x-axis <30.313187> speed <219.978022>;
		turn rfleg to x-axis <26.527473> speed <807.989011>;
		turn lrleg to x-axis <22.736264> speed <308.813187>;
		turn lfleg to x-axis <13.258242> speed <588.016484>;
		sleep 112;
	}
}

walklegs()
{
	if( bMoving )
	{
		move lrupleg to y-axis [2.750000] now;
		move lrupleg to y-axis [1.750000] speed [7.407394];
		move rfupleg to y-axis [1.875000] now;
		move rfupleg to y-axis [3.375000] speed [11.111099];
		move rrupleg to y-axis [2.250000] now;
		move rrupleg to y-axis [3.000000] speed [5.555542];
		turn head to x-axis <1.412088> now;
		turn head to x-axis <8.527473> speed <52.637363>;
		turn lfupleg to x-axis <-12.313187> now;
		turn lfupleg to x-axis <0.000000> speed <91.247253>;
		turn lrupleg to x-axis <-56.379121> now;
		turn lrupleg to x-axis <-44.527473> speed <87.736264>;
		turn rfupleg to x-axis <56.379121> now;
		turn rfupleg to x-axis <87.648352> speed <231.626374>;
		turn rrupleg to x-axis <-47.379121> now;
		turn rrupleg to x-axis <-66.324176> speed <140.379121>;
		turn rrleg to x-axis <12.791209> now;
		turn rrleg to x-axis <39.791209> speed <200.038462>;
		turn rfleg to x-axis <-38.846154> now;
		turn lrleg to x-axis <75.802198> now;
		turn lrleg to x-axis <70.115385> speed <42.115385>;
		turn lfleg to x-axis <0.467033> now;
		sleep 135;
	}
	if( bMoving )
	{
		move lfupleg to y-axis [1.875000] speed [13.786728];
		move lrupleg to y-axis [1.125000] speed [4.595551];
		turn head to x-axis <-6.626374> speed <111.478022>;
		turn lfupleg to x-axis <49.747253> speed <365.791209>;
		turn lrupleg to x-axis <-9.000000> speed <261.280220>;
		turn rfupleg to x-axis <29.368132> speed <428.505495>;
		turn rrupleg to x-axis <-49.747253> speed <121.923077>;
		turn rrleg to x-axis <48.324176> speed <62.703297>;
		turn rfleg to x-axis <22.258242> speed <449.412088>;
		turn lrleg to x-axis <70.593407> speed <3.478022>;
		turn lfleg to x-axis <-46.901099> speed <348.379121>;
		sleep 136;
	}
	if( bMoving )
	{
		move lrupleg to y-axis [3.250000] speed [15.398544];
		move rfupleg to y-axis [1.125000] speed [16.304337];
		move rrupleg to y-axis [2.000000] speed [7.246338];
		turn head to x-axis <1.412088> speed <58.357143>;
		turn lfupleg to x-axis <56.846154> speed <51.489011>;
		turn lrupleg to x-axis <-45.478022> speed <264.357143>;
		turn rfupleg to x-axis <-21.791209> speed <370.791209>;
		turn rrupleg to x-axis <-40.269231> speed <68.659341>;
		turn rrleg to x-axis <45.956044> speed <17.159341>;
		turn rfleg to x-axis <4.736264> speed <127.027473>;
		turn lrleg to x-axis <51.170330> speed <140.758242>;
		turn lfleg to x-axis <-49.747253> speed <20.593407>;
		sleep 138;
	}
	if( bMoving )
	{
		move lfupleg to y-axis [2.250000] speed [2.757339];
		move rrupleg to y-axis [1.750000] speed [1.838226];
		turn head to x-axis <4.258242> speed <20.901099>;
		turn lfupleg to x-axis <81.489011> speed <181.148352>;
		turn lrupleg to x-axis <-61.115385> speed <114.956044>;
		turn rfupleg to x-axis <15.159341> speed <271.736264>;
		turn rrupleg to x-axis <-38.368132> speed <13.934066>;
		turn rrleg to x-axis <49.269231> speed <24.379121>;
		turn rfleg to x-axis <-33.159341> speed <278.703297>;
		turn lrleg to x-axis <26.049451> speed <184.637363>;
		turn lfleg to x-axis <-80.071429> speed <222.956044>;
		sleep 136;
	}
	if( bMoving )
	{
		move lrupleg to y-axis [3.875000] speed [4.595551];
		move rrupleg to y-axis [1.250000] speed [3.676437];
		turn head to x-axis <7.571429> speed <24.379121>;
		turn lfupleg to x-axis <87.170330> speed <41.802198>;
		turn lrupleg to x-axis <-78.170330> speed <125.412088>;
		turn rfupleg to x-axis <31.736264> speed <121.923077>;
		turn rrupleg to x-axis <-31.736264> speed <48.769231>;
		turn rrleg to x-axis <55.901099> speed <48.769231>;
		turn lrleg to x-axis <78.170330> speed <383.214286>;
		turn lfleg to x-axis <-28.901099> speed <376.247253>;
		sleep 136;
	}
	if( bMoving )
	{
		move lfupleg to y-axis [2.750000] speed [3.649612];
		move lrupleg to y-axis [3.125000] speed [5.474442];
		move rfupleg to y-axis [2.000000] speed [6.386826];
		move rrupleg to y-axis [2.125000] speed [6.386826];
		turn head to x-axis <5.203297> speed <17.291209>;
		turn lfupleg to x-axis <43.582418> speed <318.170330>;
		turn lrupleg to x-axis <-70.593407> speed <55.324176>;
		turn rfupleg to x-axis <51.637363> speed <145.247253>;
		turn rrupleg to x-axis <-23.681319> speed <58.791209>;
		turn rrleg to x-axis <59.214286> speed <24.203297>;
		turn rfleg to x-axis <-51.637363> speed <134.868132>;
		turn lfleg to x-axis <1.412088> speed <221.335165>;
		sleep 137;
	}
	if( bMoving )
	{
		move lfupleg to y-axis [1.375000] speed [10.110260];
		move lrupleg to y-axis [2.625000] speed [3.676437];
		turn head to x-axis <0.000000> speed <38.313187>;
		turn lfupleg to x-axis <16.104396> speed <202.060440>;
		turn lrupleg to x-axis <-65.857143> speed <34.835165>;
		turn rfupleg to x-axis <78.170330> speed <195.093407>;
		turn rrupleg to x-axis <-4.258242> speed <142.835165>;
		turn rrleg to x-axis <-20.368132> speed <585.280220>;
		turn rfleg to x-axis <-73.912088> speed <163.736264>;
		turn lrleg to x-axis <75.324176> speed <20.901099>;
		turn lfleg to x-axis <-41.692308> speed <317.027473>;
		sleep 136;
	}
}

SmokeUnit(Func_Var_1, Func_Var_2, Func_Var_3)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 500;
	}
	while( TRUE )
	{
		Func_Var_1 = get HEALTH;
		if( Func_Var_1 < 66 )
		{
			Func_Var_3 = SFXTYPE_BLACKSMOKE;
			if( Rand( 1, 66 ) < Func_Var_1 )
			{
				Func_Var_3 = SFXTYPE_WHITESMOKE;
			}
			emit-sfx Func_Var_3 from turret;
		}
		Func_Var_2 = Func_Var_1 * 50;
		if( Func_Var_2 < 200 )
		{
			Func_Var_2 = 200;
		}
		sleep Func_Var_2;
	}
}

MotionControl()
{
	var Func_Var_1, Func_Var_2, Func_Var_3;
	Func_Var_3 = 1;
	while( TRUE )
	{
		Func_Var_1 = bMoving;
		Func_Var_2 = bAiming;
		if( Func_Var_1 )
		{
			if( Func_Var_2 )
			{
				Static_Var_3 = 1;
				call-script walklegs();
			}
			else
			{
				Static_Var_3 = 0;
				call-script walk();
			}
			Func_Var_3 = 1;
		}
		else
		{
			Static_Var_3 = 1;
			if( Func_Var_3 )
			{
				move lrupleg to y-axis [0.000000] speed [12.500000];
				move rfupleg to y-axis [0.000000] speed [12.500000];
				move rrupleg to y-axis [0.000000] speed [12.500000];
				turn head to x-axis <0.000000> speed <200.038462>;
				turn lfupleg to x-axis <0.000000> speed <200.038462>;
				turn lrupleg to x-axis <0.000000> speed <200.038462>;
				turn rfupleg to x-axis <0.000000> speed <200.038462>;
				turn rrupleg to x-axis <0.000000> speed <200.038462>;
				turn rrleg to x-axis <0.000000> speed <200.038462>;
				turn lrleg to x-axis <0.000000> speed <200.038462>;
				Func_Var_3 = 0;
			}
			sleep 100;
		}
	}
}

Create()
{
	play-sound( "fleabossattack", 9999 );
	play-sound( "fleabossattack", 9999 );
	play-sound( "fleabossattack", 9999 );
	play-sound( "fleabossattack", 9999 );
	hide flare;
	hide flare2;
	hide flare3;
	bMoving = 0;
	bAiming = 0;
	Static_Var_3 = 1;
	Static_Var_7 = 0;
	Static_Var_8 = 0;
	restore_delay = 3000;
	start-script MotionControl();
	start-script SmokeUnit();
}

SetMaxReloadTime(time)
{
	restore_delay = time * 2;
}

StartMoving()
{
	bMoving = 1;
}

StopMoving()
{
	bMoving = 0;
}

SweetSpot(piecenum)
{
	piecenum = body;
}

RestoreAfterDelay()
{
	sleep restore_delay;
	turn turret to y-axis <0.000000> speed <150.027473>;
	wait-for-turn turret around y-axis;
	bAiming = 0;
}

AimFromPrimary(piecenum)
{
	piecenum = 1;
}

QueryPrimary(piecenum)
{
	piecenum = 2;
}

AimPrimary(heading, pitch)
{
	signal 2;
	set-signal-mask 2;
	bAiming = 1;
	while( !Static_Var_3 )
	{
		sleep 100;
	}
	turn turret to y-axis heading speed <2500.060440>;
	wait-for-turn turret around y-axis;
	start-script RestoreAfterDelay();
	return (1);
}

FirePrimary()
{
	show flare;
	sleep 100;
	hide flare;
}

AimWeapon2(heading, pitch)
{
	signal 4;
	set-signal-mask 4;
	turn sleeve to y-axis heading speed <350.000000>;
	turn sleeve to x-axis <0.000000> - pitch speed <150.000000>;
	wait-for-turn sleeve around y-axis;
	wait-for-turn sleeve around x-axis;
	start-script RestoreAfterDelay();
	return (1);
}

FireWeapon2()
{
	++Static_Var_7;
	if( Static_Var_7 == 4 ) Static_Var_7 = 0;
	sleep 100;
	turn barrel2 to z-axis <90.000000> * Static_Var_7 speed <600.000000>;
}

AimFromWeapon2(piecenum)
{
	piecenum = flare2;
}

QueryWeapon2(piecenum)
{
	piecenum = flare2;
}

AimWeapon3(heading, pitch)
{
	signal 8;
	set-signal-mask 8;
	turn sleeve2 to y-axis heading speed <350.000000>;
	turn sleeve2 to x-axis <0.000000> - pitch speed <150.000000>;
	wait-for-turn sleeve2 around y-axis;
	wait-for-turn sleeve2 around x-axis;
	start-script RestoreAfterDelay();
	return (1);
}

AimFromWeapon3(piecenum)
{
	piecenum = flare3;
}

QueryWeapon3(piecenum)
{
	piecenum = flare3;
}

FireWeapon3()
{
	++Static_Var_8;
	if( Static_Var_8 == 4 ) Static_Var_8 = 0;
	sleep 100;
	turn barrel3 to z-axis <90.000000> * Static_Var_8 speed <600.000000>;
}

Killed(Func_Var_1, Func_Var_2)
{
	hide flare;
	if( Func_Var_1 <= 25 )
	{
		Func_Var_2 = 1;
		explode turret type FALL | 8 | 16 | 2 | EXPTYPE_BLOODEXPLOSION;
		explode barrel type BITMAPONLY | EXPTYPE_XLARGEEXPLOSION;
		explode rrleg type BITMAPONLY | EXPTYPE_BLOODEXPLOSION;
		explode rfleg type BITMAPONLY | EXPTYPE_XLARGEEXPLOSION;
		explode lrleg type BITMAPONLY | EXPTYPE_XLARGEEXPLOSION;
		explode lfleg type BITMAPONLY | EXPTYPE_XLARGEEXPLOSION;
		explode body type BITMAPONLY | EXPTYPE_BLOODEXPLOSION;
		return (0);
	}
	if( Func_Var_1 <= 50 )
	{
		Func_Var_2 = 2;
		explode turret type FALL | 8 | 16 | 2 | EXPTYPE_BLOODEXPLOSION;
		explode barrel type FALL | EXPTYPE_LARGEEXPLOSION;
		explode rrleg type FALL | EXPTYPE_XLARGEEXPLOSION;
		explode rfleg type FALL | EXPTYPE_BLOODEXPLOSION;
		explode lrleg type FALL | EXPTYPE_LARGEEXPLOSION;
		explode lfleg type FALL | EXPTYPE_XLARGEEXPLOSION;
		explode body type FALL | EXPTYPE_XLARGEEXPLOSION;
		return (0);
	}
	if( Func_Var_1 <= 99 )
	{
		Func_Var_2 = 3;
		explode turret type FALL | 8 | 16 | 2 | EXPTYPE_BLOODEXPLOSION;
		explode barrel type FALL | 8 | 16 | 2 | EXPTYPE_LARGEEXPLOSION;
		explode rrleg type FALL | 8 | 16 | 2 | EXPTYPE_XLARGEEXPLOSION;
		explode rfleg type FALL | 8 | 16 | 2 | EXPTYPE_BLOODEXPLOSION;
		explode lrleg type FALL | 8 | 16 | 2 | EXPTYPE_XLARGEEXPLOSION;
		explode lfleg type FALL | 8 | 16 | 2 | EXPTYPE_XLARGEEXPLOSION;
		explode body type FALL | 8 | 16 | 2 | EXPTYPE_LARGEEXPLOSION;
		return (0);
	}
	Func_Var_2 = 3;
	explode turret type FALL | 8 | 16 | 2 | EXPTYPE_BLOODEXPLOSION;
	explode barrel type FALL | 8 | 16 | 2 | EXPTYPE_XLARGEEXPLOSION;
	explode rrleg type FALL | 8 | 16 | 2 | EXPTYPE_BLOODEXPLOSION;
	explode rfleg type FALL | 8 | 16 | 2 | EXPTYPE_BLOODEXPLOSION;
	explode lrleg type FALL | 8 | 16 | 2 | EXPTYPE_XLARGEEXPLOSION;
	explode lfleg type FALL | 8 | 16 | 2 | EXPTYPE_LARGEEXPLOSION;
	explode body type 1 | 2 | EXPTYPE_XLARGEEXPLOSION;
}
