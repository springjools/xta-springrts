#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  rflare, lflare, body, turret, feetparent, FLFoot, FRFoot, RLFoot,
       RRFoot, rightchunk, leftchunk, faceguard, Lgun, Rgun, Rbarrel, Lbarrel,
       hips, knobs, ignite1, ignite2, ignite3, ignite4, ignite5, aimpoint;

static-var  bMoving, bAiming, Static_Var_3, restore_delay, gun_1,
			moveSpeed, currentSpeed, animSpeed;

// Signal definitions
#define SIG_AIM				4


FlameControl(Func_Var_3)
{
	while( TRUE )
	{
		Func_Var_3 = get HEALTH;
		if( Func_Var_3 <= 80 )
		{
			emit-sfx UNIT_SFX2 from ignite1;
			if( Func_Var_3 <= 60 ){
				emit-sfx UNIT_SFX2 from ignite2;
				if( Func_Var_3 <= 45 ){
					emit-sfx UNIT_SFX2 from ignite3;
					if( Func_Var_3 <= 25 ){
						emit-sfx UNIT_SFX2 from ignite4;
						if( Func_Var_3 <= 10 )	emit-sfx UNIT_SFX2 from ignite5;
					}
				}
			}
			sleep 66;
		}
		else
		{
			sleep 333;
		}
	}
}

walk()
{
	if( bMoving )
	{
		move feetparent to z-axis [-2.250000] now;
		move FLFoot to x-axis [-2.250000] now;
		move FLFoot to y-axis [1.000000] now;
		move FLFoot to z-axis [0.000000] now;
		move FLFoot to z-axis [-1.000000] speed [17];
		move FRFoot to x-axis [2.250000] now;
		move FRFoot to y-axis [1.000000] now;
		move FRFoot to z-axis [5.750000] now;
		move FRFoot to z-axis [8.750000] speed [58];
		move RLFoot to x-axis [-2.250000] now;
		move RLFoot to y-axis [1.000000] now;
		move RLFoot to z-axis [-1.750000] now;
		move RLFoot to z-axis [-3.250000] speed [30];
		move RRFoot to x-axis [2.250000] now;
		move RRFoot to y-axis [1.000000] now;
		move RRFoot to z-axis [-3.500000] now;
		move RRFoot to z-axis [-4.250000] speed [15.5];
		move body to y-axis [3.250000] now;
		move body to z-axis [-0.750000] now;
		move rightchunk to x-axis [1.500000] now;
		move rightchunk to y-axis [3.250000] now;
		move rightchunk to z-axis [-0.750000] now;
		move leftchunk to x-axis [-1.500000] now;
		move leftchunk to y-axis [3.250000] now;
		move leftchunk to z-axis [-0.750000] now;
		move turret to x-axis [0.000000] now;
		move turret to y-axis [1.000000] now;
		move turret to z-axis [-0.250000] now;
		move faceguard to x-axis [0.000000] now;
		move faceguard to y-axis [0.250000] now;
		move faceguard to z-axis [0.000000] now;
		move Lgun to x-axis [-0.250000] now;
		move Lgun to y-axis [0.250000] now;
		move Lgun to z-axis [1.250000] now;
		move Rgun to x-axis [0.250000] now;
		move Rgun to y-axis [0.250000] now;
		move Rgun to z-axis [1.250000] now;
		move Rbarrel to z-axis [0.750000] now;
		move Lbarrel to z-axis [0.750000] now;
		turn hips to y-axis <0.000000> now;
		turn hips to y-axis <3.796703> speed <64.79121>;
		turn FRFoot to x-axis <0.000000> now;
		turn FRFoot to x-axis <-14.796703> speed <37>;
		turn rightchunk to x-axis <0.000000> now;
		turn rightchunk to x-axis <-11.395604> speed <41.59341>;
		turn turret to y-axis <0.000000> now;
		turn turret to y-axis <-6.500000> speed <78.79121>;
		sleep animSpeed;
	}
	if( bMoving )
	{
		move FLFoot to z-axis [3.750000] speed [86];
		move FRFoot to z-axis [8.750000] speed [6.5];
		move RLFoot to z-axis [-4.000000] speed [14];
		move RRFoot to z-axis [-4.000000] speed [8];
		turn hips to y-axis <2.296703> speed <28.3956>;
		turn FLFoot to x-axis <-12.895604> speed <156.5934>;
		turn FRFoot to x-axis <0.796703> speed <188.7912>;
		turn RRFoot to x-axis <9.895604> speed <119.7912>;
		turn body to x-axis <9.500000> speed <115>;
		turn rightchunk to x-axis <-0.395604> speed <133.5934>;
		turn leftchunk to x-axis <-5.697802> speed <69>;
		turn turret to y-axis <-4.598901> speed <35>;
		sleep animSpeed;
	}
	if( bMoving )
	{
		move FLFoot to z-axis [7.000000] speed [60.5];
		move FRFoot to z-axis [6.250000] speed [43.5];
		move RLFoot to z-axis [-5.250000] speed [18.5];
		move RRFoot to z-axis [-4.000000] speed [6.5];
		turn hips to y-axis <-1.895604> speed <50.3956>;
		turn FLFoot to x-axis <-30.395604> speed <210.5934>;
		turn RRFoot to x-axis <15.598901> speed <68.59341>;
		turn body to x-axis <14.395604> speed <59.3956>;
		turn rightchunk to x-axis <8.000000> speed <100.5934>;
		turn leftchunk to x-axis <-11.395604> speed <68.59341>;
		turn turret to y-axis <2.296703> speed <82.39561>;
		sleep animSpeed;
	}
	if( bMoving )
	{
		move FRFoot to z-axis [5.750000] speed [11];
		move RLFoot to z-axis [-6.250000] speed [17];
		move RRFoot to z-axis [-1.500000] speed [45.5];
		turn hips to y-axis <-2.296703> speed <6.593406>;
		turn FLFoot to x-axis <-19.000000> speed <138.1978>;
		turn RRFoot to x-axis <19.697802> speed <50.59341>;
		turn body to x-axis <2.296703> speed <147.3956>;
		turn rightchunk to x-axis <1.895604> speed <73.59341>;
		turn leftchunk to x-axis <-6.796703> speed <55.1978>;
		turn turret to y-axis <3.000000> speed <13.1978>;
		sleep animSpeed;
	}
	if( bMoving )
	{
		move FRFoot to z-axis [4.250000] speed [28];
		move RLFoot to z-axis [-8.000000] speed [32.5];
		move RRFoot to z-axis [1.500000] speed [56];
		turn hips to y-axis <-1.500000> speed <13.1978>;
		turn FLFoot to x-axis <-0.796703> speed <219.5934>;
		turn RRFoot to x-axis <7.598901> speed <146.3956>;
		turn body to x-axis <0.000000> speed <27.3956>;
		turn leftchunk to x-axis <0.000000> speed <82.39561>;
		turn turret to y-axis <1.098901> speed <34.79121>;
		sleep animSpeed;
	}
	if( bMoving )
	{
		move FLFoot to z-axis [5.000000] speed [41];
		move FRFoot to z-axis [1.750000] speed [47];
		move RRFoot to z-axis [0.750000] speed [15.5];
		turn hips to y-axis <0.000000> speed <28.59341>;
		turn FLFoot to x-axis <0.000000> speed <13.1978>;
		turn RLFoot to x-axis <22.395604> speed <273.1978>;
		turn RRFoot to x-axis <0.796703> speed <83.39561>;
		turn body to x-axis <-2.296703> speed <27.79121>;
		turn leftchunk to x-axis <9.098901> speed <111.1978>;
		turn turret to y-axis <0.000000> speed <19.79121>;
		sleep animSpeed;
	}
	if( bMoving )
	{
		move FLFoot to z-axis [3.750000] speed [18.5];
		move FRFoot to z-axis [0.250000] speed [28];
		move RLFoot to z-axis [-4.500000] speed [63.5];
		move RRFoot to z-axis [-0.500000] speed [18.5];
		turn hips to y-axis <1.098901> speed <19.79121>;
		turn RLFoot to x-axis <28.895604> speed <77.79121>;
		turn body to x-axis <-1.098901> speed <19.79121>;
		turn leftchunk to x-axis <10.296703> speed <19.79121>;
		sleep animSpeed;
	}
	if( bMoving )
	{
		move FLFoot to z-axis [2.500000] speed [26.5];
		move FRFoot to z-axis [-0.750000] speed [15.5];
		move RLFoot to z-axis [-1.250000] speed [58];
		move RRFoot to z-axis [-1.750000] speed [26.5];
		turn hips to y-axis <-1.500000> speed <32.1978>;
		turn RLFoot to x-axis <10.296703> speed <225.5934>;
		turn body to x-axis <0.000000> speed <19.79121>;
		turn leftchunk to x-axis <2.697802> speed <92>;
		sleep animSpeed;
	}
	if( bMoving )
	{
		move FLFoot to z-axis [2.000000] speed [9.5];
		move FRFoot to z-axis [0.000000] speed [14];
		move RLFoot to z-axis [1.000000] speed [42];
		move RRFoot to z-axis [-2.250000] speed [11];
		turn hips to y-axis <-1.895604> speed <6.593406>;
		turn FRFoot to x-axis <-10.296703> speed <132.7912>;
		turn RLFoot to x-axis <-0.395604> speed <128.1978>;
		turn rightchunk to x-axis <-1.098901> speed <36.59341>;
		turn leftchunk to x-axis <-2.697802> speed <64>;
		sleep animSpeed;
	}
	if( bMoving )
	{
		move FLFoot to z-axis [1.000000] speed [18.5];
		move FRFoot to z-axis [3.000000] speed [56.5];
		move RLFoot to z-axis [-1.000000] speed [34];
		move RRFoot to z-axis [-3.500000] speed [18.5];
		turn hips to y-axis <-2.296703> speed <6.593406>;
		turn FRFoot to x-axis <-12.500000> speed <27.59341>;
		turn rightchunk to x-axis <-4.197802> speed <36.79121>;
		sleep animSpeed;
	}
}

walklegs()
{
	if( bMoving )
	{
		move feetparent to z-axis [-2.250000] now;
		move FLFoot to x-axis [-2.250000] now;
		move FLFoot to y-axis [1.000000] now;
		move FLFoot to z-axis [0.000000] now;
		move FLFoot to z-axis [-1.000000] speed [17];
		move FRFoot to x-axis [2.250000] now;
		move FRFoot to y-axis [1.000000] now;
		move FRFoot to z-axis [5.750000] now;
		move FRFoot to z-axis [8.750000] speed [58];
		move RLFoot to x-axis [-2.250000] now;
		move RLFoot to y-axis [1.000000] now;
		move RLFoot to z-axis [-1.750000] now;
		move RLFoot to z-axis [-3.250000] speed [30];
		move RRFoot to x-axis [2.250000] now;
		move RRFoot to y-axis [1.000000] now;
		move RRFoot to z-axis [-3.500000] now;
		move RRFoot to z-axis [-4.250000] speed [15.5];
		move body to y-axis [3.250000] now;
		move body to z-axis [-0.750000] now;
		move rightchunk to x-axis [1.500000] now;
		move rightchunk to y-axis [3.250000] now;
		move rightchunk to z-axis [-0.750000] now;
		move leftchunk to x-axis [-1.500000] now;
		move leftchunk to y-axis [3.250000] now;
		move leftchunk to z-axis [-0.750000] now;
		move turret to x-axis [0.000000] now;
		move turret to y-axis [1.000000] now;
		move turret to z-axis [-0.250000] now;
		move faceguard to x-axis [0.000000] now;
		move faceguard to y-axis [0.250000] now;
		move faceguard to z-axis [0.000000] now;
		move Lgun to x-axis [-0.250000] now;
		move Lgun to y-axis [0.250000] now;
		move Lgun to z-axis [1.250000] now;
		move Rgun to x-axis [0.250000] now;
		move Rgun to y-axis [0.250000] now;
		move Rgun to z-axis [1.250000] now;
		move Rbarrel to z-axis [0.750000] now;
		move Lbarrel to z-axis [0.750000] now;
		turn FRFoot to x-axis <0.000000> now;
		turn FRFoot to x-axis <-14.796703> speed <37>;
		turn rightchunk to x-axis <0.000000> now;
		turn rightchunk to x-axis <-11.395604> speed <41.59341>;
		sleep animSpeed;
	}
	if( bMoving )
	{
		move FLFoot to z-axis [3.750000] speed [86];
		move FRFoot to z-axis [8.750000] speed [6.5];
		move RLFoot to z-axis [-4.000000] speed [14];
		move RRFoot to z-axis [-4.000000] speed [8];
		turn FLFoot to x-axis <-12.895604> speed <156.5934>;
		turn FRFoot to x-axis <0.796703> speed <188.7912>;
		turn RRFoot to x-axis <9.895604> speed <119.7912>;
		turn rightchunk to x-axis <-0.395604> speed <133.5934>;
		turn leftchunk to x-axis <-5.697802> speed <69>;
		sleep animSpeed;
	}
	if( bMoving )
	{
		move FLFoot to z-axis [7.000000] speed [60.5];
		move FRFoot to z-axis [6.250000] speed [43.5];
		move RLFoot to z-axis [-5.250000] speed [18.5];
		move RRFoot to z-axis [-4.000000] speed [6.5];
		turn FLFoot to x-axis <-30.395604> speed <210.5934>;
		turn RRFoot to x-axis <15.598901> speed <68.59341>;
		turn rightchunk to x-axis <8.000000> speed <100.5934>;
		turn leftchunk to x-axis <-11.395604> speed <68.59341>;
		sleep animSpeed;
	}
	if( bMoving )
	{
		move FRFoot to z-axis [5.750000] speed [11];
		move RLFoot to z-axis [-6.250000] speed [17];
		move RRFoot to z-axis [-1.500000] speed [45.5];
		turn FLFoot to x-axis <-19.000000> speed <138.1978>;
		turn RRFoot to x-axis <19.697802> speed <50.59341>;
		turn rightchunk to x-axis <1.895604> speed <73.59341>;
		turn leftchunk to x-axis <-6.796703> speed <55.1978>;
		sleep animSpeed;
	}
	if( bMoving )
	{
		move FRFoot to z-axis [4.250000] speed [28];
		move RLFoot to z-axis [-8.000000] speed [32.5];
		move RRFoot to z-axis [1.500000] speed [56];
		turn FLFoot to x-axis <-0.796703> speed <219.5934>;
		turn RRFoot to x-axis <7.598901> speed <146.3956>;
		turn leftchunk to x-axis <0.000000> speed <82.39561>;
		sleep animSpeed;
	}
	if( bMoving )
	{
		move FLFoot to z-axis [5.000000] speed [41];
		move FRFoot to z-axis [1.750000] speed [47];
		move RRFoot to z-axis [0.750000] speed [15.5];
		turn FLFoot to x-axis <0.000000> speed <13.1978>;
		turn RLFoot to x-axis <22.395604> speed <273.1978>;
		turn RRFoot to x-axis <0.796703> speed <83.39561>;
		turn leftchunk to x-axis <9.098901> speed <111.1978>;
		sleep animSpeed;
	}
	if( bMoving )
	{
		move FLFoot to z-axis [3.750000] speed [18.5];
		move FRFoot to z-axis [0.250000] speed [28];
		move RLFoot to z-axis [-4.500000] speed [63.5];
		move RRFoot to z-axis [-0.500000] speed [18.5];
		turn RLFoot to x-axis <28.895604> speed <77.79121>;
		turn leftchunk to x-axis <10.296703> speed <19.79121>;
		sleep animSpeed;
	}
	if( bMoving )
	{
		move FLFoot to z-axis [2.500000] speed [26.5];
		move FRFoot to z-axis [-0.750000] speed [15.5];
		move RLFoot to z-axis [-1.250000] speed [58];
		move RRFoot to z-axis [-1.750000] speed [26.5];
		turn RLFoot to x-axis <10.296703> speed <225.5934>;
		turn leftchunk to x-axis <2.697802> speed <92>;
		sleep animSpeed;
	}
	if( bMoving )
	{
		move FLFoot to z-axis [2.000000] speed [9.5];
		move FRFoot to z-axis [0.000000] speed [14];
		move RLFoot to z-axis [1.000000] speed [42];
		move RRFoot to z-axis [-2.250000] speed [11];
		turn FRFoot to x-axis <-10.296703> speed <132.7912>;
		turn RLFoot to x-axis <-0.395604> speed <128.1978>;
		turn rightchunk to x-axis <-1.098901> speed <36.59341>;
		turn leftchunk to x-axis <-2.697802> speed <64>;
		sleep animSpeed;
	}
	if( bMoving )
	{
		move FLFoot to z-axis [1.000000] speed [18.5];
		move FRFoot to z-axis [3.000000] speed [56.5];
		move RLFoot to z-axis [-1.000000] speed [34];
		move RRFoot to z-axis [-3.500000] speed [18.5];
		turn FRFoot to x-axis <-12.500000> speed <27.59341>;
		turn rightchunk to x-axis <-4.197802> speed <36.79121>;
		sleep animSpeed;
	}
}

MotionControl(moving, aiming, justmoved)
{
	justmoved = TRUE;
	while( TRUE )
	{
		moving = bMoving;
		aiming = bAiming;
		if( moving )
		{
			if( aiming )
			{
				Static_Var_3 = 1;
				call-script walklegs();
			}
			else
			{
				Static_Var_3 = 0;
				call-script walk();
			}
			justmoved = TRUE;
		}
		else
		{
			Static_Var_3 = 1;
			if( justmoved )
			{
				turn rightchunk to x-axis <0.000000> speed <150.000000>;
				turn RRFoot to x-axis <0.000000> speed <150.000000>;
				turn FRFoot to x-axis <0.000000> speed <150.000000>;
				turn leftchunk to x-axis <0.000000> speed <150.000000>;
				turn RLFoot to x-axis <0.000000> speed <150.000000>;
				turn FLFoot to x-axis <0.000000> speed <150.000000>;
				justmoved = FALSE;
			}
			sleep 100;
		}
	}
}

UnitSpeed()
{
	while(TRUE)
	{
		currentSpeed = (get CURRENT_SPEED)*100/moveSpeed;
		if (currentSpeed<20) currentSpeed=20;
		animSpeed = 5500 / currentSpeed;
		sleep 142;
	}
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 500;
	}
	start-script FlameControl();
	start-script UnitSpeed();
	start-script MotionControl();
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = SFXTYPE_BLACKSMOKE;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = SFXTYPE_WHITESMOKE;
			}
			emit-sfx smoketype from body;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Create()
{
	hide ignite1;
	hide ignite2;
	hide ignite3;
	hide ignite4;
	hide ignite5;
	bMoving = FALSE;
	bAiming = FALSE;
	Static_Var_3 = 1;
	hide rflare;
	hide lflare;
	moveSpeed = get MAX_SPEED;
	animSpeed = 55;
	restore_delay = 3000;
	start-script SmokeUnit();
}

SetMaxReloadTime(Func_Var_1)
{
	restore_delay = Func_Var_1 * 2;
}

StartMoving()
{
	bMoving = TRUE;
}

StopMoving()
{
	bMoving = FALSE;
}

SweetSpot(piecenum)
{
	piecenum = body;
}

RestoreAfterDelay()
{
	sleep restore_delay;
	turn turret to y-axis <0.000000> speed <90.000000>;
	turn Rgun to x-axis <0.000000> speed <45.000000>;
	turn Lgun to x-axis <0.000000> speed <45.000000>;
	bAiming = FALSE;
}

AimFromPrimary(piecenum)
{
	piecenum = aimpoint;
}

QueryPrimary(piecenum)
{
	if( gun_1 )
	{
		piecenum = lflare;
	}
	else
	{
		piecenum = rflare;
	}
}

AimPrimary(heading, pitch)
{
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	bAiming = TRUE;
	while( !Static_Var_3 )
	{
		sleep 100;
	}
	turn turret to y-axis heading speed <180.000000>;
	turn Rgun to x-axis <0.000000> - pitch speed <35.000000>;
	turn Lgun to x-axis <0.000000> - pitch speed <35.000000>;
	wait-for-turn turret around y-axis;
	wait-for-turn Rgun around x-axis;
	wait-for-turn Lgun around x-axis;
	start-script RestoreAfterDelay();
	return (1);
}

FirePrimary()
{
	if( gun_1 )
	{
		move Lbarrel to z-axis [-5.000000] now;
		emit-sfx UNIT_SFX1 from lflare;
		move Lbarrel to z-axis [0.000000] speed [15.000000];
	}
	else
	{
		move Rbarrel to z-axis [-5.000000] now;
		emit-sfx UNIT_SFX1 from rflare;
		move Rbarrel to z-axis [0.000000] speed [15.000000];
	}
	gun_1 = !gun_1;
}

Killed(severity, corpsetype)
{
	hide lflare;
	hide rflare;
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode FLFoot type BITMAPONLY | BITMAP1;
		explode FRFoot type BITMAPONLY | BITMAP2;
		explode knobs type FALL | BITMAP3;
		explode Lbarrel type FALL | BITMAP4;
		explode leftchunk type BITMAPONLY | BITMAP5;
		explode lflare type FALL | BITMAP1;
		explode Lgun type FALL | BITMAP2;
		explode Rbarrel type FALL | BITMAP3;
		explode rflare type FALL | BITMAP4;
		explode Rgun type FALL | BITMAP5;
		explode rightchunk type BITMAPONLY | BITMAP1;
		explode RLFoot type BITMAPONLY | BITMAP2;
		explode RRFoot type BITMAPONLY | BITMAP3;
		explode turret type FALL | BITMAP4;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode body type BITMAPONLY | BITMAP1;
		explode FLFoot type BITMAPONLY | BITMAP1;
		explode FRFoot type BITMAPONLY | BITMAP2;
		explode knobs type FALL | BITMAP3;
		explode Lbarrel type FALL | BITMAP4;
		explode leftchunk type BITMAPONLY | BITMAP5;
		explode lflare type FALL | BITMAP1;
		explode Lgun type FALL | BITMAP2;
		explode Rbarrel type FALL | BITMAP3;
		explode rflare type FALL | BITMAP4;
		explode Rgun type FALL | BITMAP5;
		explode rightchunk type BITMAPONLY | BITMAP1;
		explode RLFoot type BITMAPONLY | BITMAP2;
		explode RRFoot type BITMAPONLY | BITMAP3;
		explode turret type FALL | BITMAP4;
		return (0);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode body type SHATTER | BITMAP1;
		explode FLFoot type BITMAPONLY | BITMAP1;
		explode FRFoot type BITMAPONLY | BITMAP2;
		explode knobs type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode Lbarrel type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode leftchunk type BITMAPONLY | BITMAP5;
		explode lflare type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode Lgun type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode Rbarrel type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode rflare type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode Rgun type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
		explode rightchunk type BITMAPONLY | BITMAP1;
		explode RLFoot type BITMAPONLY | BITMAP2;
		explode RRFoot type BITMAPONLY | BITMAP3;
		explode turret type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		return (0);
	}
	corpsetype = 3;
	explode body type SHATTER | EXPLODE_ON_HIT | BITMAP1;
	explode FLFoot type BITMAPONLY | BITMAP1;
	explode FRFoot type BITMAPONLY | BITMAP2;
	explode knobs type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode Lbarrel type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode leftchunk type BITMAPONLY | BITMAP5;
	explode lflare type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode Lgun type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode Rbarrel type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode rflare type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode Rgun type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
	explode rightchunk type BITMAPONLY | BITMAP1;
	explode RLFoot type BITMAPONLY | BITMAP2;
	explode RRFoot type BITMAPONLY | BITMAP3;
	explode turret type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	return (0);
}
