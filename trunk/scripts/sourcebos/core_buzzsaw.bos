#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  flare1, flare2, flare3, flare4, flare5, flare6, base, turret,
       barrel1, barrel2, barrel3, barrel4, barrel5, barrel6, sleeve1, sleeve2,
       sleeve3, sleeve4, sleeve5, sleeve6, spindle, shell;

static-var  gun_1;

// Signal definitions
#define SIG_AIM				2


SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 500;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 258;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 257;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Create()
{
	hide flare1;
	hide flare2;
	hide flare3;
	hide flare4;
	hide flare5;
	hide flare6;
	hide shell;
	gun_1 = 0;
	start-script SmokeUnit();
}

AimPrimary(heading, pitch)
{
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	turn turret to y-axis heading speed <5.000000>;
	turn spindle to x-axis <60.005495> * gun_1 - pitch speed <200.038462>;
	wait-for-turn turret around y-axis;
	wait-for-turn spindle around x-axis;
	return (1);
}

FirePrimary()
{
	if( gun_1 == 0 )
	{
		move barrel1 to z-axis [-15.000000] now;
		emit-sfx UNIT_SFX1 from flare1;
		explode shell type FALL | EXPLODE_ON_HIT;
		explode shell type FALL | EXPLODE_ON_HIT;
		explode shell type FALL | EXPLODE_ON_HIT;
		sleep 50;
		move barrel1 to z-axis [0.000000] speed [5.000000];
	}
	else if( gun_1 == 1 )
	{
		move barrel2 to y-axis [-12.500000] now;
		move barrel2 to z-axis [-7.500000] now;
		explode shell type FALL | EXPLODE_ON_HIT;
		explode shell type FALL | EXPLODE_ON_HIT;
		explode shell type FALL | EXPLODE_ON_HIT;
		emit-sfx UNIT_SFX1 from flare2;
		sleep 50;
		move barrel2 to y-axis [0.000000] speed [5.000000];
		move barrel2 to z-axis [0.000000] speed [5.000000];
	}
	else if( gun_1 == 2 )
	{
		move barrel3 to y-axis [-12.500000] now;
		move barrel3 to z-axis [7.500000] now;
		emit-sfx UNIT_SFX1 from flare3;
		explode shell type FALL | EXPLODE_ON_HIT;
		explode shell type FALL | EXPLODE_ON_HIT;
		explode shell type FALL | EXPLODE_ON_HIT;
		sleep 50;
		move barrel3 to y-axis [0.000000] speed [5.000000];
		move barrel3 to z-axis [0.000000] speed [5.000000];
	}
	else if( gun_1 == 3 )
	{
		move barrel4 to z-axis [15.000000] now;
		emit-sfx UNIT_SFX1 from flare4;
		explode shell type FALL | EXPLODE_ON_HIT;
		explode shell type FALL | EXPLODE_ON_HIT;
		explode shell type FALL | EXPLODE_ON_HIT;
		sleep 50;
		move barrel4 to z-axis [0.000000] speed [5.000000];
	}
	else if( gun_1 == 4 )
	{
		move barrel5 to y-axis [12.500000] now;
		move barrel5 to z-axis [7.500000] now;
		explode shell type FALL | EXPLODE_ON_HIT;
		explode shell type FALL | EXPLODE_ON_HIT;
		explode shell type FALL | EXPLODE_ON_HIT;
		emit-sfx UNIT_SFX1 from flare5;
		sleep 50;
		move barrel5 to y-axis [0.000000] speed [5.000000];
		move barrel5 to z-axis [0.000000] speed [5.000000];
	}
	else if( gun_1 == 5 )
	{
		move barrel6 to y-axis [12.500000] now;
		move barrel6 to z-axis [-7.500000] now;
		explode shell type FALL | EXPLODE_ON_HIT;
		explode shell type FALL | EXPLODE_ON_HIT;
		explode shell type FALL | EXPLODE_ON_HIT;
		emit-sfx UNIT_SFX1 from flare6;
		sleep 50;
		move barrel6 to y-axis [0.000000] speed [5.000000];
		move barrel6 to z-axis [0.000000] speed [5.000000];
	}
	++gun_1;
	if( gun_1 >= 6 )
	{
		gun_1 = 0;
	}
}

TargetCleared(Func_Var_1)
{
	if( Func_Var_1 == 1 )
	{
		signal SIG_AIM;
		stop-spin turret around y-axis;
	}
}

QueryPrimary(piecenum)
{
	piecenum = gun_1;
}

AimFromPrimary(piecenum)
{
	piecenum = spindle;
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode base type BITMAPONLY | BITMAP5;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode base type BITMAPONLY | BITMAP5;
		return (0);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode base type BITMAPONLY | BITMAP5;
		return (0);
	}
	corpsetype = 3;
	explode base type BITMAPONLY | BITMAP5;
}
