#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  torso, pelvis, lthigh, rthigh, rleg, rfoot, lleg, lfoot,
       tongend, ltong, rtong, tongpivot;

static-var  bMoving, moveSpeed, currentSpeed;

// Signal definitions
#define SIG_ACTIVATE			2


walk()
{
	if( bMoving )
	{
		move pelvis to y-axis [-1.250000] now;
		turn lthigh to x-axis <-67.164835> now;
		turn rthigh to x-axis <3.516484> now;
		turn rleg to x-axis <68.571429> now;
		turn rfoot to x-axis <-36.923077> now;
		turn lleg to x-axis <67.862637> now;
		turn lfoot to x-axis <-1.054945> now;
		sleep 4000 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-1.000000] now;
		turn lthigh to x-axis <-60.483516> now;
		turn rthigh to x-axis <-4.923077> now;
		turn rleg to x-axis <87.554945> now;
		turn rfoot to x-axis <-27.076923> now;
		turn lleg to x-axis <61.186813> now;
		sleep 6000 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-0.625000] now;
		turn lthigh to x-axis <-51.692308> now;
		turn rthigh to x-axis <-33.054945> now;
		turn rleg to x-axis <118.857143> now;
		turn lleg to x-axis <55.912088> now;
		turn lfoot to x-axis <-4.571429> now;
		sleep 8000 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-0.250000] now;
		turn lthigh to x-axis <-45.362637> now;
		turn rthigh to x-axis <-41.142857> now;
		turn lleg to x-axis <52.043956> now;
		turn lfoot to x-axis <-6.681319> now;
		sleep 7000 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.000000] now;
		turn lthigh to x-axis <-38.329670> now;
		turn rthigh to x-axis <-45.010989> now;
		turn rleg to x-axis <98.461538> now;
		turn rfoot to x-axis <-33.758242> now;
		turn lleg to x-axis <54.500000> now;
		turn lfoot to x-axis <-14.065934> now;
		sleep 6000 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-0.250000] now;
		turn lthigh to x-axis <-29.890110> now;
		turn rthigh to x-axis <-53.796703> now;
		turn rleg to x-axis <61.890110> now;
		turn lleg to x-axis <54.505495> now;
		turn lfoot to x-axis <-23.208791> now;
		sleep 6000 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-0.625000] now;
		turn lthigh to x-axis <-11.252747> now;
		turn rthigh to x-axis <-85.802198> now;
		turn rleg to x-axis <80.521978> now;
		turn lleg to x-axis <35.164835> now;
		turn lfoot to x-axis <-23.554945> now;
		sleep 6000 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-1.000000] now;
		turn lthigh to x-axis <-7.384615> now;
		turn rthigh to x-axis <-81.928571> now;
		turn rleg to x-axis <46.417582> now;
		turn lleg to x-axis <69.626374> now;
		turn lfoot to x-axis <-37.626374> now;
		sleep 6000 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-1.250000] now;
		turn lthigh to x-axis <6.329670> now;
		turn rthigh to x-axis <-66.456044> now;
		turn rleg to x-axis <43.247253> now;
		turn rfoot to x-axis <23.208791> now;
		turn lleg to x-axis <67.868132> now;
		turn lfoot to x-axis <-34.807692> now;
		sleep 6000 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-1.000000] now;
		turn lthigh to x-axis <-3.159341> now;
		turn rthigh to x-axis <-58.725275> now;
		turn rfoot to x-axis <15.472527> now;
		turn lleg to x-axis <91.428571> now;
		sleep 7000 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-0.625000] now;
		turn lthigh to x-axis <-25.670330> now;
		turn rthigh to x-axis <-52.395604> now;
		turn rfoot to x-axis <9.142857> now;
		turn lleg to x-axis <113.230769> now;
		sleep 8000 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-0.250000] now;
		turn lthigh to x-axis <-49.582418> now;
		turn rthigh to x-axis <-36.219780> now;
		turn rfoot to x-axis <-7.032967> now;
		turn lleg to x-axis <121.670330> now;
		sleep 7000 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.000000] now;
		turn lthigh to x-axis <-55.906593> now;
		turn rthigh to x-axis <-21.802198> now;
		turn rleg to x-axis <38.681319> now;
		turn rfoot to x-axis <-13.362637> now;
		turn lleg to x-axis <110.065934> now;
		turn lfoot to x-axis <-37.978022> now;
		sleep 6000 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-0.250000] now;
		turn lthigh to x-axis <-68.923077> now;
		turn rthigh to x-axis <-16.175824> now;
		turn rleg to x-axis <41.494505> now;
		turn rfoot to x-axis <-21.450549> now;
		turn lleg to x-axis <98.813187> now;
		sleep 6000 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-0.625000] now;
		turn lthigh to x-axis <-79.818681> now;
		turn rthigh to x-axis <-7.032967> now;
		turn rleg to x-axis <43.247253> now;
		turn rfoot to x-axis <-29.538462> now;
		turn lleg to x-axis <79.824176> now;
		sleep 6000 / currentSpeed;
	}
	move pelvis to y-axis [-1.000000] now;
	turn lthigh to x-axis <-78.412088> now;
	turn rthigh to x-axis <-1.406593> now;
	turn rleg to x-axis <60.483516> now;
	turn rfoot to x-axis <-33.406593> now;
	turn lleg to x-axis <54.153846> now;
	sleep 6000 / currentSpeed;
}

open()
{
	move tongend to y-axis [0.000000] now;
	move tongend to y-axis [-7.499985] speed [9.986679];
	move ltong to y-axis [0.000000] now;
	move ltong to y-axis [-7.499985] speed [9.986679];
	move rtong to y-axis [0.000000] now;
	move rtong to y-axis [-7.499985] speed [9.986679];
	turn ltong to y-axis <0.000000> now;
	turn ltong to y-axis <0.000000> speed <0.000000>;
	turn rtong to y-axis <0.000000> now;
	turn rtong to y-axis <0.000000> speed <0.000000>;
	sleep 751;

	turn ltong to y-axis <-119.203297> speed <157.263736>;
	turn rtong to y-axis <116.747253> speed <154.016484>;
	sleep 758;
}

close()
{
	move tongend to y-axis [-7.499985] now;
	move ltong to y-axis [-7.499985] now;
	move rtong to y-axis [-7.499985] now;
	turn ltong to y-axis <-119.203297> now;
	turn ltong to y-axis <0.005495> speed <174.549451>;
	turn rtong to y-axis <116.747253> now;
	turn rtong to y-axis <-0.032967> speed <170.983516>;
	sleep 683;

	move tongend to y-axis [0.000000] speed [10.885330];
	move ltong to y-axis [0.000000] speed [10.885330];
	move rtong to y-axis [0.000000] speed [10.885330];
	turn ltong to y-axis <0.000000> speed <0.010989>;
	turn rtong to y-axis <0.000000> speed <0.054945>;
	sleep 689;
}

MotionControl(moving, justmoved)
{
	justmoved = TRUE;
	while( TRUE )
	{
		moving = bMoving;
		if( moving )
		{
			call-script walk();
			justmoved = TRUE;
		}
		else
		{
			if( justmoved )
			{
				turn rthigh to x-axis <0.000000> speed <200.043956>;
				turn rleg to x-axis <0.000000> speed <200.043956>;
				turn rfoot to x-axis <0.000000> speed <200.043956>;
				turn lthigh to x-axis <0.000000> speed <200.043956>;
				turn lleg to x-axis <0.000000> speed <200.043956>;
				turn lfoot to x-axis <0.000000> speed <200.043956>;
				justmoved = FALSE;
			}
			sleep 100;
		}
	}
}

UnitSpeed()
{
	while(TRUE)
	{
		currentSpeed = (get CURRENT_SPEED)*100/moveSpeed;
		if (currentSpeed<20) currentSpeed=20;
		sleep 142;
	}
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 500;
	}
	start-script UnitSpeed();
	start-script MotionControl();
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 258;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 257;
			}
			emit-sfx smoketype from torso;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Create()
{
	bMoving = FALSE;
	moveSpeed = get MAX_SPEED;
	currentSpeed = 100;
	start-script SmokeUnit();
}

Activate()
{
	signal SIG_ACTIVATE;
	set-signal-mask SIG_ACTIVATE;
	call-script open();
	spin tongpivot around z-axis speed <100.021978>;
}

Deactivate()
{
	signal SIG_ACTIVATE;
	set-signal-mask SIG_ACTIVATE;
	turn tongpivot to z-axis <0.000000> speed <-100.021978>;
	wait-for-turn tongpivot around z-axis;
	call-script close();
}

StartMoving()
{
	bMoving = TRUE;
}

StopMoving()
{
	bMoving = FALSE;
}

SweetSpot(piecenum)
{
	piecenum = torso;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode lfoot type BITMAPONLY | BITMAP1;
		explode lleg type BITMAPONLY | BITMAP1;
		explode lthigh type BITMAPONLY | BITMAP1;
		explode ltong type BITMAPONLY | BITMAP1;
		explode pelvis type BITMAPONLY | BITMAP1;
		explode rfoot type BITMAPONLY | BITMAP1;
		explode rleg type BITMAPONLY | BITMAP1;
		explode rthigh type BITMAPONLY | BITMAP1;
		explode rtong type BITMAPONLY | BITMAP1;
		explode tongend type BITMAPONLY | BITMAP1;
		explode tongpivot type BITMAPONLY | BITMAP1;
		explode torso type BITMAPONLY | BITMAP1;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode lfoot type FALL | BITMAP1;
		explode lleg type FALL | BITMAP1;
		explode lthigh type BITMAPONLY | BITMAP1;
		explode ltong type SHATTER | BITMAP1;
		explode pelvis type FALL | BITMAP1;
		explode rfoot type FALL | BITMAP1;
		explode rleg type FALL | BITMAP1;
		explode rthigh type BITMAPONLY | BITMAP1;
		explode rtong type FALL | BITMAP1;
		explode tongend type FALL | BITMAP1;
		explode tongpivot type FALL | BITMAP1;
		explode torso type BITMAPONLY | BITMAP1;
		return (0);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode lfoot type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode lleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode lthigh type BITMAPONLY | BITMAP1;
		explode ltong type SHATTER | BITMAP1;
		explode pelvis type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode rfoot type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode rleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode rthigh type BITMAPONLY | BITMAP1;
		explode rtong type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode tongend type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode tongpivot type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode torso type BITMAPONLY | BITMAP1;
		return (0);
	}
	corpsetype = 3;
	explode lfoot type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode lleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode lthigh type BITMAPONLY | BITMAP1;
	explode ltong type SHATTER | EXPLODE_ON_HIT | BITMAP1;
	explode pelvis type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode rfoot type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode rleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode rthigh type BITMAPONLY | BITMAP1;
	explode rtong type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode tongend type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode tongpivot type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode torso type BITMAPONLY | BITMAP1;
	return (0);
}
