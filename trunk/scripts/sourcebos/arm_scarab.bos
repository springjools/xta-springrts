#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

#define SPEEDUP_FACTOR 170

piece  base, emit, rupleg1, rupleg2, rupleg3, lupleg1, lupleg2, lupleg3,
       lleg3, lleg2, lleg1, rleg3, rleg2, rleg1, lbody, rbody,
       launcher, lffoot, lrfoot, rffoot, rrfoot;

static-var  Static_Var_1, Static_Var_2, bMoving, statechg_DesiredState, statechg_StateChanging,
			justMoved, moveSpeed, currentSpeed, animSpeed;

// Signal definitions
#define SIG_AIM				2


walk()
{
	if( bMoving )
	{
		turn base to x-axis <2.109890> now;
		turn base to x-axis <0.000000> speed <24.07088>;
		turn base to y-axis <1.054945> now;
		turn base to y-axis <0.703297> speed <4.007143>;
		turn rupleg1 to y-axis <27.428571> now;
		turn rupleg1 to y-axis <7.736264> speed <224.6709>;
		turn rupleg2 to y-axis <-13.362637> now;
		turn rupleg2 to z-axis <0.000000> now;
		turn rupleg2 to z-axis <27.428571> speed <312.9401>;
		turn rupleg3 to y-axis <27.780220> now;
		turn rupleg3 to y-axis <7.384615> speed <232.6945>;
		turn lupleg1 to y-axis <21.445055> now;
		turn lupleg1 to z-axis <0.000000> now;
		turn lupleg1 to z-axis <-24.615385> speed <280.8456>;
		turn lupleg2 to y-axis <-14.417582> now;
		turn lupleg2 to y-axis <-0.703297> speed <156.4654>;
		turn lupleg2 to z-axis <-7.384615> now;
		turn lupleg2 to z-axis <0.000000> speed <84.25275>;
		turn lupleg3 to y-axis <13.362637> now;
		turn lupleg3 to z-axis <0.000000> now;
		turn lupleg3 to z-axis <-45.362637> speed <517.5566>;
		turn lleg3 to z-axis <0.000000> now;
		turn lleg3 to z-axis <35.516484> speed <405.2165>;
		turn lleg2 to z-axis <0.000000> now;
		turn lleg2 to z-axis <-11.956044> speed <136.411>;
		turn lleg1 to z-axis <0.000000> now;
		turn lleg1 to z-axis <11.604396> speed <132.3945>;
		turn rleg3 to z-axis <0.000000> now;
		turn rleg3 to z-axis <8.439560> speed <96.28352>;
		turn rleg2 to z-axis <0.000000> now;
		turn rleg2 to z-axis <-34.807692> speed <397.1929>;
		turn rleg1 to z-axis <0.000000> now;
		turn rleg1 to z-axis <9.494505> speed <108.3236>;
		sleep animSpeed;
	}
	if( bMoving )
	{
		turn base to x-axis <-1.054945> speed <11.95604>;
		turn base to y-axis <-0.351648> speed <11.95604>;
		turn rupleg1 to y-axis <-13.010989> speed <235.1324>;
		turn rupleg2 to y-axis <8.791209> speed <251.0769>;
		turn rupleg2 to z-axis <54.153846> speed <302.8802>;
		turn rupleg3 to y-axis <-14.412088> speed <247.0885>;
		turn lupleg1 to y-axis <1.406593> speed <227.1648>;
		turn lupleg1 to z-axis <-64.703297> speed <454.3297>;
		turn lupleg2 to y-axis <20.747253> speed <243.1>;
		turn lupleg3 to y-axis <-10.197802> speed <267.0121>;
		turn lupleg3 to z-axis <-75.956044> speed <346.7253>;
		turn lleg3 to z-axis <63.648352> speed <318.8247>;
		turn lleg2 to z-axis <0.000000> speed <135.4956>;
		turn lleg1 to z-axis <66.456044> speed <621.7143>;
		turn rleg3 to z-axis <0.000000> speed <95.64835>;
		turn rleg2 to z-axis <-63.648352> speed <326.7923>;
		turn rleg1 to z-axis <0.000000> speed <107.6044>;
		sleep animSpeed;
	}
	if( bMoving )
	{
		turn base to x-axis <-1.406593> speed <3.951099>;
		turn base to y-axis <-1.054945> speed <7.911539>;
		turn rupleg1 to y-axis <-20.043956> speed <79.17143>;
		turn rupleg2 to y-axis <17.225275> speed <95.01319>;
		turn rupleg2 to z-axis <8.439560> speed <514.661>;
		turn rupleg3 to y-axis <-20.043956> speed <63.33901>;
		turn lupleg1 to y-axis <-10.549451> speed <134.5989>;
		turn lupleg1 to z-axis <-14.417582> speed <566.1281>;
		turn lupleg2 to y-axis <31.291209> speed <118.7665>;
		turn lupleg3 to y-axis <-15.824176> speed <63.33901>;
		turn lupleg3 to z-axis <-10.895604> speed <732.4011>;
		turn lleg3 to z-axis <17.934066> speed <514.661>;
		turn lleg1 to z-axis <10.549451> speed <629.467>;
		turn rleg2 to z-axis <-9.846154> speed <605.7137>;
		sleep animSpeed;
	}
	if( bMoving )
	{
		turn base to x-axis <-0.703297> speed <7.967582>;
		turn base to y-axis <0.000000> speed <11.95604>;
		turn rupleg1 to y-axis <-13.010989> speed <79.70385>;
		turn rupleg1 to z-axis <39.384615> speed <446.3528>;
		turn rupleg2 to y-axis <11.252747> speed <67.7478>;
		turn rupleg2 to z-axis <-2.109890> speed <119.5604>;
		turn rupleg3 to y-axis <-3.159341> speed <191.2967>;
		turn rupleg3 to z-axis <28.483516> speed <322.8132>;
		turn lupleg1 to y-axis <-0.351648> speed <115.572>;
		turn lupleg1 to z-axis <2.109890> speed <187.3082>;
		turn lupleg2 to y-axis <19.692308> speed <131.5165>;
		turn lupleg2 to z-axis <-40.791209> speed <462.2973>;
		turn lupleg3 to y-axis <-7.379121> speed <95.64835>;
		turn lupleg3 to z-axis <4.219780> speed <171.3637>;
		turn lleg3 to z-axis <0.000000> speed <203.2527>;
		turn lleg2 to z-axis <32.703297> speed <370.6374>;
		turn lleg1 to z-axis <0.000000> speed <119.5604>;
		turn rleg3 to z-axis <-17.582418> speed <199.2643>;
		turn rleg2 to z-axis <0.000000> speed <111.5835>;
		turn rleg1 to z-axis <-19.692308> speed <223.1764>;
		sleep animSpeed;
	}
	if( bMoving )
	{
		turn base to x-axis <0.703297> speed <15.93516>;
		turn base to y-axis <1.406593> speed <15.93516>;
		turn rupleg1 to y-axis <8.087912> speed <239.1209>;
		turn rupleg1 to z-axis <52.747253> speed <151.4401>;
		turn rupleg2 to y-axis <0.000000> speed <127.528>;
		turn rupleg3 to y-axis <15.824176> speed <215.2088>;
		turn rupleg3 to z-axis <48.175824> speed <223.1764>;
		turn lupleg1 to y-axis <9.489011> speed <111.5835>;
		turn lupleg2 to y-axis <3.862637> speed <179.3407>;
		turn lupleg2 to z-axis <-68.571429> speed <314.8363>;
		turn lupleg3 to y-axis <1.758242> speed <103.6159>;
		turn lleg3 to z-axis <-10.197802> speed <115.572>;
		turn lleg2 to z-axis <64.351648> speed <358.6813>;
		turn lleg1 to z-axis <-5.978022> speed <67.7478>;
		turn rleg3 to z-axis <-52.390110> speed <394.5495>;
		turn rleg2 to z-axis <3.516484> speed <39.84725>;
		turn rleg1 to z-axis <-50.637363> speed <350.7044>;
		sleep animSpeed;
	}
	if( bMoving )
	{
		turn base to x-axis <1.406593> speed <7.967582>;
		turn base to y-axis <1.758242> speed <3.97912>;
		turn rupleg1 to y-axis <16.527473> speed <95.64835>;
		turn rupleg1 to z-axis <39.384615> speed <151.4401>;
		turn rupleg2 to y-axis <-11.252747> speed <127.528>;
		turn rupleg3 to y-axis <24.615385> speed <99.62748>;
		turn rupleg3 to z-axis <28.483516> speed <223.1764>;
		turn lupleg1 to y-axis <20.038462> speed <119.5604>;
		turn lupleg2 to y-axis <-3.868132> speed <87.67143>;
		turn lupleg2 to z-axis <-40.791209> speed <314.8363>;
		turn lupleg3 to y-axis <18.285714> speed <187.3082>;
		turn lleg3 to z-axis <0.000000> speed <115.572>;
		turn lleg2 to z-axis <37.620879> speed <302.8802>;
		turn lleg1 to z-axis <0.000000> speed <67.7478>;
		turn rleg3 to z-axis <-17.582418> speed <394.5495>;
		turn rleg2 to z-axis <0.000000> speed <39.84725>;
		turn rleg1 to z-axis <-23.912088> speed <302.8802>;
		sleep animSpeed;
	}
}

activatescr()
{
	move lbody to x-axis [-4.375000] speed [7.415253];
	move rbody to x-axis [4.000000] speed [6.779648];
	sleep 590;

	turn launcher to x-axis <39.736264> speed <137.016484>;
	sleep 290;

	turn launcher to x-axis <93.538462> speed <244.554945>;
	sleep 220;

	turn launcher to x-axis <105.494505> speed <54.340659>;
	sleep 220;

	turn launcher to x-axis <102.329670> speed <18.615385>;
	sleep 170;

	turn launcher to x-axis <98.461538> speed <22.752747>;
	sleep 170;
}

deactivatescr()
{
	move lbody to x-axis [-4.375000] now;
	move rbody to x-axis [4.000000] now;
	turn launcher to x-axis <98.461538> now;
	turn launcher to x-axis <92.131868> speed <31.648352>;
	sleep 200;

	turn launcher to x-axis <70.681319> speed <107.247253>;
	sleep 200;

	turn launcher to x-axis <17.230769> speed <267.252747>;
	sleep 200;

	turn launcher to x-axis <0.351648> speed <84.395604>;
	sleep 200;

	move lbody to x-axis [0.000000] speed [21.875000];
	move rbody to x-axis [0.000000] speed [20.000000];
	sleep 200;
}

stand()
{
	turn lupleg1 to z-axis <0.000000> speed <170>;
	turn lupleg1 to y-axis <0.000000> speed <170>;
	turn lupleg1 to x-axis <0.000000> speed <170>;
	turn lupleg2 to z-axis <0.000000> speed <170>;
	turn lupleg2 to y-axis <0.000000> speed <170>;
	turn lupleg2 to x-axis <0.000000> speed <170>;
	turn lupleg3 to z-axis <0.000000> speed <170>;
	turn lupleg3 to y-axis <0.000000> speed <170>;
	turn lupleg3 to x-axis <0.000000> speed <170>;
	turn lleg1 to z-axis <0.000000> speed <170>;
	turn lleg1 to y-axis <0.000000> speed <170>;
	turn lleg1 to x-axis <0.000000> speed <170>;
	turn lleg2 to z-axis <0.000000> speed <170>;
	turn lleg2 to y-axis <0.000000> speed <170>;
	turn lleg2 to x-axis <0.000000> speed <170>;
	turn lleg3 to z-axis <0.000000> speed <170>;
	turn lleg3 to y-axis <0.000000> speed <170>;
	turn lleg3 to x-axis <0.000000> speed <170>;
	
	turn rupleg1 to z-axis <0.000000> speed <170>;
	turn rupleg1 to y-axis <0.000000> speed <170>;
	turn rupleg1 to x-axis <0.000000> speed <170>;
	turn rupleg2 to z-axis <0.000000> speed <170>;
	turn rupleg2 to y-axis <0.000000> speed <170>;
	turn rupleg2 to x-axis <0.000000> speed <170>;
	turn rupleg3 to z-axis <0.000000> speed <170>;
	turn rupleg3 to y-axis <0.000000> speed <170>;
	turn rupleg3 to x-axis <0.000000> speed <170>;
	turn rleg1 to z-axis <0.000000> speed <170>;
	turn rleg1 to y-axis <0.000000> speed <170>;
	turn rleg1 to x-axis <0.000000> speed <170>;
	turn rleg2 to z-axis <0.000000> speed <170>;
	turn rleg2 to y-axis <0.000000> speed <170>;
	turn rleg2 to x-axis <0.000000> speed <170>;
	turn rleg3 to z-axis <0.000000> speed <170>;
	turn rleg3 to y-axis <0.000000> speed <170>;
	turn rleg3 to x-axis <0.000000> speed <170>;
}

HitByWeapon(Func_Var_1, Func_Var_2)
{
	turn base to z-axis Func_Var_2 speed <105.021978>;
	turn base to x-axis Func_Var_1 speed <105.021978>;
	wait-for-turn base around z-axis;
	wait-for-turn base around x-axis;
	turn base to z-axis <0.000000> speed <30.005495>;
	turn base to x-axis <0.000000> speed <30.005495>;
}

Go()
{
	call-script activatescr();
	Static_Var_1 = 1;
}

Stop()
{
	Static_Var_1 = 0;
	call-script deactivatescr();
}

RequestState(requestedstate, currentstate)
{
	if( statechg_StateChanging )
	{
		statechg_DesiredState = requestedstate;
		return (0);
	}
	statechg_StateChanging = TRUE;
	currentstate = statechg_DesiredState;
	statechg_DesiredState = requestedstate;
	while( statechg_DesiredState != currentstate )
	{
		if( statechg_DesiredState )
		{
			call-script Stop();
			currentstate = 1;
		}
		else
		{
			call-script Go();
			currentstate = 0;
		}
	}
	statechg_StateChanging = FALSE;
}

MotionControl(Func_Var_1)
{
	while( TRUE )
	{
		Func_Var_1 = bMoving;
		if( Func_Var_1 )
		{
			call-script walk();
		}
		else
		{
			if (justMoved)
			{
				call-script stand();
				justMoved = FALSE;
			}
			sleep 100;
		}
	}
}

UnitSpeed()
{
	while(TRUE)
	{
		currentSpeed = (get CURRENT_SPEED)*100/moveSpeed;
		if (currentSpeed<20) currentSpeed=20;
		animSpeed = 8800 / currentSpeed;
		sleep 142;
	}
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 500;
	}
	start-script UnitSpeed();
	start-script MotionControl();
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = SFXTYPE_BLACKSMOKE;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = SFXTYPE_WHITESMOKE;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Create()
{
	bMoving = FALSE;
	justMoved = FALSE;
	Static_Var_1 = 0;
	Static_Var_2 = 10000;
	statechg_DesiredState = TRUE;
	statechg_StateChanging = FALSE;
	moveSpeed = get MAX_SPEED;
	animSpeed = 88;
	start-script SmokeUnit();
}

StartMoving()
{
	bMoving = TRUE;
}

StopMoving()
{
	bMoving = FALSE;
	justMoved = TRUE;
}

RestoreAfterDelay()
{
	sleep Static_Var_2;
	set-signal-mask 0;
	start-script RequestState(1);
}

AimPrimary(heading, pitch)
{
	start-script RequestState(0);
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	while( !Static_Var_1 )
	{
		sleep 200;
	}
	start-script RestoreAfterDelay();
	return (1);
}

FirePrimary()
{
	sleep 3000;
}

QueryPrimary(piecenum)
{
	piecenum = emit;
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode base type BITMAPONLY | BITMAP1;
		explode launcher type BITMAPONLY | BITMAP2;
		explode lbody type BITMAPONLY | BITMAP3;
		explode lffoot type BITMAPONLY | BITMAP4;
		explode lleg1 type BITMAPONLY | BITMAP5;
		explode lleg2 type BITMAPONLY | BITMAP1;
		explode lleg3 type BITMAPONLY | BITMAP2;
		explode lrfoot type BITMAPONLY | BITMAP3;
		explode lupleg1 type BITMAPONLY | BITMAP4;
		explode lupleg2 type BITMAPONLY | BITMAP5;
		explode lupleg3 type BITMAPONLY | BITMAP1;
		explode rbody type BITMAPONLY | BITMAP2;
		explode rffoot type BITMAPONLY | BITMAP3;
		explode rleg1 type BITMAPONLY | BITMAP4;
		explode rleg2 type BITMAPONLY | BITMAP5;
		explode rleg3 type BITMAPONLY | BITMAP1;
		explode rrfoot type BITMAPONLY | BITMAP2;
		explode rupleg1 type BITMAPONLY | BITMAP3;
		explode rupleg2 type BITMAPONLY | BITMAP4;
		explode rupleg3 type BITMAPONLY | BITMAP5;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode base type BITMAPONLY | BITMAP1;
		explode launcher type BITMAPONLY | BITMAP2;
		explode lbody type BITMAPONLY | BITMAP3;
		explode lffoot type FALL | BITMAP4;
		explode lleg1 type FALL | BITMAP5;
		explode lleg2 type FALL | BITMAP1;
		explode lleg3 type FALL | BITMAP2;
		explode lrfoot type FALL | BITMAP3;
		explode lupleg1 type FALL | BITMAP4;
		explode lupleg2 type FALL | BITMAP5;
		explode lupleg3 type FALL | BITMAP1;
		explode rbody type BITMAPONLY | BITMAP2;
		explode rffoot type FALL | BITMAP3;
		explode rleg1 type FALL | BITMAP4;
		explode rleg2 type FALL | BITMAP5;
		explode rleg3 type FALL | BITMAP1;
		explode rrfoot type FALL | BITMAP2;
		explode rupleg1 type FALL | BITMAP3;
		explode rupleg2 type FALL | BITMAP4;
		explode rupleg3 type FALL | BITMAP5;
		return (0);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode base type BITMAPONLY | BITMAP1;
		explode launcher type BITMAPONLY | BITMAP2;
		explode lbody type BITMAPONLY | BITMAP3;
		explode lffoot type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP4;
		explode lleg1 type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP5;
		explode lleg2 type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP1;
		explode lleg3 type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP2;
		explode lrfoot type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP3;
		explode lupleg1 type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP4;
		explode lupleg2 type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP5;
		explode lupleg3 type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP1;
		explode rbody type BITMAPONLY | BITMAP2;
		explode rffoot type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP3;
		explode rleg1 type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP4;
		explode rleg2 type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP5;
		explode rleg3 type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP1;
		explode rrfoot type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP2;
		explode rupleg1 type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP3;
		explode rupleg2 type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP4;
		explode rupleg3 type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP5;
		return (0);
	}
	corpsetype = 3;
	explode base type BITMAPONLY | BITMAP1;
	explode launcher type BITMAPONLY | BITMAP2;
	explode lbody type BITMAPONLY | BITMAP3;
	explode lffoot type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP4;
	explode lleg1 type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP5;
	explode lleg2 type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP1;
	explode lleg3 type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP2;
	explode lrfoot type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP3;
	explode lupleg1 type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP4;
	explode lupleg2 type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP5;
	explode lupleg3 type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP1;
	explode rbody type BITMAPONLY | BITMAP2;
	explode rffoot type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP3;
	explode rleg1 type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP4;
	explode rleg2 type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP5;
	explode rleg3 type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP1;
	explode rrfoot type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP2;
	explode rupleg1 type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP3;
	explode rupleg2 type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP4;
	explode rupleg3 type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP5;
	return (0);
}
