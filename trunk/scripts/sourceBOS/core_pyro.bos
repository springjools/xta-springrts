#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  torso, ruparm, luparm, lloarm, firept, pelvis, rleg, rfoot,
       lleg, lfoot, lthigh, rthigh, flame1, flame2, flame3, ground;

static-var  bMoving, bAiming, Static_Var_3, restore_delay, Static_Var_5,
            gun_1, maxSpeed, currentSpeed;

// Signal definitions
#define SIG_AIM				4


pilotlight()
{
	while( TRUE )
	{
		if( gun_1 )
		{
			Static_Var_5 = Rand( 1, 3 );
			if( Static_Var_5 == 1 )
			{
				emit-sfx 1024 from flame2;
			}
			else if( Static_Var_5 == 2 )
			{
				emit-sfx 1024 from flame1;
			}
			else
			{
				emit-sfx 1024 from flame3;
			}
		}
		sleep 30;
	}
}

walk()
{
	if( bMoving )
	{
		move pelvis to y-axis [0.000000] now;
		move ruparm to y-axis [0.000000] now;
		move luparm to x-axis [0.000000] now;
		move luparm to y-axis [2.500000] now;
		move luparm to z-axis [0.000000] now;
		move lloarm to y-axis [0.000000] now;
		move rleg to y-axis [0.000000] now;
		move rleg to z-axis [0.000000] now;
		move rfoot to z-axis [0.000000] now;
		move lleg to y-axis [0.000000] now;
		move lleg to z-axis [0.000000] now;
		move lfoot to z-axis [0.000000] now;
		turn pelvis to x-axis <0.000000> now;
		turn lthigh to x-axis <11.000000> now;
		turn rthigh to x-axis <-42.000000> now;
		turn torso to x-axis <17.000000> now;
		turn rleg to x-axis <-5.000000> now;
		turn rfoot to x-axis <47.000000> now;
		turn lleg to x-axis <47.000000> now;
		turn lfoot to x-axis <-50.000000> now;
		sleep 8000 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.000000] now;
		turn pelvis to x-axis <-3.000000> now;
		turn lthigh to x-axis <34.000000> now;
		turn rthigh to x-axis <-28.000000> now;
		turn torso to x-axis <17.000000> now;
		turn rleg to x-axis <-7.000000> now;
		turn rfoot to x-axis <38.000000> now;
		turn lleg to x-axis <6.000000> now;
		turn lfoot to x-axis <-32.000000> now;
		sleep 6000 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.000000] now;
		turn pelvis to x-axis <-5.000000> now;
		turn lthigh to x-axis <25.000000> now;
		turn rthigh to x-axis <-19.000000> now;
		turn torso to x-axis <17.000000> now;
		turn rleg to x-axis <-5.000000> now;
		turn rfoot to x-axis <28.000000> now;
		turn lleg to x-axis <-8.000000> now;
		turn lfoot to x-axis <-7.000000> now;
		sleep 6000 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.000000] now;
		turn pelvis to x-axis <-6.000000> now;
		turn lthigh to x-axis <-1.000000> now;
		turn rthigh to x-axis <0.000000> now;
		turn torso to x-axis <17.000000> now;
		turn rleg to x-axis <3.000000> now;
		turn rfoot to x-axis <2.000000> now;
		turn lleg to x-axis <-17.000000> now;
		turn lfoot to x-axis <33.000000> now;
		sleep 6000 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.000000] now;
		turn pelvis to x-axis <-5.000000> now;
		turn lthigh to x-axis <-40.000000> now;
		turn rthigh to x-axis <2.000000> now;
		turn torso to x-axis <17.000000> now;
		turn rleg to x-axis <8.000000> now;
		turn rfoot to x-axis <-6.000000> now;
		turn lleg to x-axis <-17.000000> now;
		turn lfoot to x-axis <43.000000> now;
		sleep 6000 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.000000] now;
		turn pelvis to x-axis <-3.000000> now;
		turn lthigh to x-axis <-61.000000> now;
		turn rthigh to x-axis <13.000000> now;
		turn rleg to x-axis <7.000000> now;
		turn rfoot to x-axis <-18.000000> now;
		turn lleg to x-axis <-12.000000> now;
		turn lfoot to x-axis <29.000000> now;
		sleep 6000 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.000000] now;
		turn pelvis to x-axis <0.000000> now;
		turn lthigh to x-axis <-55.000000> now;
		turn torso to x-axis <17.000000> now;
		turn rleg to x-axis <20.000000> now;
		turn rfoot to x-axis <-34.000000> now;
		turn lleg to x-axis <-7.000000> now;
		turn lfoot to x-axis <16.000000> now;
		sleep 3000 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.000000] now;
		turn pelvis to x-axis <0.000000> now;
		turn lthigh to x-axis <-42.000000> now;
		turn rthigh to x-axis <13.000000> now;
		turn torso to x-axis <17.000000> now;
		turn rleg to x-axis <40.000000> now;
		turn rfoot to x-axis <-47.000000> now;
		turn lleg to x-axis <-4.000000> now;
		turn lfoot to x-axis <47.000000> now;
		sleep 8000 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.000000] now;
		turn pelvis to x-axis <-3.000000> now;
		turn lthigh to x-axis <-33.000000> now;
		turn rthigh to x-axis <34.000000> now;
		turn rleg to x-axis <9.000000> now;
		turn rfoot to x-axis <-34.000000> now;
		turn lleg to x-axis <-6.000000> now;
		turn lfoot to x-axis <43.000000> now;
		sleep 6000 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.000000] now;
		turn pelvis to x-axis <-5.000000> now;
		turn lthigh to x-axis <-25.000000> now;
		turn rthigh to x-axis <29.000000> now;
		turn torso to x-axis <17.000000> now;
		turn rleg to x-axis <-14.000000> now;
		turn rfoot to x-axis <-10.000000> now;
		turn lleg to x-axis <-4.000000> now;
		turn lfoot to x-axis <34.000000> now;
		sleep 6000 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-2.500000] now;
		turn pelvis to x-axis <-6.000000> now;
		turn lthigh to x-axis <-12.000000> now;
		turn rthigh to x-axis <0.000000> now;
		turn torso to x-axis <17.000000> now;
		turn rleg to x-axis <-21.000000> now;
		turn rfoot to x-axis <30.000000> now;
		turn lleg to x-axis <0.000000> now;
		turn lfoot to x-axis <19.000000> now;
		sleep 6000 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.000000] now;
		turn pelvis to x-axis <-5.000000> now;
		turn lthigh to x-axis <0.000000> now;
		turn rthigh to x-axis <-48.000000> now;
		turn torso to x-axis <17.000000> now;
		turn rleg to x-axis <-25.000000> now;
		turn rfoot to x-axis <56.000000> now;
		turn lleg to x-axis <5.000000> now;
		turn lfoot to x-axis <0.000000> now;
		sleep 6000 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.000000] now;
		turn pelvis to x-axis <-3.000000> now;
		turn lthigh to x-axis <9.000000> now;
		turn rthigh to x-axis <-53.000000> now;
		turn rfoot to x-axis <26.000000> now;
		turn lleg to x-axis <32.000000> now;
		turn lfoot to x-axis <-38.000000> now;
		sleep 6000 / currentSpeed;
	}
	move pelvis to y-axis [0.000000] now;
	turn pelvis to x-axis <0.000000> now;
	turn lthigh to x-axis <11.000000> now;
	turn rthigh to x-axis <-37.000000> now;
	turn torso to x-axis <17.000000> now;
	turn rleg to x-axis <-9.000000> now;
	turn rfoot to x-axis <42.000000> now;
	turn lleg to x-axis <31.000000> now;
	turn lfoot to x-axis <-41.000000> now;
	sleep 3000 / currentSpeed;
}

walklegs()
{
	if( bMoving )
	{
		move pelvis to y-axis [0.000000] now;
		move ruparm to y-axis [0.000000] now;
		move luparm to x-axis [0.000000] now;
		move luparm to y-axis [2.500000] now;
		move luparm to z-axis [0.000000] now;
		move lloarm to y-axis [0.000000] now;
		move rleg to y-axis [0.000000] now;
		move rleg to z-axis [0.000000] now;
		move rfoot to z-axis [0.000000] now;
		move lleg to y-axis [0.000000] now;
		move lleg to z-axis [0.000000] now;
		move lfoot to z-axis [0.000000] now;
		turn pelvis to x-axis <0.000000> now;
		turn lthigh to x-axis <11.000000> now;
		turn rthigh to x-axis <-42.000000> now;
		turn rleg to x-axis <-5.000000> now;
		turn rfoot to x-axis <47.000000> now;
		turn lleg to x-axis <47.000000> now;
		turn lfoot to x-axis <-50.000000> now;
		sleep 8000 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.000000] now;
		turn pelvis to x-axis <-3.000000> now;
		turn lthigh to x-axis <34.000000> now;
		turn rthigh to x-axis <-28.000000> now;
		turn rleg to x-axis <-7.000000> now;
		turn rfoot to x-axis <38.000000> now;
		turn lleg to x-axis <6.000000> now;
		turn lfoot to x-axis <-32.000000> now;
		sleep 6000 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.000000] now;
		turn pelvis to x-axis <-5.000000> now;
		turn lthigh to x-axis <25.000000> now;
		turn rthigh to x-axis <-19.000000> now;
		turn rleg to x-axis <-5.000000> now;
		turn rfoot to x-axis <28.000000> now;
		turn lleg to x-axis <-9.000000> now;
		turn lfoot to x-axis <-7.000000> now;
		sleep 6000 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.000000] now;
		turn pelvis to x-axis <-6.000000> now;
		turn lthigh to x-axis <-1.000000> now;
		turn rthigh to x-axis <0.000000> now;
		turn rleg to x-axis <3.000000> now;
		turn rfoot to x-axis <2.000000> now;
		turn lleg to x-axis <-17.000000> now;
		turn lfoot to x-axis <33.000000> now;
		sleep 6000 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.000000] now;
		turn pelvis to x-axis <-5.000000> now;
		turn lthigh to x-axis <-40.000000> now;
		turn rthigh to x-axis <2.000000> now;
		turn rleg to x-axis <8.000000> now;
		turn rfoot to x-axis <-6.000000> now;
		turn lleg to x-axis <-17.000000> now;
		turn lfoot to x-axis <43.000000> now;
		sleep 6000 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.000000] now;
		turn pelvis to x-axis <-3.000000> now;
		turn lthigh to x-axis <-61.000000> now;
		turn rthigh to x-axis <13.000000> now;
		turn rleg to x-axis <7.000000> now;
		turn rfoot to x-axis <-18.000000> now;
		turn lleg to x-axis <-12.000000> now;
		turn lfoot to x-axis <28.000000> now;
		sleep 6000 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.000000] now;
		turn pelvis to x-axis <0.000000> now;
		turn lthigh to x-axis <-55.000000> now;
		turn rleg to x-axis <20.000000> now;
		turn rfoot to x-axis <-34.000000> now;
		turn lleg to x-axis <-7.000000> now;
		turn lfoot to x-axis <16.000000> now;
		sleep 3000 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.000000] now;
		turn pelvis to x-axis <0.000000> now;
		turn lthigh to x-axis <-42.000000> now;
		turn rthigh to x-axis <13.000000> now;
		turn rleg to x-axis <40.000000> now;
		turn rfoot to x-axis <-47.000000> now;
		turn lleg to x-axis <-4.000000> now;
		turn lfoot to x-axis <47.000000> now;
		sleep 8000 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.000000] now;
		turn pelvis to x-axis <-3.000000> now;
		turn lthigh to x-axis <-33.000000> now;
		turn rthigh to x-axis <34.000000> now;
		turn rleg to x-axis <9.000000> now;
		turn rfoot to x-axis <-34.000000> now;
		turn lleg to x-axis <-6.000000> now;
		turn lfoot to x-axis <43.000000> now;
		sleep 6000 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.000000] now;
		turn pelvis to x-axis <-5.000000> now;
		turn lthigh to x-axis <-25.000000> now;
		turn rthigh to x-axis <29.000000> now;
		turn rleg to x-axis <-14.000000> now;
		turn rfoot to x-axis <-10.000000> now;
		turn lleg to x-axis <-4.000000> now;
		turn lfoot to x-axis <34.000000> now;
		sleep 6000 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-2.500000] now;
		turn pelvis to x-axis <-6.000000> now;
		turn lthigh to x-axis <-12.000000> now;
		turn rthigh to x-axis <0.000000> now;
		turn rleg to x-axis <-21.000000> now;
		turn rfoot to x-axis <30.000000> now;
		turn lleg to x-axis <0.000000> now;
		turn lfoot to x-axis <19.000000> now;
		sleep 6000 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.000000] now;
		turn pelvis to x-axis <-5.000000> now;
		turn lthigh to x-axis <0.000000> now;
		turn rthigh to x-axis <-48.000000> now;
		turn rleg to x-axis <-25.000000> now;
		turn rfoot to x-axis <56.000000> now;
		turn lleg to x-axis <5.000000> now;
		turn lfoot to x-axis <0.000000> now;
		sleep 6000 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.000000] now;
		turn pelvis to x-axis <-3.000000> now;
		turn lthigh to x-axis <9.000000> now;
		turn rthigh to x-axis <-53.000000> now;
		turn rfoot to x-axis <26.000000> now;
		turn lleg to x-axis <32.000000> now;
		turn lfoot to x-axis <-38.000000> now;
		sleep 6000 / currentSpeed;
	}
	move pelvis to y-axis [0.000000] now;
	turn pelvis to x-axis <0.000000> now;
	turn lthigh to x-axis <11.000000> now;
	turn rthigh to x-axis <-37.000000> now;
	turn rleg to x-axis <-9.000000> now;
	turn rfoot to x-axis <42.000000> now;
	turn lleg to x-axis <31.000000> now;
	turn lfoot to x-axis <-41.000000> now;
	sleep 3000 / currentSpeed;
}

MotionControl(moving, aiming, justmoved)
{
	justmoved = TRUE;
	while( TRUE )
	{
		moving = bMoving;
		aiming = bAiming;
		if( moving )
		{
			if( aiming )
			{
				Static_Var_3 = 1;
				call-script walklegs();
			}
			else
			{
				Static_Var_3 = 0;
				call-script walk();
			}
			justmoved = TRUE;
		}
		else
		{
			Static_Var_3 = 1;
			if( justmoved )
			{
				move pelvis to y-axis [0.000000] speed [2.500000];
				turn rthigh to x-axis <0.000000> speed <200.000000>;
				turn rleg to x-axis <0.000000> speed <200.000000>;
				turn rfoot to x-axis <0.000000> speed <200.000000>;
				turn lthigh to x-axis <0.000000> speed <200.000000>;
				turn lleg to x-axis <0.000000> speed <200.000000>;
				turn lfoot to x-axis <0.000000> speed <200.000000>;
				if( !aiming )
				{
					turn torso to y-axis <0.000000> speed <90.000000>;
					turn ruparm to x-axis <0.000000> speed <200.000000>;
					turn lloarm to x-axis <0.000000> speed <200.000000>;
					turn luparm to x-axis <0.000000> speed <200.000000>;
				}
				justmoved = FALSE;
			}
			sleep 100;
		}
	}
}

OFF()
{
	if( !gun_1 )
	{
		sleep 333;
		gun_1 = ruparm;
	}
}

ON()
{
	while( TRUE )
	{
		if( !gun_1 )
		{
			emit-sfx 1025 from firept;
			sleep 15;
		}
		else
		{
			sleep 142;
		}
	}
}

UnitSpeed()
{
	while( TRUE )
	{
		currentSpeed = (get CURRENT_SPEED) * 100 / maxSpeed;
		if( currentSpeed <= 20 ) currentSpeed = 100;
		sleep 142;
	}
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 500;
	}
	start-script UnitSpeed();
	start-script pilotlight();
	start-script MotionControl();
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 258;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 257;
			}
			emit-sfx smoketype from torso;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Create()
{
	hide firept;
	hide flame1;
	hide flame2;
	hide flame3;
	bMoving = FALSE;
	bAiming = FALSE;
	Static_Var_3 = 1;
	restore_delay = 2000;
	maxSpeed = get MAX_SPEED;
	currentSpeed = 100;
	gun_1 = ruparm;
	start-script SmokeUnit();
	start-script ON();
	start-script OFF();
}

SetMaxReloadTime(Func_Var_1)
{
	restore_delay = Func_Var_1 * 2;
}

StartMoving()
{
	bMoving = TRUE;
}

StopMoving()
{
	bMoving = FALSE;
}

SweetSpot(piecenum)
{
	piecenum = torso;
}

RestoreAfterDelay()
{
	sleep restore_delay;
	turn torso to y-axis <0.000000> speed <90.000000>;
	turn ruparm to x-axis <0.000000> speed <45.000000>;
	turn luparm to x-axis <0.000000> speed <45.000000>;
	wait-for-turn torso around y-axis;
	wait-for-turn ruparm around x-axis;
	wait-for-turn luparm around x-axis;
	bAiming = FALSE;
}

AimFromPrimary(piecenum)
{
	piecenum = torso;
}

QueryPrimary(piecenum)
{
	piecenum = firept;
}

AimPrimary(heading, pitch)
{
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	bAiming = TRUE;
	while( !Static_Var_3 )
	{
		sleep 100;
	}
	turn torso to y-axis heading speed <300.000000>;
	turn luparm to x-axis <0.000000> - pitch speed <90.000000>;
	turn ruparm to x-axis <-17.000000> - pitch speed <90.000000>;
	wait-for-turn torso around y-axis;
	wait-for-turn luparm around x-axis;
	wait-for-turn ruparm around x-axis;
	start-script RestoreAfterDelay();
	return (1);
}

FirePrimary()
{
	gun_1 = torso;
	start-script OFF();
}

Killed(severity, corpsetype)
{
	hide flame1;
	hide flame2;
	hide flame3;
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode ground type FALL | BITMAP5;
		explode lfoot type FALL | BITMAP1;
		explode lleg type FALL | BITMAP2;
		explode lloarm type FALL | BITMAP3;
		explode lthigh type FALL | BITMAP4;
		explode luparm type FALL | BITMAP5;
		explode pelvis type FALL | BITMAP1;
		explode rfoot type FALL | BITMAP2;
		explode rleg type FALL | BITMAP3;
		explode rthigh type FALL | BITMAP4;
		explode ruparm type SHATTER | BITMAP5;
		explode torso type BITMAPONLY | BITMAP5;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode firept type FALL | BITMAP1;
		explode flame1 type FALL | BITMAP2;
		explode flame2 type FALL | BITMAP3;
		explode flame3 type FALL | BITMAP4;
		explode ground type FALL | BITMAP5;
		explode lfoot type FALL | BITMAP1;
		explode lleg type FALL | BITMAP2;
		explode lloarm type FALL | BITMAP3;
		explode lthigh type FALL | BITMAP4;
		explode luparm type FALL | BITMAP5;
		explode pelvis type FALL | BITMAP1;
		explode rfoot type FALL | BITMAP2;
		explode rleg type FALL | BITMAP3;
		explode rthigh type FALL | BITMAP4;
		explode ruparm type SHATTER | BITMAP5;
		explode torso type BITMAPONLY | BITMAP5;
		return (0);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode firept type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode flame1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode flame2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode flame3 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode ground type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
		explode lfoot type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode lleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode lloarm type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode lthigh type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode luparm type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
		explode pelvis type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode rfoot type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode rleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode rthigh type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode ruparm type SHATTER | BITMAP5;
		explode torso type BITMAPONLY | BITMAP5;
		return (0);
	}
	corpsetype = 3;
	explode firept type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode flame1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode flame2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode flame3 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode ground type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
	explode lfoot type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode lleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode lloarm type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode lthigh type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode luparm type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
	explode pelvis type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode rfoot type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode rleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode rthigh type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode ruparm type SHATTER | EXPLODE_ON_HIT | BITMAP5;
	explode torso type BITMAPONLY | BITMAP5;
}
