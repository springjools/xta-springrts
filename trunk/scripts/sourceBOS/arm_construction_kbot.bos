#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

#define SIG_BUILD		4	

piece  nanospray, turret, rfoot, lfoot, pelvis, lflap, rflap, guncover,
       nozzle, arms, nanobody2, ground;

static-var  bMoving, statechg_DesiredState, statechg_StateChanging,
			notBuilding, moveSpeed, currentSpeed;


Build()
{
	set-signal-mask SIG_BUILD;
	while( TRUE )
	{
		emit-sfx UNIT_SFX1 from nanospray;
		sleep 100;
	}
}

walk()
{
	if( bMoving )
	{
		move rfoot to y-axis [0.000000] now;
		move rfoot to z-axis [-4.375000] now;
		move lfoot to y-axis [0.000000] now;
		move lfoot to z-axis [3.500000] now;
		turn pelvis to x-axis <2.104396> now;
		turn rfoot to x-axis <-2.104396> now;
		turn lfoot to x-axis <-2.104396> now;
		sleep 1700 / currentSpeed;
	}
	if( bMoving )
	{
		turn pelvis to x-axis <0.000000> now;
		turn rfoot to x-axis <0.000000> now;
		turn lfoot to x-axis <0.000000> now;
		sleep 800 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.500000] now;
		move rfoot to y-axis [0.499985] now;
		move rfoot to z-axis [-3.750000] now;
		move lfoot to y-axis [-0.500000] now;
		move lfoot to z-axis [2.500000] now;
		turn pelvis to x-axis <-1.049451> now;
		turn rfoot to x-axis <0.000000> now;
		turn lfoot to x-axis <1.401099> now;
		sleep 2500 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [1.000000] now;
		move rfoot to y-axis [1.124985] now;
		move rfoot to z-axis [-2.500000] now;
		move lfoot to y-axis [-1.000000] now;
		move lfoot to z-axis [1.750000] now;
		turn pelvis to x-axis <-2.104396> now;
		turn lfoot to x-axis <2.104396> now;
		sleep 2200 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [1.750000] now;
		move rfoot to z-axis [-1.250000] now;
		move lfoot to y-axis [-1.750000] now;
		move lfoot to z-axis [1.000000] now;
		turn pelvis to x-axis <-3.159341> now;
		turn rfoot to x-axis <-4.560440> now;
		turn lfoot to x-axis <3.516484> now;
		sleep 1900 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [2.875000] now;
		move rfoot to y-axis [1.499985] now;
		move rfoot to z-axis [0.000000] now;
		move lfoot to y-axis [-2.875000] now;
		move lfoot to z-axis [0.000000] now;
		turn pelvis to x-axis <-4.571429> now;
		turn rfoot to x-axis <-5.626374> now;
		turn lfoot to x-axis <4.571429> now;
		sleep 1900 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [1.999985] now;
		move rfoot to z-axis [1.250000] now;
		move lfoot to y-axis [-2.000000] now;
		move lfoot to z-axis [-1.000000] now;
		turn pelvis to x-axis <-4.214286> now;
		turn rfoot to x-axis <-19.335165> now;
		turn lfoot to x-axis <4.214286> now;
		sleep 1900 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [1.000000] now;
		move rfoot to y-axis [2.624985] now;
		move rfoot to z-axis [3.250000] now;
		move lfoot to y-axis [-1.000000] now;
		move lfoot to z-axis [-4.375000] now;
		turn pelvis to x-axis <-2.104396> now;
		turn lfoot to x-axis <2.104396> now;
		sleep 1900 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.000000] now;
		move rfoot to y-axis [0.000000] now;
		move rfoot to z-axis [4.000000] now;
		move lfoot to y-axis [0.000000] now;
		turn pelvis to x-axis <2.104396> now;
		turn rfoot to x-axis <-1.747253> now;
		turn lfoot to x-axis <-2.104396> now;
		sleep 1700 / currentSpeed;
	}
	if( bMoving )
	{
		turn pelvis to x-axis <0.000000> now;
		turn rfoot to x-axis <0.000000> now;
		turn lfoot to x-axis <0.000000> now;
		sleep 800 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.500000] now;
		move rfoot to y-axis [-0.500000] now;
		move rfoot to z-axis [2.500000] now;
		move lfoot to y-axis [0.499985] now;
		move lfoot to z-axis [-3.875000] now;
		turn pelvis to x-axis <-1.049451> now;
		turn rfoot to x-axis <1.049451> now;
		sleep 2500 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [1.000000] now;
		move rfoot to y-axis [-1.000000] now;
		move rfoot to z-axis [1.750000] now;
		move lfoot to y-axis [1.124985] now;
		move lfoot to z-axis [-2.500000] now;
		turn pelvis to x-axis <-2.104396> now;
		turn rfoot to x-axis <2.456044> now;
		sleep 2200 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [1.749985] now;
		move rfoot to y-axis [-1.750000] now;
		move rfoot to z-axis [1.000000] now;
		move lfoot to y-axis [1.499985] now;
		move lfoot to z-axis [-1.249985] now;
		turn pelvis to x-axis <-3.159341> now;
		turn rfoot to x-axis <3.159341> now;
		turn lfoot to x-axis <-4.560440> now;
		sleep 1900 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [2.875000] now;
		move rfoot to y-axis [-2.750000] now;
		move rfoot to z-axis [0.000000] now;
		move lfoot to y-axis [1.499985] now;
		move lfoot to z-axis [0.000000] now;
		turn pelvis to x-axis <-4.923077> now;
		turn rfoot to x-axis <4.923077> now;
		turn lfoot to x-axis <-5.626374> now;
		sleep 1900 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [2.000000] now;
		move rfoot to y-axis [-2.000000] now;
		move rfoot to z-axis [-1.000000] now;
		move lfoot to z-axis [1.250000] now;
		turn pelvis to x-axis <-4.214286> now;
		turn rfoot to x-axis <4.214286> now;
		turn lfoot to x-axis <-19.335165> now;
		sleep 1900 / currentSpeed;
	}
	move pelvis to y-axis [1.000000] now;
	move rfoot to y-axis [-1.000000] now;
	move rfoot to z-axis [-4.375000] now;
	move lfoot to y-axis [2.624985] now;
	move lfoot to z-axis [3.250000] now;
	turn pelvis to x-axis <2.104396> now;
	turn rfoot to x-axis <-2.104396> now;
	turn lfoot to x-axis <-19.335165> now;
	sleep 1900 / currentSpeed;
}

walklegs()
{
	if( bMoving )
	{
		move rfoot to y-axis [0.000000] now;
		move rfoot to z-axis [-4.375000] now;
		move lfoot to y-axis [0.000000] now;
		move lfoot to z-axis [3.500000] now;
		turn pelvis to x-axis <2.104396> now;
		turn rfoot to x-axis <-2.104396> now;
		turn lfoot to x-axis <-2.104396> now;
		sleep 1700 / currentSpeed;
	}
	if( bMoving )
	{
		turn pelvis to x-axis <0.000000> now;
		turn rfoot to x-axis <0.000000> now;
		turn lfoot to x-axis <0.000000> now;
		sleep 800 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.500000] now;
		move rfoot to y-axis [0.499985] now;
		move rfoot to z-axis [-3.750000] now;
		move lfoot to y-axis [-0.500000] now;
		move lfoot to z-axis [2.500000] now;
		turn pelvis to x-axis <-1.049451> now;
		turn rfoot to x-axis <0.000000> now;
		turn lfoot to x-axis <1.401099> now;
		sleep 2500 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [1.000000] now;
		move rfoot to y-axis [1.124985] now;
		move rfoot to z-axis [-2.500000] now;
		move lfoot to y-axis [-1.000000] now;
		move lfoot to z-axis [1.750000] now;
		turn pelvis to x-axis <-2.104396> now;
		turn lfoot to x-axis <2.104396> now;
		sleep 2200 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [1.750000] now;
		move rfoot to z-axis [-1.250000] now;
		move lfoot to y-axis [-1.750000] now;
		move lfoot to z-axis [1.000000] now;
		turn pelvis to x-axis <-3.159341> now;
		turn rfoot to x-axis <-4.560440> now;
		turn lfoot to x-axis <3.516484> now;
		sleep 1900 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [2.875000] now;
		move rfoot to y-axis [1.499985] now;
		move rfoot to z-axis [0.000000] now;
		move lfoot to y-axis [-2.875000] now;
		move lfoot to z-axis [0.000000] now;
		turn pelvis to x-axis <-4.571429> now;
		turn rfoot to x-axis <-5.626374> now;
		turn lfoot to x-axis <4.571429> now;
		sleep 1900 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [1.999985] now;
		move rfoot to z-axis [1.250000] now;
		move lfoot to y-axis [-2.000000] now;
		move lfoot to z-axis [-1.000000] now;
		turn pelvis to x-axis <-4.214286> now;
		turn rfoot to x-axis <-19.335165> now;
		turn lfoot to x-axis <4.214286> now;
		sleep 1900 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [1.000000] now;
		move rfoot to y-axis [2.624985] now;
		move rfoot to z-axis [3.250000] now;
		move lfoot to y-axis [-1.000000] now;
		move lfoot to z-axis [-4.375000] now;
		turn pelvis to x-axis <-2.104396> now;
		turn lfoot to x-axis <2.104396> now;
		sleep 1900 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.000000] now;
		move rfoot to y-axis [0.000000] now;
		move rfoot to z-axis [4.000000] now;
		move lfoot to y-axis [0.000000] now;
		turn pelvis to x-axis <2.104396> now;
		turn rfoot to x-axis <-1.747253> now;
		turn lfoot to x-axis <-2.104396> now;
		sleep 1700 / currentSpeed;
	}
	if( bMoving )
	{
		turn pelvis to x-axis <0.000000> now;
		turn rfoot to x-axis <0.000000> now;
		turn lfoot to x-axis <0.000000> now;
		sleep 800 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.500000] now;
		move rfoot to y-axis [-0.500000] now;
		move rfoot to z-axis [2.500000] now;
		move lfoot to y-axis [0.499985] now;
		move lfoot to z-axis [-3.875000] now;
		turn pelvis to x-axis <-1.049451> now;
		turn rfoot to x-axis <1.049451> now;
		sleep 2500 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [1.000000] now;
		move rfoot to y-axis [-1.000000] now;
		move rfoot to z-axis [1.750000] now;
		move lfoot to y-axis [1.124985] now;
		move lfoot to z-axis [-2.500000] now;
		turn pelvis to x-axis <-2.104396> now;
		turn rfoot to x-axis <2.456044> now;
		sleep 2200 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [1.749985] now;
		move rfoot to y-axis [-1.750000] now;
		move rfoot to z-axis [1.000000] now;
		move lfoot to y-axis [1.499985] now;
		move lfoot to z-axis [-1.249985] now;
		turn pelvis to x-axis <-3.159341> now;
		turn rfoot to x-axis <3.159341> now;
		turn lfoot to x-axis <-4.560440> now;
		sleep 1900 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [2.875000] now;
		move rfoot to y-axis [-2.750000] now;
		move rfoot to z-axis [0.000000] now;
		move lfoot to y-axis [1.499985] now;
		move lfoot to z-axis [0.000000] now;
		turn pelvis to x-axis <-4.923077> now;
		turn rfoot to x-axis <4.923077> now;
		turn lfoot to x-axis <-5.626374> now;
		sleep 1900 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [2.000000] now;
		move rfoot to y-axis [-2.000000] now;
		move rfoot to z-axis [-1.000000] now;
		move lfoot to z-axis [1.250000] now;
		turn pelvis to x-axis <-4.214286> now;
		turn rfoot to x-axis <4.214286> now;
		turn lfoot to x-axis <-19.335165> now;
		sleep 1900 / currentSpeed;
	}
	move pelvis to y-axis [1.000000] now;
	move rfoot to y-axis [-1.000000] now;
	move rfoot to z-axis [-4.375000] now;
	move lfoot to y-axis [2.624985] now;
	move lfoot to z-axis [3.250000] now;
	turn pelvis to x-axis <2.104396> now;
	turn rfoot to x-axis <-2.104396> now;
	turn lfoot to x-axis <-19.335165> now;
	sleep 1900 / currentSpeed;
}

stand()
{
	move rfoot to y-axis [0.000000] now;
	move lfoot to y-axis [0.000000] now;
	sleep 200;
}

open()
{
	move rfoot to y-axis [0.000000] now;
	move lfoot to y-axis [0.000000] now;
	turn lflap to z-axis <0.000000> now;
	turn lflap to z-axis <97.923077> speed <600.000000>;
	turn rflap to z-axis <0.000000> now;
	turn rflap to z-axis <-97.923077> speed <600.000000>;
	sleep 150;

	turn guncover to x-axis <126.934066> speed <750.000000>;
	turn lflap to z-axis <97.923077> speed <0.000000>;
	turn rflap to z-axis <-97.923077> speed <0.000000>;
	sleep 160;

	move nozzle to z-axis [0.000000] speed [0.000000];
	turn lflap to z-axis <97.923077> speed <0.000000>;
	turn rflap to z-axis <-97.923077> speed <0.000000>;
	turn arms to x-axis <90.016484> speed <450.000000>;
	turn nanobody2 to x-axis <-90.016484> speed <450.000000>;
	sleep 180;

	move nozzle to z-axis [11.000000] speed [42.500000];
	turn lflap to z-axis <97.923077> speed <0.000000>;
	turn rflap to z-axis <-97.923077> speed <0.000000>;
	turn arms to x-axis <90.016484> speed <0.000000>;
	turn nanobody2 to x-axis <-90.016484> speed <0.000000>;
	sleep 475;
}

close()
{
	move rfoot to y-axis [0.000000] now;
	move lfoot to y-axis [0.000000] now;
	move nozzle to z-axis [11.000000] now;
	move nozzle to z-axis [-0.500000] speed [35.000000];
	turn guncover to x-axis <126.934066> now;
	turn lflap to z-axis <97.923077> now;
	turn lflap to z-axis <97.923077> speed <0.000000>;
	turn rflap to z-axis <-97.923077> now;
	turn rflap to z-axis <-97.923077> speed <0.000000>;
	turn arms to x-axis <90.016484> now;
	turn arms to x-axis <90.016484> speed <0.000000>;
	turn nanobody2 to x-axis <-90.016484> now;
	turn turret to y-axis <0.000000> speed <480.000000>;
	sleep 332;

	turn lflap to z-axis <97.923077> speed <0.000000>;
	turn rflap to z-axis <-97.923077> speed <0.000000>;
	turn arms to x-axis <0.000000> speed <270.000000>;
	turn nanobody2 to x-axis <-40.082418> speed <150.000000>;
	sleep 334;

	turn guncover to x-axis <126.945055> speed <0.000000>;
	turn lflap to z-axis <97.923077> speed <0.000000>;
	turn nanobody2 to x-axis <0.000000> speed <120.000000>;
	sleep 334;

	turn guncover to x-axis <0.000000> speed <375.000000>;
	turn lflap to z-axis <97.923077> speed <0.000000>;
	turn rflap to z-axis <-97.923077> speed <0.000000>;
	sleep 334;

	turn lflap to z-axis <0.000000> speed <300.000000>;
	turn rflap to z-axis <0.000000> speed <300.000000>;
	sleep 668;
}

MotionControl(Func_Var_1, Func_Var_2)
{
	while( TRUE )
	{
		Func_Var_1 = bMoving;
		Func_Var_2 = notBuilding;
		if( Func_Var_1 )
		{
			if( Func_Var_2 )
			{
				call-script walk();
			}
			else
			{
				call-script walklegs();
			}
		}
		else
		{
			call-script stand();
		}
	}
}

UnitSpeed()
{
	while(TRUE)
	{
		currentSpeed = (get CURRENT_SPEED)*100/moveSpeed;
		if (currentSpeed<20) currentSpeed=20;
		sleep 142;
	}
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 500;
	}
	start-script UnitSpeed();
	start-script MotionControl();
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = SFXTYPE_BLACKSMOKE;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = SFXTYPE_WHITESMOKE;
			}
			emit-sfx smoketype from turret;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

/*
Go()
{
	Static_Var_3 = 1;
	call-script open();
	turn turret to y-axis Static_Var_1 speed <480.000000>;
	wait-for-turn turret around y-axis;
	set INBUILDSTANCE to 1;
}

Stop()
{
	set INBUILDSTANCE to 0;
	turn turret to y-axis <0.000000> speed <480.000000>;
	wait-for-turn turret around y-axis;
	call-script close();
	Static_Var_3 = 0;
}
*/

RequestState(requestedstate, currentstate)
{
	if( statechg_StateChanging )
	{
		statechg_DesiredState = requestedstate;
		return (0);
	}
	statechg_StateChanging = TRUE;
	currentstate = statechg_DesiredState;
	statechg_DesiredState = requestedstate;
	while( statechg_DesiredState != currentstate )
	{
		if( statechg_DesiredState )
		{
			call-script close(); //Stop();
			notBuilding = 1;
			currentstate = 1;
		}
		else
		{
			call-script open(); //Go();
			notBuilding = 0;
			currentstate = 0;
		}
	}
	statechg_StateChanging = FALSE;
}

Create()
{
	bMoving = FALSE;
	/*
	Static_Var_3 = 0;
	Static_Var_4 = 1;
	Static_Var_1 = 0;
	*/
	statechg_DesiredState = TRUE;
	statechg_StateChanging = FALSE;
	notBuilding=1;
	moveSpeed = get MAX_SPEED;
	currentSpeed = 100;
	start-script SmokeUnit();
}

Activate()
{
	start-script RequestState(0);
}

Deactivate()
{
	start-script RequestState(1);
}

StartBuilding(heading, pitch)
{
	start-script RequestState(0);
	while( notBuilding ) sleep 100;
	signal SIG_BUILD;
	turn turret to y-axis heading speed <480.000000>;
	wait-for-turn turret around y-axis;
	set INBUILDSTANCE to 1;
	start-script Build();
}

StopBuilding()
{
	set INBUILDSTANCE to 0;
	signal SIG_BUILD;	
	set-signal-mask SIG_BUILD;
	sleep 6000;
	set-signal-mask 0;
	signal SIG_BUILD;	
	start-script RequestState(1);
}

StartMoving()
{
	bMoving = TRUE;
}

StopMoving()
{
	bMoving = FALSE;
}

QueryNanoPiece(piecenum)
{
	piecenum = nanospray;
}

/*
TargetHeading(Func_Var_1)
{
	Static_Var_1 = 0 - Func_Var_1;
}
*/

SweetSpot(piecenum)
{
	piecenum = turret;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode arms type FALL | BITMAP1;
		explode ground type BITMAPONLY | BITMAP2;
		explode guncover type FALL | BITMAP3;
		explode lflap type BITMAPONLY | BITMAP4;
		explode lfoot type SHATTER | BITMAP5;
		explode nanobody2 type BITMAPONLY | BITMAP1;
		explode nanospray type FALL | BITMAP2;
		explode nozzle type FALL | BITMAP3;
		explode pelvis type BITMAPONLY | BITMAP4;
		explode rflap type BITMAPONLY | BITMAP5;
		explode rfoot type SHATTER | BITMAP1;
		explode turret type BITMAPONLY | BITMAP2;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode arms type FALL | BITMAP1;
		explode ground type BITMAPONLY | BITMAP2;
		explode guncover type FALL | BITMAP3;
		explode lflap type BITMAPONLY | BITMAP4;
		explode lfoot type SHATTER | BITMAP5;
		explode nanobody2 type BITMAPONLY | BITMAP1;
		explode nanospray type FALL | BITMAP2;
		explode nozzle type FALL | BITMAP3;
		explode pelvis type BITMAPONLY | BITMAP4;
		explode rflap type BITMAPONLY | BITMAP5;
		explode rfoot type SHATTER | BITMAP1;
		explode turret type BITMAPONLY | BITMAP2;
		return (0);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode arms type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode ground type BITMAPONLY | BITMAP2;
		explode guncover type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode lflap type BITMAPONLY | BITMAP4;
		explode lfoot type SHATTER | BITMAP5;
		explode nanobody2 type BITMAPONLY | BITMAP1;
		explode nanospray type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode nozzle type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode pelvis type BITMAPONLY | BITMAP4;
		explode rflap type BITMAPONLY | BITMAP5;
		explode rfoot type SHATTER | BITMAP1;
		explode turret type BITMAPONLY | BITMAP2;
		return (0);
	}
	corpsetype = 3;
	explode arms type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode ground type BITMAPONLY | BITMAP2;
	explode guncover type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode lflap type BITMAPONLY | BITMAP4;
	explode lfoot type SHATTER | EXPLODE_ON_HIT | BITMAP5;
	explode nanobody2 type BITMAPONLY | BITMAP1;
	explode nanospray type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode nozzle type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode pelvis type BITMAPONLY | BITMAP4;
	explode rflap type BITMAPONLY | BITMAP5;
	explode rfoot type SHATTER | EXPLODE_ON_HIT | BITMAP1;
	explode turret type BITMAPONLY | BITMAP2;
	return (0);
}
