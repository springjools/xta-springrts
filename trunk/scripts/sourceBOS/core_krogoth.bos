#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  head, torso, hips, mpack, rgunflare, lgunflare, eyeflare, rmispoint,
       lmispoint, rleg, rthigh, lthigh, lleg, ltoes, lheel, rtoes, rheel,
       luparm, ruparm, rarm, larm, eyegun, rmissle2, lmissle2, lexhaust,
       rexhaust, lstomp, rstomp, ignite1, ignite2, ignite3, ignite4, ignite5,
       ignite6, ignite7, ignite8, ignite9, ignite10, leftshoulderflare, rightshoulderflare;

static-var  Static_Var_1, gun_3, bMoving, Static_Var_4, Static_Var_5,
            restore_delay, Static_Var_17, gun_1, gun_4, bAiming,
            Static_Var_21, moveSpeed, currentSpeed;

// Signal definitions
#define SIG_AIM				2
#define SIG_AIM_2			4
#define SIG_AIM_3			8

#define NUM_IGNITE 			10
#define FIRE_SFX			UNIT_SFX5
#define IGNITE_PIECE_1		ignite1
#define IGNITE_PIECE_2		ignite2
#define IGNITE_PIECE_3		ignite3
#define IGNITE_PIECE_4		ignite4
#define IGNITE_PIECE_5		ignite5
#define IGNITE_PIECE_6		ignite6
#define IGNITE_PIECE_7		ignite7
#define IGNITE_PIECE_8		ignite8
#define IGNITE_PIECE_9		ignite9
#define IGNITE_PIECE_10		ignite10

#include "XTA_FlameControl.h"

walk()
{
	if( bMoving )
	{
		move hips to y-axis [-0.424957] now;
		move lthigh to y-axis [0.424957] now;
		move rthigh to y-axis [0.799957] now;
		move torso to y-axis [-0.299957] now;
		turn hips to x-axis <9.000000> now;
		turn lthigh to x-axis <20.000000> now;
		turn rthigh to x-axis <-33.005495> now;
		turn torso to y-axis <-7.000000> now;
		//turn head to y-axis <7.000000> speed <30.1>;
		turn luparm to x-axis <-14.000000> now;
		turn ruparm to x-axis <26.005495> now;
		turn rarm to x-axis <-45.005495> now;
		turn larm to x-axis <8.000000> now;
		turn rleg to x-axis <13.000000> now;
		turn rheel to x-axis <-13.000000> now;
		turn lleg to x-axis <10.000000> now;
		turn lheel to x-axis <-10.000000> now;
		sleep 7000/currentSpeed;
	}
	if( bMoving )
	{
		move hips to y-axis [-0.875000] now;
		move lthigh to y-axis [0.875000] now;
		move rthigh to y-axis [0.625000] now;
		move torso to y-axis [-0.599960] now;
		turn hips to x-axis <11.000000> now;
		turn lthigh to x-axis <22.000000> now;
		turn rthigh to x-axis <-29.005495> now;
		turn torso to y-axis <-5.000000> now;
		//turn head to y-axis <5.000000> speed <30.1>;
		turn luparm to x-axis <-9.000000> now;
		turn ruparm to x-axis <30.005495> now;
		turn rarm to x-axis <-66.005495> now;
		turn larm to x-axis <17.000000> now;
		turn rleg to x-axis <9.000000> now;
		turn rheel to x-axis <8.000000> now;
		turn lleg to x-axis <21.000000> now;
		turn lheel to x-axis <-3.000000> now;
		emit-sfx UNIT_SFX4 from rstomp;
		sleep 7000/currentSpeed;
	}
	if( bMoving )
	{
		move hips to y-axis [-0.424957] now;
		move lthigh to y-axis [0.924957] now;
		move rthigh to y-axis [0.299957] now;
		move torso to y-axis [1.250000] now;
		turn hips to x-axis <9.000000> now;
		turn lthigh to x-axis <7.000000> now;
		turn rthigh to x-axis <-20.000000> now;
		turn torso to y-axis <-3.000000> now;
		//turn head to y-axis <3.000000> now;
		turn luparm to x-axis <0.000000> now;
		turn ruparm to x-axis <16.000000> now;
		turn rarm to x-axis <-62.005495> now;
		turn larm to x-axis <3.000000> now;
		turn rleg to x-axis <7.000000> now;
		turn rheel to x-axis <4.000000> now;
		turn lleg to x-axis <27.005495> now;
		turn lheel to x-axis <-10.000000> now;
		sleep 6000/currentSpeed;
	}
	if( bMoving )
	{
		move hips to y-axis [0.000000] now;
		move lthigh to y-axis [1.000000] now;
		move rthigh to y-axis [0.000000] now;
		move torso to y-axis [0.875000] now;
		turn hips to x-axis <6.000000> now;
		turn lthigh to x-axis <-7.000000> now;
		turn rthigh to x-axis <-11.000000> now;
		turn torso to y-axis <-1.000000> now;
		//turn head to y-axis <1.000000> now;
		turn luparm to x-axis <8.000000> now;
		turn ruparm to x-axis <3.000000> now;
		turn rarm to x-axis <-57.005495> now;
		turn larm to x-axis <-10.000000> now;
		turn rleg to x-axis <4.000000> now;
		turn rheel to x-axis <0.000000> now;
		turn lleg to x-axis <34.005495> now;
		turn lheel to x-axis <-17.000000> now;
		sleep 6400/currentSpeed;
	}
	if( bMoving )
	{
		move lthigh to y-axis [1.750000] now;
		move torso to y-axis [0.424957] now;
		turn hips to x-axis <5.000000> now;
		turn lthigh to x-axis <-13.000000> now;
		turn rthigh to x-axis <0.000000> now;
		turn torso to y-axis <2.000000> now;
		//turn head to y-axis <-2.000000> now;
		turn luparm to x-axis <12.000000> now;
		turn ruparm to x-axis <-1.000000> now;
		turn rarm to x-axis <-43.005495> now;
		turn larm to x-axis <-14.000000> now;
		turn rheel to x-axis <-8.000000> now;
		turn lleg to x-axis <23.005495> now;
		turn lheel to x-axis <-12.000000> now;
		sleep 10100/currentSpeed;
	}
	if( bMoving )
	{
		move lthigh to y-axis [2.500000] now;
		move torso to y-axis [0.000000] now;
		turn hips to x-axis <3.000000> now;
		turn lthigh to x-axis <-20.000000> now;
		turn rthigh to x-axis <12.000000> now;
		turn torso to y-axis <5.000000> now;
		//turn head to y-axis <-5.000000> now;
		turn luparm to x-axis <17.000000> now;
		turn ruparm to x-axis <-7.000000> now;
		turn rarm to x-axis <-29.005495> now;
		turn larm to x-axis <-18.000000> now;
		turn rheel to x-axis <-16.000000> now;
		turn lleg to x-axis <12.000000> now;
		turn lheel to x-axis <-7.000000> now;
		sleep 10300/currentSpeed;
	}
	if( bMoving )
	{
		move lthigh to y-axis [1.750000] now;
		turn hips to x-axis <5.000000> now;
		turn lthigh to x-axis <-28.005495> now;
		turn rthigh to x-axis <14.000000> now;
		turn torso to y-axis <7.000000> now;
		//turn head to y-axis <-7.000000> now;
		turn luparm to x-axis <19.000000> now;
		turn ruparm to x-axis <-13.000000> now;
		turn rarm to x-axis <-14.000000> now;
		turn larm to x-axis <-26.005495> now;
		turn rleg to x-axis <2.000000> now;
		turn rheel to x-axis <-16.000000> now;
		turn lleg to x-axis <14.000000> now;
		turn lheel to x-axis <-16.000000> now;
		sleep 13300/currentSpeed;
	}
	if( bMoving )
	{
		move lthigh to y-axis [1.000000] now;
		turn hips to x-axis <7.000000> now;
		turn lthigh to x-axis <-37.005495> now;
		turn rthigh to x-axis <17.000000> now;
		turn torso to y-axis <9.000000> now;
		//turn head to y-axis <-9.000000> now;
		turn luparm to x-axis <21.000000> now;
		turn ruparm to x-axis <-19.000000> now;
		turn rarm to x-axis <0.000000> now;
		turn larm to x-axis <-35.005495> now;
		turn rleg to x-axis <0.000000> now;
		turn rheel to x-axis <-16.000000> now;
		turn lleg to x-axis <17.000000> now;
		turn lheel to x-axis <-26.005495> now;
		sleep 13600/currentSpeed;
	}
	if( bMoving )
	{
		move hips to y-axis [-0.424957] now;
		move lthigh to y-axis [0.799957] now;
		move rthigh to y-axis [0.424957] now;
		move torso to y-axis [-0.299957] now;
		turn hips to x-axis <9.000000> now;
		turn lthigh to x-axis <-33.005495> now;
		turn rthigh to x-axis <19.000000> now;
		turn torso to y-axis <7.000000> now;
		//turn head to y-axis <-7.000000> now;
		turn luparm to x-axis <25.005495> now;
		turn ruparm to x-axis <-14.000000> now;
		turn rarm to x-axis <7.000000> now;
		turn larm to x-axis <-50.005495> now;
		turn rleg to x-axis <10.000000> now;
		turn rheel to x-axis <-8.000000> now;
		turn lleg to x-axis <13.000000> now;
		turn lheel to x-axis <-9.000000> now;
		sleep 7000/currentSpeed;
	}
	if( bMoving )
	{
		move hips to y-axis [-0.875000] now;
		move lthigh to y-axis [0.625000] now;
		move rthigh to y-axis [0.875000] now;
		move torso to y-axis [-0.599960] now;
		turn hips to x-axis <11.000000> now;
		turn lthigh to x-axis <-29.005495> now;
		turn rthigh to x-axis <22.000000> now;
		turn torso to y-axis <5.000000> now;
		//turn head to y-axis <-5.000000> now;
		turn luparm to x-axis <30.005495> now;
		turn ruparm to x-axis <-9.000000> now;
		turn rarm to x-axis <14.000000> now;
		turn larm to x-axis <-66.005495> now;
		turn rleg to x-axis <21.000000> now;
		turn rheel to x-axis <0.000000> now;
		turn lleg to x-axis <9.000000> now;
		turn lheel to x-axis <7.000000> now;
		emit-sfx UNIT_SFX4 from lstomp;
		sleep 7000/currentSpeed;
	}
	if( bMoving )
	{
		move hips to y-axis [-0.424957] now;
		move lthigh to y-axis [0.299957] now;
		move rthigh to y-axis [0.924957] now;
		move torso to y-axis [1.250000] now;
		turn hips to x-axis <9.000000> now;
		turn lthigh to x-axis <-20.000000> now;
		turn rthigh to x-axis <7.000000> now;
		turn torso to y-axis <3.000000> now;
		//turn head to y-axis <-4.000000> now;
		turn luparm to x-axis <16.000000> now;
		turn ruparm to x-axis <0.000000> now;
		turn rarm to x-axis <1.000000> now;
		turn larm to x-axis <-61.005495> now;
		turn rleg to x-axis <36.005495> now;
		turn rheel to x-axis <-5.000000> now;
		turn lleg to x-axis <7.000000> now;
		turn lheel to x-axis <3.000000> now;
		sleep 6700/currentSpeed;
	}
	if( bMoving )
	{
		move hips to y-axis [0.000000] now;
		move lthigh to y-axis [0.000000] now;
		move rthigh to y-axis [1.000000] now;
		move torso to y-axis [0.875000] now;
		turn hips to x-axis <6.000000> now;
		turn lthigh to x-axis <-11.000000> now;
		turn rthigh to x-axis <-7.000000> now;
		turn torso to y-axis <2.000000> now;
		//turn head to y-axis <-2.000000> now;
		turn luparm to x-axis <3.000000> now;
		turn ruparm to x-axis <8.000000> now;
		turn rarm to x-axis <-10.000000> now;
		turn larm to x-axis <-57.005495> now;
		turn rleg to x-axis <52.005495> now;
		turn rheel to x-axis <-10.000000> now;
		turn lleg to x-axis <4.000000> now;
		turn lheel to x-axis <0.000000> now;
		sleep 6900/currentSpeed;
	}
	if( bMoving )
	{
		move lthigh to y-axis [0.000000] now;
		move rthigh to y-axis [1.750000] now;
		move torso to y-axis [0.424957] now;
		turn hips to x-axis <5.000000> now;
		turn lthigh to x-axis <0.000000> now;
		turn rthigh to x-axis <-13.000000> now;
		turn torso to y-axis <-1.000000> now;
		//turn head to y-axis <1.000000> now;
		turn luparm to x-axis <-2.000000> now;
		turn ruparm to x-axis <13.000000> now;
		turn rarm to x-axis <-14.000000> now;
		turn larm to x-axis <-43.005495> now;
		turn rleg to x-axis <39.005495> now;
		turn rheel to x-axis <-7.000000> now;
		turn lleg to x-axis <4.000000> now;
		turn lheel to x-axis <-8.000000> now;
		sleep 10600/currentSpeed;
	}
	if( bMoving )
	{
		move lthigh to y-axis [0.000000] now;
		move rthigh to y-axis [2.500000] now;
		move torso to y-axis [0.000000] now;
		turn hips to x-axis <3.000000> now;
		turn lthigh to x-axis <12.000000> now;
		turn rthigh to x-axis <-20.000000> now;
		turn torso to y-axis <-5.000000> now;
		//turn head to y-axis <5.000000> now;
		turn luparm to x-axis <-7.000000> now;
		turn ruparm to x-axis <17.000000> now;
		turn rarm to x-axis <-18.000000> now;
		turn larm to x-axis <-29.005495> now;
		turn rleg to x-axis <25.005495> now;
		turn rheel to x-axis <-4.000000> now;
		turn lleg to x-axis <4.000000> now;
		turn lheel to x-axis <-16.000000> now;
		sleep 10900/currentSpeed;
	}
	if( bMoving )
	{
		move lthigh to y-axis [0.000000] now;
		move rthigh to y-axis [1.750000] now;
		turn hips to x-axis <5.000000> now;
		turn lthigh to x-axis <15.000000> now;
		turn rthigh to x-axis <-29.005495> now;
		turn torso to y-axis <-7.000000> now;
		//turn head to y-axis <7.000000> now;
		turn luparm to x-axis <-13.000000> now;
		turn ruparm to x-axis <19.000000> now;
		turn rarm to x-axis <-21.000000> now;
		turn larm to x-axis <-14.000000> now;
		turn rleg to x-axis <21.000000> now;
		turn rheel to x-axis <-12.000000> now;
		turn lleg to x-axis <2.000000> now;
		turn lheel to x-axis <-16.000000> now;
		sleep 13400/currentSpeed;
	}
}

walklegs()
{
	if( bMoving )
	{
		move hips to y-axis [0.000000] now;
		move hips to y-axis [-0.424957] speed [5.25];
		move lthigh to y-axis [0.000000] now;
		move lthigh to y-axis [0.424957] speed [5.25];
		move rthigh to y-axis [1.000000] now;
		move rthigh to y-axis [0.799957] speed [1.75];
		turn hips to x-axis <7.027473> now;
		turn hips to x-axis <9.000000> speed <35>;
		turn lthigh to x-axis <17.923077> now;
		turn lthigh to x-axis <20.000000> speed <32.2>;
		turn rthigh to x-axis <-37.967033> now;
		turn rthigh to x-axis <-33.005495> speed <57.4>;
		turn rleg to x-axis <17.214286> now;
		turn rleg to x-axis <13.000000> speed <54.6>;
		turn rheel to x-axis <-22.505495> now;
		turn rheel to x-axis <-13.000000> speed <122.5>;
		turn lleg to x-axis <0.000000> now;
		turn lleg to x-axis <10.000000> speed <150.5>;
		turn lheel to x-axis <-16.868132> now;
		turn lheel to x-axis <-10.000000> speed <95.2>;
		sleep 7000/currentSpeed;
	}
	if( bMoving )
	{
		move hips to y-axis [-0.875000] speed [5.25];
		move lthigh to y-axis [0.875000] speed [5.25];
		move rthigh to y-axis [0.625000] speed [1.75];
		turn hips to x-axis <11.000000> speed <35>;
		turn lthigh to x-axis <22.000000> speed <32.2>;
		turn rthigh to x-axis <-29.005495> speed <57.4>;
		turn rleg to x-axis <9.000000> speed <54.6>;
		turn rheel to x-axis <8.000000> speed <323.4>;
		turn lleg to x-axis <21.000000> speed <150.5>;
		turn lheel to x-axis <-3.000000> speed <95.2>;
		emit-sfx UNIT_SFX4 from rstomp;
		sleep 7000/currentSpeed;
	}
	if( bMoving )
	{
		move hips to y-axis [-0.424957] speed [7];
		move lthigh to y-axis [0.924957] speed [0];
		move rthigh to y-axis [0.299957] speed [3.5];
		turn hips to x-axis <9.000000> speed <43.4>;
		turn lthigh to x-axis <7.000000> speed <245.7>;
		turn rthigh to x-axis <-20.000000> speed <154.7>;
		turn rleg to x-axis <7.000000> speed <37.8>;
		turn rheel to x-axis <4.000000> speed <72.8>;
		turn lleg to x-axis <27.005495> speed <114.1>;
		turn lheel to x-axis <-10.000000> speed <114.1>;
		sleep 6000/currentSpeed;
	}
	if( bMoving )
	{
		move hips to y-axis [0.000000] speed [5.25];
		move lthigh to y-axis [1.000000] speed [0];
		move rthigh to y-axis [0.000000] speed [3.5];
		turn hips to x-axis <6.000000> speed <40.6>;
		turn lthigh to x-axis <-7.000000> speed <229.6>;
		turn rthigh to x-axis <-11.000000> speed <144.9>;
		turn rleg to x-axis <4.000000> speed <35>;
		turn rheel to x-axis <0.000000> speed <67.9>;
		turn lleg to x-axis <34.005495> speed <106.4>;
		turn lheel to x-axis <-17.000000> speed <106.4>;
		sleep 6400/currentSpeed;
	}
	if( bMoving )
	{
		move lthigh to y-axis [1.750000] speed [7];
		turn hips to x-axis <5.000000> speed <15.4>;
		turn lthigh to x-axis <-13.000000> speed <63.7>;
		turn rthigh to x-axis <0.000000> speed <115.5>;
		turn rheel to x-axis <-8.000000> speed <79.1>;
		turn lleg to x-axis <23.005495> speed <110.6>;
		turn lheel to x-axis <-12.000000> speed <48.3>;
		sleep 10100/currentSpeed;
	}
	if( bMoving )
	{
		move lthigh to y-axis [2.500000] speed [7];
		turn hips to x-axis <3.000000> speed <14.7>;
		turn lthigh to x-axis <-20.000000> speed <63>;
		turn rthigh to x-axis <12.000000> speed <114.1>;
		turn rheel to x-axis <-16.000000> speed <78.4>;
		turn lleg to x-axis <12.000000> speed <109.2>;
		turn lheel to x-axis <-7.000000> speed <47.6>;
		sleep 10300/currentSpeed;
	}
	if( bMoving )
	{
		move lthigh to y-axis [1.750000] speed [5.25];
		turn hips to x-axis <5.000000> speed <12.6>;
		turn lthigh to x-axis <-28.005495> speed <64.4>;
		turn rthigh to x-axis <14.000000> speed <18.2>;
		turn rleg to x-axis <2.000000> speed <18.2>;
		turn rheel to x-axis <-16.000000> speed <0>;
		turn lleg to x-axis <14.000000> speed <18.2>;
		turn lheel to x-axis <-16.000000> speed <70>;
		sleep 13300/currentSpeed;
	}
	if( bMoving )
	{
		move lthigh to y-axis [1.000000] speed [5.25];
		turn hips to x-axis <7.000000> speed <12.6>;
		turn lthigh to x-axis <-37.005495> speed <63>;
		turn rthigh to x-axis <17.000000> speed <17.5>;
		turn rleg to x-axis <0.000000> speed <17.5>;
		turn rheel to x-axis <-16.000000> speed <0>;
		turn lleg to x-axis <17.000000> speed <17.5>;
		turn lheel to x-axis <-26.005495> speed <68.6>;
		sleep 13600/currentSpeed;
	}
	if( bMoving )
	{
		move hips to y-axis [-0.424957] speed [5.25];
		move lthigh to y-axis [0.799957] speed [1.75];
		move rthigh to y-axis [0.424957] speed [5.25];
		turn hips to x-axis <9.000000> speed <35>;
		turn lthigh to x-axis <-33.005495> speed <54.6>;
		turn rthigh to x-axis <19.000000> speed <37.1>;
		turn rleg to x-axis <10.000000> speed <152.6>;
		turn rheel to x-axis <-8.000000> speed <112.7>;
		turn lleg to x-axis <13.000000> speed <54.6>;
		turn lheel to x-axis <-9.000000> speed <240.8>;
		sleep 7000/currentSpeed;
	}
	if( bMoving )
	{
		move hips to y-axis [-0.875000] speed [5.25];
		move lthigh to y-axis [0.625000] speed [1.75];
		move rthigh to y-axis [0.875000] speed [5.25];
		turn hips to x-axis <11.000000> speed <35>;
		turn lthigh to x-axis <-29.005495> speed <54.6>;
		turn rthigh to x-axis <22.000000> speed <37.1>;
		turn rleg to x-axis <21.000000> speed <152.6>;
		turn rheel to x-axis <0.000000> speed <112.7>;
		turn lleg to x-axis <9.000000> speed <54.6>;
		turn lheel to x-axis <7.000000> speed <240.8>;
		emit-sfx UNIT_SFX4 from lstomp;
		sleep 7000/currentSpeed;
	}
	if( bMoving )
	{
		move hips to y-axis [-0.424957] speed [5.25];
		move lthigh to y-axis [0.299957] speed [3.5];
		move rthigh to y-axis [0.924957] speed [0];
		turn hips to x-axis <9.000000> speed <39.2>;
		turn lthigh to x-axis <-20.000000> speed <135.8>;
		turn rthigh to x-axis <7.000000> speed <219.8>;
		turn rleg to x-axis <36.005495> speed <230.3>;
		turn rheel to x-axis <-5.000000> speed <72.8>;
		turn lleg to x-axis <7.000000> speed <36.4>;
		turn lheel to x-axis <3.000000> speed <57.4>;
		sleep 6700/currentSpeed;
	}
	if( bMoving )
	{
		move hips to y-axis [0.000000] speed [5.25];
		move lthigh to y-axis [0.000000] speed [3.5];
		move rthigh to y-axis [1.000000] speed [0];
		turn hips to x-axis <6.000000> speed <37.8>;
		turn lthigh to x-axis <-11.000000> speed <133>;
		turn rthigh to x-axis <-7.000000> speed <214.9>;
		turn rleg to x-axis <52.005495> speed <225.4>;
		turn rheel to x-axis <-10.000000> speed <71.4>;
		turn lleg to x-axis <4.000000> speed <35.7>;
		turn lheel to x-axis <0.000000> speed <56>;
		sleep 6900/currentSpeed;
	}
	if( bMoving )
	{
		move lthigh to y-axis [0.000000] speed [0];
		move rthigh to y-axis [1.750000] speed [7];
		turn hips to x-axis <5.000000> speed <14.7>;
		turn lthigh to x-axis <0.000000> speed <112.7>;
		turn rthigh to x-axis <-13.000000> speed <63>;
		turn rleg to x-axis <39.005495> speed <126>;
		turn rheel to x-axis <-7.000000> speed <28>;
		turn lleg to x-axis <4.000000> speed <1.4>;
		turn lheel to x-axis <-8.000000> speed <76.3>;
		sleep 10600/currentSpeed;
	}
	if( bMoving )
	{
		move lthigh to y-axis [0.000000] speed [0];
		move rthigh to y-axis [2.500000] speed [5.25];
		turn hips to x-axis <3.000000> speed <14>;
		turn lthigh to x-axis <12.000000> speed <109.9>;
		turn rthigh to x-axis <-20.000000> speed <60.9>;
		turn rleg to x-axis <25.005495> speed <122.5>;
		turn rheel to x-axis <-4.000000> speed <27.3>;
		turn lleg to x-axis <4.000000> speed <1.4>;
		turn lheel to x-axis <-16.000000> speed <74.2>;
		sleep 10900/currentSpeed;
	}
	if( bMoving )
	{
		move lthigh to y-axis [0.000000] speed [0];
		move rthigh to y-axis [1.750000] speed [5.25];
		turn hips to x-axis <5.000000> speed <12.6>;
		turn lthigh to x-axis <15.000000> speed <19.6>;
		turn rthigh to x-axis <-29.005495> speed <65.1>;
		turn rleg to x-axis <21.000000> speed <30.8>;
		turn rheel to x-axis <-12.000000> speed <60.2>;
		turn lleg to x-axis <2.000000> speed <15.4>;
		turn lheel to x-axis <-16.000000> speed <2.1>;
		sleep 13400/currentSpeed;
	}
}

MotionControl(moving, aiming, justmoved)
{
	justmoved = TRUE;
	while( TRUE )
	{
		moving = bMoving;
		aiming = Static_Var_4;
		if( moving )
		{
			if( aiming )
			{
				Static_Var_5 = 1;
				call-script walklegs();
			}
			else
			{
				Static_Var_5 = 0;
				call-script walk();
			}
			justmoved = TRUE;
		}
		else
		{
			Static_Var_5 = 1;
			if( justmoved )
			{
				move rleg to y-axis [0.000000] speed [2.500000];
				move rleg to z-axis [0.000000] speed [2.500000];
				turn rthigh to x-axis <0.000000> speed <200.000000>;
				turn lthigh to x-axis <0.000000> speed <200.000000>;
				turn lleg to x-axis <0.000000> speed <200.000000>;
				turn ltoes to x-axis <0.000000> speed <200.000000>;
				turn lheel to x-axis <0.000000> speed <200.000000>;
				turn rleg to x-axis <0.000000> speed <200.000000>;
				turn rleg to y-axis <0.000000> speed <200.000000>;
				turn rleg to y-axis <0.000000> speed <200.000000>;
				turn rtoes to x-axis <0.000000> speed <200.000000>;
				turn rheel to x-axis <0.000000> speed <200.000000>;
				emit-sfx UNIT_SFX4 from lstomp;
				emit-sfx UNIT_SFX4 from rstomp;
				if( !aiming )
				{
					turn torso to y-axis <0.000000> speed <200.000000>;
					turn luparm to x-axis <0.000000> speed <50.000000>;
					turn ruparm to x-axis <0.000000> speed <50.000000>;
				}
				justmoved = FALSE;
			}
			sleep 100;
		}
	}
}

UnitSpeed()
{
	while(TRUE)
	{
		currentSpeed = (get CURRENT_SPEED)*100/moveSpeed;
		if (currentSpeed<46) currentSpeed=46;
		sleep 142;
	}
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 500;
	}
	start-script UnitSpeed();
	start-script FlameControl();
	start-script MotionControl();
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = SFXTYPE_BLACKSMOKE;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = SFXTYPE_WHITESMOKE;
			}
			emit-sfx smoketype from torso;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Create()
{
	set ARMORED to 1;
	hide eyeflare;
	hide lgunflare;
	hide rgunflare;
	hide leftshoulderflare;
	hide rightshoulderflare;
	dont-cache eyegun;
	dont-shade eyegun;
	bMoving = FALSE;
	Static_Var_4 = 0;
	Static_Var_5 = 1;
	Static_Var_1 = 1;
	restore_delay = 2000;
	gun_1 = 0;
	gun_3 = 0;
	gun_4 = 0;
	bAiming = FALSE;
	Static_Var_21 = 0;
	moveSpeed = get MAX_SPEED;
	currentSpeed = 100;
	start-script SmokeUnit();
}

SetMaxReloadTime(Func_Var_1)
{
	restore_delay = Func_Var_1 * 3;
}

StartMoving()
{
	bMoving = TRUE;
}

StopMoving()
{
	bMoving = FALSE;
}

RestoreAfterDelay()
{
	sleep restore_delay;
	bAiming = FALSE;
	turn torso to y-axis <0.000000> speed <90.000000>;
	turn luparm to z-axis <0.000000> speed <50.000000>;
	turn ruparm to z-axis <0.000000> speed <50.000000>;
	turn larm to x-axis <0.000000> speed <50.000000>;
	turn rarm to x-axis <0.000000> speed <50.000000>;
	turn luparm to x-axis <0.000000> speed <120.000000>;
	turn ruparm to x-axis <0.000000> speed <120.000000>;
	turn rmissle2 to z-axis <0.000000> speed <60.000000>;
	turn lmissle2 to z-axis <0.000000> speed <60.000000>;
	move rmissle2 to y-axis [0.000000] speed [25.000000];
	move lmissle2 to y-axis [0.000000] speed [25.000000];
	wait-for-turn luparm around x-axis;
	wait-for-turn ruparm around x-axis;
	wait-for-turn torso around y-axis;
	wait-for-turn ruparm around z-axis;
	wait-for-turn luparm around z-axis;
	wait-for-turn rarm around x-axis;
	wait-for-turn larm around x-axis;
	wait-for-turn head around y-axis;
	wait-for-turn head around x-axis;
	Static_Var_4 = 0;
}

restoreafterdelay2()
{
	sleep restore_delay * 3;
	turn head to y-axis <0.000000> speed <50.000000>;
	turn head to x-axis <0.000000> speed <50.000000>;
}

AimPrimary(heading, pitch)
{
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	bAiming = TRUE;
	Static_Var_4 = 1;
	while( !Static_Var_5 )
	{
		sleep 250;
	}
	move rmissle2 to y-axis [15.000000] speed [25.000000];
	move lmissle2 to y-axis [15.000000] speed [25.000000];
	turn luparm to x-axis <0.000000> speed <120.000000>;
	turn ruparm to x-axis <0.000000> speed <120.000000>;
	wait-for-turn luparm around x-axis;
	wait-for-turn ruparm around x-axis;
	turn rmissle2 to z-axis <-15.000000> speed <60.000000>;
	turn lmissle2 to z-axis <15.000000> speed <60.000000>;
	turn torso to y-axis heading speed <120.000000>;
	turn luparm to z-axis <-45.000000> speed <80.000000>;
	turn ruparm to z-axis <45.000000> speed <80.000000>;
	turn rarm to x-axis <-90.000000> speed <120.000000>;
	turn larm to x-axis <-90.000000> speed <120.000000>;
	wait-for-turn torso around y-axis;
	wait-for-turn luparm around z-axis;
	wait-for-turn ruparm around z-axis;
	wait-for-turn rarm around x-axis;
	wait-for-turn larm around x-axis;
	start-script RestoreAfterDelay();
	return (1);
}

AimSecondary(heading, pitch)
{
	signal SIG_AIM_2;
	set-signal-mask SIG_AIM_2;
	turn head to y-axis heading speed <300.093407>;
	wait-for-turn head around y-axis;
	start-script restoreafterdelay2();
	return (1);
}

AimTertiary(heading, pitch)
{
	signal SIG_AIM_3;
	set-signal-mask SIG_AIM_3;
	return (1);
}

FirePrimary(Func_Var_1, Func_Var_2)
{
	if( gun_1 )
	{
		turn luparm to x-axis <170.000000> speed <300.000000>;
		turn larm to x-axis <-200.000000> speed <300.000000>;
		//turn torso to x-axis <-10.000000> speed <300.000000>;
		//turn torso to y-axis Func_Var_1 + <20.000000> speed <300.000000>;
		emit-sfx UNIT_SFX1 from lgunflare;
		sleep 150;
		turn larm to x-axis <-86.000000> speed <100.000000>;
		turn luparm to x-axis <0.000000> speed <100.000000>;
		//turn torso to x-axis <0.000000> speed <50.000000>;
		//turn torso to y-axis <0.000000> speed <20.000000>;
		sleep 150;
	}
	else
	{
		turn ruparm to x-axis <170.000000> speed <300.000000>;
		turn rarm to x-axis <-200.000000> speed <300.000000>;
		//turn torso to x-axis <-10.000000> speed <300.000000>;
		//turn torso to y-axis Func_Var_1 + <-20.000000> speed <300.000000>;
		emit-sfx UNIT_SFX1 from rgunflare;
		sleep 150;
		turn rarm to x-axis <-86.000000> speed <100.000000>;
		turn ruparm to x-axis <0.000000> speed <100.000000>;
		//turn torso to x-axis <0.000000> speed <50.000000>;
		//turn torso to y-axis <0.000000> speed <20.000000>;
		sleep 150;
	}
	gun_1 = !gun_1;
}

FireSecondary()
{
	emit-sfx UNIT_SFX2 from eyeflare;
	sleep 150;
}

FireTertiary()
{
	if( gun_3 )
	{
		emit-sfx UNIT_SFX3 from rexhaust;
		move hips to y-axis [2.500000] speed [750.000000];
		move hips to y-axis [0.000000] speed [62.500000];
	}
	else
	{
		emit-sfx UNIT_SFX3 from lexhaust;
		move hips to y-axis [2.500000] speed [750.000000];
		move hips to y-axis [0.000000] speed [62.500000];
	}
	gun_3 = !gun_3;
}

AimFromPrimary(piecenum)
{
	piecenum = torso;
}

AimFromSecondary(piecenum)
{
	piecenum = head;
}

AimFromTertiary(piecenum)
{
	piecenum = mpack;
}

QueryPrimary(piecenum)
{
	if( gun_1 )
	{
		piecenum = lgunflare;
	}
	else
	{
		piecenum = rgunflare;
	}
}

QuerySecondary(piecenum)
{
	piecenum = eyeflare;
}

QueryTertiary(piecenum)
{
	if( gun_3 )
	{
		piecenum = lmispoint;
	}
	else
	{
		piecenum = rmispoint;
	}
}

SweetSpot(piecenum)
{
	piecenum = torso;
}

AimWeapon4(Func_Var_1, Func_Var_2)
{
	if( bAiming == 1 )
	{
		return (0);
	}
	Static_Var_4 = 1;
	Static_Var_21 = 1;
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	turn torso to y-axis Func_Var_1 speed <300.093407>;
	turn ruparm to x-axis Func_Var_2 speed <150.093407>;
	turn luparm to x-axis Func_Var_2 speed <150.093407>;
	wait-for-turn head around y-axis;
	wait-for-turn ruparm around x-axis;
	wait-for-turn luparm around x-axis;
	start-script RestoreAfterDelay();
	return (1);
}

QueryWeapon4(Func_Var_1)
{
	if( gun_4 )
	{
		Func_Var_1 = 39;
	}
	else
	{
		Func_Var_1 = 38;
	}
}

AimFromWeapon4(Func_Var_1)
{
	Func_Var_1 = 0;
}

FireWeapon4()
{
	if( gun_4 )
	{
		emit-sfx UNIT_SFX3 from rightshoulderflare;
	}
	else
	{
		emit-sfx UNIT_SFX3 from leftshoulderflare;
	}
	gun_4 = !gun_4;
}

Killed(severity, corpsetype)
{
	hide lgunflare;
	hide rgunflare;
	hide eyeflare;
	if( severity <= 5 )
	{
		spin torso around y-axis speed <5000.000000> accelerate <50.000000>;
		spin head around y-axis speed <-5000.000000> accelerate <50.000000>;
		sleep 5000;
		emit-sfx 4096 from hips;
		emit-sfx 4096 from head;
		turn hips to x-axis <180.000000> speed <-200.000000>;
		sleep 100;
		turn hips to y-axis <180.000000> speed <200.000000>;
		turn torso to y-axis <-30.000000> speed <200.000000>;
		turn rthigh to z-axis <-45.000000> speed <200.000000>;
		turn lthigh to z-axis <-90.000000> speed <200.000000>;
		spin head around y-axis speed <1000.000000>;
		turn lleg to x-axis <50.000000> speed <200.000000>;
		turn ltoes to y-axis <-38.390110> speed <200.000000>;
		turn lheel to y-axis <-33.593407> speed <200.000000>;
		turn rleg to y-axis <25.291209> speed <200.000000>;
		turn rtoes to y-axis <-35.593407> speed <200.000000>;
		turn rheel to y-axis <34.890110> speed <200.000000>;
		turn luparm to x-axis <160.692308> speed <200.000000>;
		turn ruparm to x-axis <160.000000> speed <200.000000>;
		turn rarm to x-axis <-96.500000> speed <200.000000>;
		turn larm to x-axis <-82.390110> speed <200.000000>;
		sleep 200;
		move hips to y-axis [-37.500000] speed [500.000000];
		sleep 700;
		emit-sfx 4096 from hips;
		emit-sfx 4096 from head;
		emit-sfx 4096 from lthigh;
		emit-sfx 4096 from rthigh;
		emit-sfx 4096 from larm;
		emit-sfx 4096 from rarm;
		corpsetype = 1;
		return (0);
	}
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode eyeflare type BITMAPONLY | BITMAP1;
		explode eyegun type BITMAPONLY | BITMAP2;
		explode head type BITMAPONLY | BITMAP3;
		explode hips type BITMAPONLY | BITMAP4;
		explode larm type BITMAPONLY | BITMAP5;
		explode lgunflare type BITMAPONLY | BITMAP1;
		explode lheel type BITMAPONLY | BITMAP2;
		explode lleg type BITMAPONLY | BITMAP3;
		explode lmispoint type BITMAPONLY | BITMAP4;
		explode lthigh type BITMAPONLY | BITMAP5;
		explode luparm type BITMAPONLY | BITMAP1;
		explode mpack type BITMAPONLY | BITMAP2;
		explode rarm type BITMAPONLY | BITMAP3;
		explode rgunflare type BITMAPONLY | BITMAP4;
		explode rheel type BITMAPONLY | BITMAP5;
		explode rleg type BITMAPONLY | BITMAP1;
		explode rmispoint type BITMAPONLY | BITMAP2;
		explode rthigh type BITMAPONLY | BITMAP3;
		explode rtoes type BITMAPONLY | BITMAP4;
		explode ruparm type BITMAPONLY | BITMAP5;
		explode torso type BITMAPONLY | BITMAP1;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode eyeflare type FALL | BITMAP1;
		explode eyegun type FALL | BITMAP2;
		explode head type SHATTER | BITMAP3;
		explode hips type FALL | BITMAP4;
		explode larm type FALL | BITMAP5;
		explode lgunflare type FALL | BITMAP1;
		explode lheel type FALL | BITMAP2;
		explode lleg type FALL | BITMAP3;
		explode lmispoint type FALL | BITMAP4;
		explode lthigh type FALL | BITMAP5;
		explode luparm type FALL | BITMAP1;
		explode mpack type FALL | BITMAP2;
		explode rarm type FALL | BITMAP3;
		explode rgunflare type FALL | BITMAP4;
		explode rheel type FALL | BITMAP5;
		explode rleg type FALL | BITMAP1;
		explode rmispoint type FALL | BITMAP2;
		explode rthigh type FALL | BITMAP3;
		explode rtoes type FALL | BITMAP4;
		explode ruparm type FALL | BITMAP5;
		explode torso type BITMAPONLY | BITMAP1;
		return (0);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode eyeflare type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode eyegun type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode head type SHATTER | BITMAP3;
		explode hips type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode larm type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
		explode lgunflare type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode lheel type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode lleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode lmispoint type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode lthigh type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
		explode luparm type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode mpack type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode rarm type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode rgunflare type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode rheel type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
		explode rleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode rmispoint type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode rthigh type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode rtoes type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode ruparm type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
		explode torso type BITMAPONLY | BITMAP1;
		return (0);
	}
	corpsetype = 3;
	explode eyeflare type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode eyegun type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode head type SHATTER | EXPLODE_ON_HIT | BITMAP3;
	explode hips type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode larm type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
	explode lgunflare type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode lheel type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode lleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode lmispoint type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode lthigh type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
	explode luparm type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode mpack type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode rarm type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode rgunflare type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode rheel type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
	explode rleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode rmispoint type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode rthigh type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode rtoes type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode ruparm type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
	explode torso type BITMAPONLY | BITMAP1;
	return (0);
}
