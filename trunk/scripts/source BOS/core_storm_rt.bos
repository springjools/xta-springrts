#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  torso, rfirept, lfirept, pelvis, rfoot, lfoot, launcher, lthigh,
       rthigh, rleg, lleg, turret, ground, lexhaust, rexhaust;

static-var  gun_1, moveSpeed, currentSpeed, RocketTypeSelect, animSpeed, WeapRange;

// Signal definitions
#define SIG_MOVE			2
#define SIG_AIM				4


walk()
{
	while( TRUE )
	{
		move pelvis to y-axis [2.500000] now;
		move rfoot to z-axis [0.000000] now;
		move lfoot to z-axis [0.000000] now;
		move launcher to y-axis [0.000000] now;
		turn pelvis to y-axis <0.000000> now;
		turn torso to x-axis <-10.000000> now;
		turn lthigh to x-axis <12.000000> now;
		turn rthigh to x-axis <8.000000> now;
		turn rthigh to y-axis <0.000000> now;
		turn rleg to x-axis <0.000000> now;
		turn rfoot to x-axis <5.000000> now;
		turn lleg to x-axis <-25.000000> now;
		turn lfoot to x-axis <13.000000> now;
		sleep animSpeed;

		move pelvis to y-axis [0.000000] now;
		turn pelvis to y-axis <0.000000> now;
		turn torso to x-axis <-8.000000> now;
		turn lthigh to x-axis <22.000000> now;
		turn rthigh to x-axis <-14.000000> now;
		turn rleg to x-axis <-5.000000> now;
		turn rfoot to x-axis <5.000000> now;
		turn lleg to x-axis <-9.000000> now;
		turn lfoot to x-axis <-8.000000> now;
		sleep animSpeed;

		move pelvis to y-axis [0.000000] now;
		turn pelvis to y-axis <0.000000> now;
		turn torso to x-axis <-6.000000> now;
		turn lthigh to x-axis <28.000000> now;
		turn rthigh to x-axis <-15.000000> now;
		turn rleg to x-axis <-52.000000> now;
		turn rfoot to x-axis <46.000000> now;
		turn lleg to x-axis <-4.000000> now;
		turn lfoot to x-axis <-14.000000> now;
		sleep animSpeed;

		move pelvis to y-axis [0.000000] now;
		turn pelvis to y-axis <0.000000> now;
		turn torso to x-axis <2.000000> now;
		turn lthigh to x-axis <37.000000> now;
		turn rthigh to x-axis <-16.000000> now;
		turn rleg to x-axis <-31.000000> now;
		turn rfoot to x-axis <45.000000> now;
		turn lleg to x-axis <0.000000> now;
		turn lfoot to x-axis <-14.000000> now;
		sleep animSpeed;

		move pelvis to y-axis [0.000000] now;
		turn pelvis to y-axis <0.000000> now;
		turn torso to x-axis <-2.000000> now;
		turn lthigh to x-axis <25.000000> now;
		turn rthigh to x-axis <-11.000000> now;
		turn rleg to x-axis <-23.000000> now;
		turn rfoot to x-axis <34.000000> now;
		turn lleg to x-axis <8.000000> now;
		turn lfoot to x-axis <-13.000000> now;
		sleep animSpeed;

		move pelvis to y-axis [0.000000] now;
		turn pelvis to y-axis <0.000000> now;
		turn torso to x-axis <-8.000000> now;
		turn lthigh to x-axis <10.000000> now;
		turn rthigh to x-axis <-4.000000> now;
		turn rleg to x-axis <-29.000000> now;
		turn rfoot to x-axis <33.000000> now;
		turn lleg to x-axis <1.000000> now;
		turn lfoot to x-axis <-7.000000> now;
		sleep animSpeed;

		move pelvis to y-axis [2.500000] now;
		turn pelvis to y-axis <0.000000> now;
		turn torso to x-axis <-10.000000> now;
		turn lthigh to x-axis <-14.000000> now;
		turn rthigh to x-axis <12.000000> now;
		turn rleg to x-axis <-16.000000> now;
		turn rfoot to x-axis <4.000000> now;
		turn lleg to x-axis <5.000000> now;
		turn lfoot to x-axis <-3.000000> now;
		sleep animSpeed;

		move pelvis to y-axis [0.000000] now;
		turn pelvis to y-axis <0.000000> now;
		turn torso to x-axis <-8.000000> now;
		turn lthigh to x-axis <-19.000000> now;
		turn rthigh to x-axis <21.000000> now;
		turn rleg to x-axis <-8.000000> now;
		turn rfoot to x-axis <-10.000000> now;
		turn lleg to x-axis <-24.000000> now;
		turn lfoot to x-axis <26.000000> now;
		sleep animSpeed;

		move pelvis to y-axis [0.000000] now;
		turn pelvis to y-axis <0.000000> now;
		turn torso to x-axis <-6.000000> now;
		turn lthigh to x-axis <-15.000000> now;
		turn rthigh to x-axis <30.000000> now;
		turn rleg to x-axis <-4.000000> now;
		turn rfoot to x-axis <-13.000000> now;
		turn lleg to x-axis <-49.000000> now;
		turn lfoot to x-axis <44.000000> now;
		sleep animSpeed;

		move pelvis to y-axis [0.000000] now;
		turn pelvis to y-axis <0.000000> now;
		turn torso to x-axis <2.000000> now;
		turn lthigh to x-axis <-16.000000> now;
		turn rthigh to x-axis <39.000000> now;
		turn rthigh to y-axis <0.000000> now;
		turn rleg to x-axis <0.000000> now;
		turn rfoot to x-axis <-14.000000> now;
		turn lleg to x-axis <-30.000000> now;
		turn lfoot to x-axis <45.000000> now;
		sleep animSpeed;

		move pelvis to y-axis [2.500000] now;
		turn pelvis to y-axis <0.000000> now;
		turn torso to x-axis <-2.000000> now;
		turn lthigh to x-axis <-2.000000> now;
		turn rthigh to x-axis <24.000000> now;
		turn rleg to x-axis <13.000000> now;
		turn rfoot to x-axis <-2.000000> now;
		turn lleg to x-axis <-37.000000> now;
		turn lfoot to x-axis <40.000000> now;
		sleep animSpeed;

		move pelvis to y-axis [2.500000] now;
		turn pelvis to y-axis <1.000000> now;
		turn torso to x-axis <-8.000000> now;
		turn lthigh to x-axis <5.000000> now;
		turn rthigh to x-axis <17.000000> now;
		turn rleg to x-axis <8.000000> now;
		turn rfoot to x-axis <4.000000> now;
		turn lleg to x-axis <-33.000000> now;
		turn lfoot to x-axis <28.000000> now;
		sleep animSpeed;
	}
}

UnitSpeed()
{
	while(TRUE)
	{
		currentSpeed = (get CURRENT_SPEED)*100/moveSpeed;
		if (currentSpeed<20) currentSpeed=20;
		animSpeed = 3500 / currentSpeed;
		sleep 142;
	}
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 500;
	}
	start-script UnitSpeed();
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 258;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 257;
			}
			emit-sfx smoketype from torso;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

StartMoving()
{
	signal SIG_MOVE;
	set-signal-mask SIG_MOVE;
	call-script walk();
}

StopMoving()
{
	signal SIG_MOVE;
	set-signal-mask SIG_MOVE;
	move pelvis to y-axis [0.000000] speed [2.500000];
	turn pelvis to y-axis <0.000000> speed <150.000000>;
	turn pelvis to z-axis <0.000000> speed <150.000000>;
	turn rthigh to x-axis <0.000000> speed <150.000000>;
	turn rleg to x-axis <0.000000> speed <150.000000>;
	turn rfoot to x-axis <0.000000> speed <150.000000>;
	turn lthigh to x-axis <0.000000> speed <150.000000>;
	turn lleg to x-axis <0.000000> speed <150.000000>;
	turn lfoot to x-axis <0.000000> speed <150.000000>;
}

RocketType(select)
{
	RocketTypeSelect = select;
	if (select)
	{
		get WEAPON_RANGE(-1, WeapRange);
	}
	else
	{
		get WEAPON_RANGE(-1, get WEAPON_RANGE(2));
	}
}

Create()
{
	RocketTypeSelect = 1;
	WeapRange = get WEAPON_RANGE(1);
	gun_1 = torso;
	hide lexhaust;
	hide rexhaust;
	moveSpeed = get MAX_SPEED;
	animSpeed = 35;
	start-script StopMoving();
	start-script SmokeUnit();
}

SweetSpot(piecenum)
{
	piecenum = torso;
}

RestoreAfterDelay()
{
	sleep 5000;
	turn turret to y-axis <0.000000> speed <90.000000>;
	turn launcher to x-axis <0.000000> speed <45.000000>;
}

AimFromPrimary(piecenum)
{
	piecenum = torso;
}

QueryPrimary(piecenum)
{
	piecenum = rfirept + gun_1;
}

AimPrimary(heading, pitch)
{
	if(!RocketTypeSelect OR (get WEAPON_RELOADSTATE(2) > get GAME_FRAME)) return 0;
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	turn turret to y-axis heading speed <240.000000>;
	turn launcher to x-axis <0.000000> - pitch speed <90.000000>;
	wait-for-turn turret around y-axis;
	wait-for-turn launcher around x-axis;
	start-script RestoreAfterDelay();
	return (1);
}

FirePrimary()
{
	if( gun_1 )
	{
		emit-sfx UNIT_SFX1 from rexhaust;
	}
	else
	{
		emit-sfx UNIT_SFX1 from lexhaust;
	}
	gun_1 = !gun_1;
}

AimFromSecondary(piecenum)
{
	piecenum = torso;
}

QuerySecondary(piecenum)
{
	piecenum = rfirept + gun_1;
}

AimSecondary(heading, pitch)
{
	if(RocketTypeSelect OR (get WEAPON_RELOADSTATE(1) > get GAME_FRAME)) return 0;
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	turn turret to y-axis heading speed <240.000000>;
	turn launcher to x-axis <0.000000> - pitch speed <90.000000>;
	wait-for-turn turret around y-axis;
	wait-for-turn launcher around x-axis;
	start-script RestoreAfterDelay();
	return (1);
}

FireSecondary()
{
	if( gun_1 )
	{
		emit-sfx UNIT_SFX1 from rexhaust;
	}
	else
	{
		emit-sfx UNIT_SFX1 from lexhaust;
	}
	gun_1 = !gun_1;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode launcher type SHATTER | BITMAP2;
		explode lfirept type FALL | BITMAP3;
		explode lfoot type FALL | BITMAP4;
		explode lleg type FALL | BITMAP5;
		explode lthigh type FALL | BITMAP1;
		explode pelvis type FALL | BITMAP2;
		explode rfirept type FALL | BITMAP3;
		explode rfoot type FALL | BITMAP4;
		explode rleg type FALL | BITMAP5;
		explode rthigh type FALL | BITMAP1;
		explode torso type FALL | BITMAP2;
		explode turret type FALL | BITMAP3;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode ground type FALL | BITMAP1;
		explode launcher type SHATTER | BITMAP2;
		explode lfirept type FALL | BITMAP3;
		explode lfoot type FALL | BITMAP4;
		explode lleg type FALL | BITMAP5;
		explode lthigh type FALL | BITMAP1;
		explode pelvis type FALL | BITMAP2;
		explode rfirept type FALL | BITMAP3;
		explode rfoot type FALL | BITMAP4;
		explode rleg type FALL | BITMAP5;
		explode rthigh type FALL | BITMAP1;
		explode torso type FALL | BITMAP2;
		explode turret type FALL | BITMAP3;
		return (0);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode ground type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode launcher type SHATTER | BITMAP2;
		explode lfirept type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode lfoot type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode lleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
		explode lthigh type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode pelvis type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode rfirept type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode rfoot type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode rleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
		explode rthigh type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode torso type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode turret type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		return (0);
	}
	corpsetype = 3;
	explode ground type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode launcher type SHATTER | EXPLODE_ON_HIT | BITMAP2;
	explode lfirept type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode lfoot type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode lleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
	explode lthigh type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode pelvis type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode rfirept type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode rfoot type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode rleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
	explode rthigh type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode torso type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode turret type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
}
