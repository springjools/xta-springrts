#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

#define SPEEDUP_FACTOR 240

piece  torso, gunflare, emgflare, hips, l_thigh, r_thigh, head, luparm,
       ruparm, rarm, larm, rleg, rfoot, lleg, lfoot, lemg,
       rgun;

static-var  bMoving, bAiming, Static_Var_3, restore_delay, gun_1,
			moveSpeed, currentSpeed;

// Signal definitions
#define SIG_AIM				4


walk()
{
	if( bMoving )
	{
		move hips to y-axis [0.000000] now;
		move hips to y-axis [-0.424957] speed [18];
		move l_thigh to y-axis [0.000000] now;
		move l_thigh to y-axis [0.424957] speed [18];
		move r_thigh to y-axis [1.000000] now;
		move r_thigh to y-axis [0.799957] speed [6];
		move torso to y-axis [0.000000] now;
		move torso to y-axis [-0.299957] speed [12];
		turn hips to x-axis <7.027473> now;
		turn hips to x-axis <9.000000> speed <120>;
		turn l_thigh to x-axis <17.923077> now;
		turn l_thigh to x-axis <20.000000> speed <110.4>;
		turn r_thigh to x-axis <-37.967033> now;
		turn r_thigh to x-axis <-33.005495> speed <196.8>;
		turn torso to y-axis <-9.137363> now;
		turn torso to y-axis <-7.000000> speed <84>;
		turn head to y-axis <9.835165> now;
		turn head to y-axis <7.000000> speed <103.2>;
		turn luparm to x-axis <-19.681319> now;
		turn luparm to x-axis <-14.000000> speed <249.6>;
		turn ruparm to x-axis <21.791209> now;
		turn ruparm to x-axis <26.005495> speed <213.6>;
		turn rarm to x-axis <24.604396> now;
		turn rarm to x-axis <45.005495> speed <1032>;
		turn larm to x-axis <0.000000> now;
		turn larm to x-axis <-8.000000> speed <429.6>;
		turn rleg to x-axis <17.214286> now;
		turn rleg to x-axis <13.000000> speed <187.2>;
		turn rfoot to x-axis <-22.505495> now;
		turn rfoot to x-axis <-13.000000> speed <420>;
		turn lleg to x-axis <0.000000> now;
		turn lleg to x-axis <10.000000> speed <516>;
		turn lfoot to x-axis <-16.868132> now;
		turn lfoot to x-axis <-10.000000> speed <326.4>;
		sleep 2000 / currentSpeed;
	}
	if( bMoving )
	{
		move hips to y-axis [-0.875000] speed [18];
		move l_thigh to y-axis [0.875000] speed [18];
		move r_thigh to y-axis [0.625000] speed [6];
		move torso to y-axis [-0.599960] speed [12];
		turn hips to x-axis <11.000000> speed <120>;
		turn l_thigh to x-axis <22.000000> speed <110.4>;
		turn r_thigh to x-axis <-29.005495> speed <196.8>;
		turn torso to y-axis <-5.000000> speed <84>;
		turn head to y-axis <5.000000> speed <103.2>;
		turn luparm to x-axis <-9.000000> speed <249.6>;
		turn ruparm to x-axis <30.005495> speed <213.6>;
		turn rarm to x-axis <66.005495> speed <1032>;
		turn larm to x-axis <-17.000000> speed <429.6>;
		turn rleg to x-axis <9.000000> speed <187.2>;
		turn rfoot to x-axis <8.000000> speed <1108.8>;
		turn lleg to x-axis <21.000000> speed <516>;
		turn lfoot to x-axis <-3.000000> speed <326.4>;
		sleep 2000 / currentSpeed;
	}
	if( bMoving )
	{
		move hips to y-axis [-0.424957] speed [24];
		move l_thigh to y-axis [0.924957] speed [0];
		move r_thigh to y-axis [0.299957] speed [12];
		move torso to y-axis [1.250000] speed [42];
		turn hips to x-axis <9.000000> speed <148.8>;
		turn l_thigh to x-axis <7.000000> speed <842.4>;
		turn r_thigh to x-axis <-20.000000> speed <530.4>;
		turn torso to y-axis <-3.000000> speed <110.4>;
		turn head to y-axis <3.000000> speed <129.6>;
		turn luparm to x-axis <0.000000> speed <501.6>;
		turn ruparm to x-axis <16.000000> speed <782.4>;
		turn rarm to x-axis <62.005495> speed <259.2>;
		turn larm to x-axis <-3.000000> speed <801.6>;
		turn rleg to x-axis <7.000000> speed <129.6>;
		turn rfoot to x-axis <4.000000> speed <249.6>;
		turn lleg to x-axis <27.005495> speed <391.2>;
		turn lfoot to x-axis <-10.000000> speed <391.2>;
		sleep 1700 / currentSpeed;
	}
	if( bMoving )
	{
		move hips to y-axis [0.000000] speed [18];
		move l_thigh to y-axis [1.000000] speed [0];
		move r_thigh to y-axis [0.000000] speed [12];
		move torso to y-axis [0.875000] speed [36];
		turn hips to x-axis <6.000000> speed <139.2>;
		turn l_thigh to x-axis <-7.000000> speed <787.2>;
		turn r_thigh to x-axis <-11.000000> speed <496.8>;
		turn torso to y-axis <-1.000000> speed <100.8>;
		turn head to y-axis <1.000000> speed <120>;
		turn luparm to x-axis <8.000000> speed <468>;
		turn ruparm to x-axis <3.000000> speed <729.6>;
		turn rarm to x-axis <57.005495> speed <242.4>;
		turn larm to x-axis <10.000000> speed <748.8>;
		turn rleg to x-axis <4.000000> speed <120>;
		turn rfoot to x-axis <0.000000> speed <232.8>;
		turn lleg to x-axis <34.005495> speed <364.8>;
		turn lfoot to x-axis <-17.000000> speed <364.8>;
		sleep 1900 / currentSpeed;
	}
	if( bMoving )
	{
		move l_thigh to y-axis [1.750000] speed [24];
		move torso to y-axis [0.424957] speed [12];
		turn hips to x-axis <5.000000> speed <52.8>;
		turn l_thigh to x-axis <-13.000000> speed <218.4>;
		turn r_thigh to x-axis <0.000000> speed <396>;
		turn torso to y-axis <2.000000> speed <129.6>;
		turn head to y-axis <-2.000000> speed <105.6>;
		turn luparm to x-axis <12.000000> speed <153.6>;
		turn ruparm to x-axis <-1.000000> speed <170.4>;
		turn rarm to x-axis <43.005495> speed <475.2>;
		turn larm to x-axis <14.000000> speed <129.6>;
		turn rfoot to x-axis <-8.000000> speed <271.2>;
		turn lleg to x-axis <23.005495> speed <379.2>;
		turn lfoot to x-axis <-12.000000> speed <165.6>;
		sleep 3000 / currentSpeed;
	}
	if( bMoving )
	{
		move l_thigh to y-axis [2.500000] speed [24];
		move torso to y-axis [0.000000] speed [12];
		turn hips to x-axis <3.000000> speed <50.4>;
		turn l_thigh to x-axis <-20.000000> speed <216>;
		turn r_thigh to x-axis <12.000000> speed <391.2>;
		turn torso to y-axis <5.000000> speed <127.2>;
		turn head to y-axis <-5.000000> speed <103.2>;
		turn luparm to x-axis <17.000000> speed <151.2>;
		turn ruparm to x-axis <-7.000000> speed <168>;
		turn rarm to x-axis <29.005495> speed <468>;
		turn larm to x-axis <18.000000> speed <127.2>;
		turn rfoot to x-axis <-16.000000> speed <268.8>;
		turn lleg to x-axis <12.000000> speed <374.4>;
		turn lfoot to x-axis <-7.000000> speed <163.2>;
		sleep 3000 / currentSpeed;
	}
	if( bMoving )
	{
		move l_thigh to y-axis [1.750000] speed [18];
		turn hips to x-axis <5.000000> speed <43.2>;
		turn l_thigh to x-axis <-28.005495> speed <220.8>;
		turn r_thigh to x-axis <14.000000> speed <62.4>;
		turn torso to y-axis <7.000000> speed <43.2>;
		turn head to y-axis <-7.000000> speed <52.8>;
		turn luparm to x-axis <19.000000> speed <52.8>;
		turn ruparm to x-axis <-13.000000> speed <163.2>;
		turn rarm to x-axis <14.000000> speed <379.2>;
		turn larm to x-axis <26.005495> speed <220.8>;
		turn rleg to x-axis <2.000000> speed <62.4>;
		turn rfoot to x-axis <-16.000000> speed <0>;
		turn lleg to x-axis <14.000000> speed <62.4>;
		turn lfoot to x-axis <-16.000000> speed <240>;
		sleep 3900 / currentSpeed;
	}
	if( bMoving )
	{
		move l_thigh to y-axis [1.000000] speed [18];
		turn hips to x-axis <7.000000> speed <43.2>;
		turn l_thigh to x-axis <-37.005495> speed <216>;
		turn r_thigh to x-axis <17.000000> speed <60>;
		turn torso to y-axis <9.000000> speed <43.2>;
		turn head to y-axis <-9.000000> speed <52.8>;
		turn luparm to x-axis <21.000000> speed <52.8>;
		turn ruparm to x-axis <-19.000000> speed <158.4>;
		turn rarm to x-axis <0.000000> speed <372>;
		turn larm to x-axis <35.005495> speed <216>;
		turn rleg to x-axis <0.000000> speed <60>;
		turn rfoot to x-axis <-16.000000> speed <0>;
		turn lleg to x-axis <17.000000> speed <60>;
		turn lfoot to x-axis <-26.005495> speed <235.2>;
		sleep 4000 / currentSpeed;
	}
	if( bMoving )
	{
		move hips to y-axis [-0.424957] speed [18];
		move l_thigh to y-axis [0.799957] speed [6];
		move r_thigh to y-axis [0.424957] speed [18];
		move torso to y-axis [-0.299957] speed [12];
		turn hips to x-axis <9.000000> speed <120>;
		turn l_thigh to x-axis <-33.005495> speed <187.2>;
		turn r_thigh to x-axis <19.000000> speed <127.2>;
		turn torso to y-axis <7.000000> speed <93.60001>;
		turn head to y-axis <-7.000000> speed <84>;
		turn luparm to x-axis <25.005495> speed <213.6>;
		turn ruparm to x-axis <-14.000000> speed <249.6>;
		turn rarm to x-axis <-7.000000> speed <343.2>;
		turn larm to x-axis <50.005495> speed <756>;
		turn rleg to x-axis <10.000000> speed <523.2>;
		turn rfoot to x-axis <-8.000000> speed <386.4>;
		turn lleg to x-axis <13.000000> speed <187.2>;
		turn lfoot to x-axis <-9.000000> speed <825.6>;
		sleep 2000 / currentSpeed;
	}
	if( bMoving )
	{
		move hips to y-axis [-0.875000] speed [18];
		move l_thigh to y-axis [0.625000] speed [6];
		move r_thigh to y-axis [0.875000] speed [18];
		move torso to y-axis [-0.599960] speed [12];
		turn hips to x-axis <11.000000> speed <120>;
		turn l_thigh to x-axis <-29.005495> speed <187.2>;
		turn r_thigh to x-axis <22.000000> speed <127.2>;
		turn torso to y-axis <5.000000> speed <93.60001>;
		turn head to y-axis <-5.000000> speed <84>;
		turn luparm to x-axis <30.005495> speed <213.6>;
		turn ruparm to x-axis <-9.000000> speed <249.6>;
		turn rarm to x-axis <-14.000000> speed <343.2>;
		turn larm to x-axis <66.005495> speed <756>;
		turn rleg to x-axis <21.000000> speed <523.2>;
		turn rfoot to x-axis <0.000000> speed <386.4>;
		turn lleg to x-axis <9.000000> speed <187.2>;
		turn lfoot to x-axis <7.000000> speed <825.6>;
		sleep 2000 / currentSpeed;
	}
	if( bMoving )
	{
		move hips to y-axis [-0.424957] speed [18];
		move l_thigh to y-axis [0.299957] speed [12];
		move r_thigh to y-axis [0.924957] speed [0];
		move torso to y-axis [1.250000] speed [36];
		turn hips to x-axis <9.000000> speed <134.4>;
		turn l_thigh to x-axis <-20.000000> speed <465.6>;
		turn r_thigh to x-axis <7.000000> speed <753.6>;
		turn torso to y-axis <3.000000> speed <88.8>;
		turn head to y-axis <-4.000000> speed <98.4>;
		turn luparm to x-axis <16.000000> speed <691.2>;
		turn ruparm to x-axis <0.000000> speed <448.8>;
		turn rarm to x-axis <-1.000000> speed <636>;
		turn larm to x-axis <61.005495> speed <232.8>;
		turn rleg to x-axis <36.005495> speed <789.6>;
		turn rfoot to x-axis <-5.000000> speed <249.6>;
		turn lleg to x-axis <7.000000> speed <124.8>;
		turn lfoot to x-axis <3.000000> speed <196.8>;
		sleep 2000 / currentSpeed;
	}
	if( bMoving )
	{
		move hips to y-axis [0.000000] speed [18];
		move l_thigh to y-axis [0.000000] speed [12];
		move r_thigh to y-axis [1.000000] speed [0];
		move torso to y-axis [0.875000] speed [36];
		turn hips to x-axis <6.000000> speed <129.6>;
		turn l_thigh to x-axis <-11.000000> speed <456>;
		turn r_thigh to x-axis <-7.000000> speed <736.8>;
		turn torso to y-axis <2.000000> speed <86.4>;
		turn head to y-axis <-2.000000> speed <96>;
		turn luparm to x-axis <3.000000> speed <676.8>;
		turn ruparm to x-axis <8.000000> speed <439.2>;
		turn rarm to x-axis <10.000000> speed <624>;
		turn larm to x-axis <57.005495> speed <228>;
		turn rleg to x-axis <52.005495> speed <772.8>;
		turn rfoot to x-axis <-10.000000> speed <244.8>;
		turn lleg to x-axis <4.000000> speed <122.4>;
		turn lfoot to x-axis <0.000000> speed <192>;
		sleep 2000 / currentSpeed;
	}
	if( bMoving )
	{
		move l_thigh to y-axis [0.000000] speed [0];
		move r_thigh to y-axis [1.750000] speed [24];
		move torso to y-axis [0.424957] speed [12];
		turn hips to x-axis <5.000000> speed <50.4>;
		turn l_thigh to x-axis <0.000000> speed <386.4>;
		turn r_thigh to x-axis <-13.000000> speed <216>;
		turn torso to y-axis <-1.000000> speed <124.8>;
		turn head to y-axis <1.000000> speed <124.8>;
		turn luparm to x-axis <-2.000000> speed <170.4>;
		turn ruparm to x-axis <13.000000> speed <158.4>;
		turn rarm to x-axis <14.000000> speed <129.6>;
		turn larm to x-axis <43.005495> speed <444>;
		turn rleg to x-axis <39.005495> speed <432>;
		turn rfoot to x-axis <-7.000000> speed <96>;
		turn lleg to x-axis <4.000000> speed <4.8>;
		turn lfoot to x-axis <-8.000000> speed <261.6>;
		sleep 3100 / currentSpeed;
	}
	if( bMoving )
	{
		move l_thigh to y-axis [0.000000] speed [0];
		move r_thigh to y-axis [2.500000] speed [18];
		move torso to y-axis [0.000000] speed [12];
		turn hips to x-axis <3.000000> speed <48>;
		turn l_thigh to x-axis <12.000000> speed <376.8>;
		turn r_thigh to x-axis <-20.000000> speed <208.8>;
		turn torso to y-axis <-5.000000> speed <120>;
		turn head to y-axis <5.000000> speed <120>;
		turn luparm to x-axis <-7.000000> speed <165.6>;
		turn ruparm to x-axis <17.000000> speed <153.6>;
		turn rarm to x-axis <18.000000> speed <127.2>;
		turn larm to x-axis <29.005495> speed <432>;
		turn rleg to x-axis <25.005495> speed <420>;
		turn rfoot to x-axis <-4.000000> speed <93.60001>;
		turn lleg to x-axis <4.000000> speed <4.8>;
		turn lfoot to x-axis <-16.000000> speed <254.4>;
		sleep 3200 / currentSpeed;
	}
	if( bMoving )
	{
		move l_thigh to y-axis [0.000000] speed [0];
		move r_thigh to y-axis [1.750000] speed [18];
		turn hips to x-axis <5.000000> speed <43.2>;
		turn l_thigh to x-axis <15.000000> speed <67.2>;
		turn r_thigh to x-axis <-29.005495> speed <223.2>;
		turn torso to y-axis <-7.000000> speed <43.2>;
		turn head to y-axis <7.000000> speed <52.8>;
		turn luparm to x-axis <-13.000000> speed <156>;
		turn ruparm to x-axis <19.000000> speed <48>;
		turn rarm to x-axis <21.000000> speed <69.60001>;
		turn larm to x-axis <14.000000> speed <379.2>;
		turn rleg to x-axis <21.000000> speed <105.6>;
		turn rfoot to x-axis <-12.000000> speed <206.4>;
		turn lleg to x-axis <2.000000> speed <52.8>;
		turn lfoot to x-axis <-16.000000> speed <7.2>;
		sleep 3900 / currentSpeed;
	}
}

walklegs()
{
	if( bMoving )
	{
		move hips to y-axis [0.000000] now;
		move hips to y-axis [-0.424957] speed [18];
		move l_thigh to y-axis [0.000000] now;
		move l_thigh to y-axis [0.424957] speed [18];
		move r_thigh to y-axis [1.000000] now;
		move r_thigh to y-axis [0.799957] speed [6];
		turn hips to x-axis <7.027473> now;
		turn hips to x-axis <9.000000> speed <120>;
		turn l_thigh to x-axis <17.923077> now;
		turn l_thigh to x-axis <20.000000> speed <110.4>;
		turn r_thigh to x-axis <-37.967033> now;
		turn r_thigh to x-axis <-33.005495> speed <196.8>;
		turn rleg to x-axis <17.214286> now;
		turn rleg to x-axis <13.000000> speed <187.2>;
		turn rfoot to x-axis <-22.505495> now;
		turn rfoot to x-axis <-13.000000> speed <420>;
		turn lleg to x-axis <0.000000> now;
		turn lleg to x-axis <10.000000> speed <516>;
		turn lfoot to x-axis <-16.868132> now;
		turn lfoot to x-axis <-10.000000> speed <326.4>;
		sleep 2000 / currentSpeed;
	}
	if( bMoving )
	{
		move hips to y-axis [-0.875000] speed [18];
		move l_thigh to y-axis [0.875000] speed [18];
		move r_thigh to y-axis [0.625000] speed [6];
		turn hips to x-axis <11.000000> speed <120>;
		turn l_thigh to x-axis <22.000000> speed <110.4>;
		turn r_thigh to x-axis <-29.005495> speed <196.8>;
		turn rleg to x-axis <9.000000> speed <187.2>;
		turn rfoot to x-axis <8.000000> speed <1108.8>;
		turn lleg to x-axis <21.000000> speed <516>;
		turn lfoot to x-axis <-3.000000> speed <326.4>;
		sleep 2000 / currentSpeed;
	}
	if( bMoving )
	{
		move hips to y-axis [-0.424957] speed [24];
		move l_thigh to y-axis [0.924957] speed [0];
		move r_thigh to y-axis [0.299957] speed [12];
		turn hips to x-axis <9.000000> speed <148.8>;
		turn l_thigh to x-axis <7.000000> speed <842.4>;
		turn r_thigh to x-axis <-20.000000> speed <530.4>;
		turn rleg to x-axis <7.000000> speed <129.6>;
		turn rfoot to x-axis <4.000000> speed <249.6>;
		turn lleg to x-axis <27.005495> speed <391.2>;
		turn lfoot to x-axis <-10.000000> speed <391.2>;
		sleep 1700 / currentSpeed;
	}
	if( bMoving )
	{
		move hips to y-axis [0.000000] speed [18];
		move l_thigh to y-axis [1.000000] speed [0];
		move r_thigh to y-axis [0.000000] speed [12];
		turn hips to x-axis <6.000000> speed <139.2>;
		turn l_thigh to x-axis <-7.000000> speed <787.2>;
		turn r_thigh to x-axis <-11.000000> speed <496.8>;
		turn rleg to x-axis <4.000000> speed <120>;
		turn rfoot to x-axis <0.000000> speed <232.8>;
		turn lleg to x-axis <34.005495> speed <364.8>;
		turn lfoot to x-axis <-17.000000> speed <364.8>;
		sleep 1900 / currentSpeed;
	}
	if( bMoving )
	{
		move l_thigh to y-axis [1.750000] speed [24];
		turn hips to x-axis <5.000000> speed <52.8>;
		turn l_thigh to x-axis <-13.000000> speed <218.4>;
		turn r_thigh to x-axis <0.000000> speed <396>;
		turn rfoot to x-axis <-8.000000> speed <271.2>;
		turn lleg to x-axis <23.005495> speed <379.2>;
		turn lfoot to x-axis <-12.000000> speed <165.6>;
		sleep 3000 / currentSpeed;
	}
	if( bMoving )
	{
		move l_thigh to y-axis [2.500000] speed [24];
		turn hips to x-axis <3.000000> speed <50.4>;
		turn l_thigh to x-axis <-20.000000> speed <216>;
		turn r_thigh to x-axis <12.000000> speed <391.2>;
		turn rfoot to x-axis <-16.000000> speed <268.8>;
		turn lleg to x-axis <12.000000> speed <374.4>;
		turn lfoot to x-axis <-7.000000> speed <163.2>;
		sleep 3000 / currentSpeed;
	}
	if( bMoving )
	{
		move l_thigh to y-axis [1.750000] speed [18];
		turn hips to x-axis <5.000000> speed <43.2>;
		turn l_thigh to x-axis <-28.005495> speed <220.8>;
		turn r_thigh to x-axis <14.000000> speed <62.4>;
		turn rleg to x-axis <2.000000> speed <62.4>;
		turn rfoot to x-axis <-16.000000> speed <0>;
		turn lleg to x-axis <14.000000> speed <62.4>;
		turn lfoot to x-axis <-16.000000> speed <240>;
		sleep 3900 / currentSpeed;
	}
	if( bMoving )
	{
		move l_thigh to y-axis [1.000000] speed [18];
		turn hips to x-axis <7.000000> speed <43.2>;
		turn l_thigh to x-axis <-37.005495> speed <216>;
		turn r_thigh to x-axis <17.000000> speed <60>;
		turn rleg to x-axis <0.000000> speed <60>;
		turn rfoot to x-axis <-16.000000> speed <0>;
		turn lleg to x-axis <17.000000> speed <60>;
		turn lfoot to x-axis <-26.005495> speed <235.2>;
		sleep 4000 / currentSpeed;
	}
	if( bMoving )
	{
		move hips to y-axis [-0.424957] speed [18];
		move l_thigh to y-axis [0.799957] speed [6];
		move r_thigh to y-axis [0.424957] speed [18];
		turn hips to x-axis <9.000000> speed <120>;
		turn l_thigh to x-axis <-33.005495> speed <187.2>;
		turn r_thigh to x-axis <19.000000> speed <127.2>;
		turn rleg to x-axis <10.000000> speed <523.2>;
		turn rfoot to x-axis <-8.000000> speed <386.4>;
		turn lleg to x-axis <13.000000> speed <187.2>;
		turn lfoot to x-axis <-9.000000> speed <825.6>;
		sleep 2000 / currentSpeed;
	}
	if( bMoving )
	{
		move hips to y-axis [-0.875000] speed [18];
		move l_thigh to y-axis [0.625000] speed [6];
		move r_thigh to y-axis [0.875000] speed [18];
		turn hips to x-axis <11.000000> speed <120>;
		turn l_thigh to x-axis <-29.005495> speed <187.2>;
		turn r_thigh to x-axis <22.000000> speed <127.2>;
		turn rleg to x-axis <21.000000> speed <523.2>;
		turn rfoot to x-axis <0.000000> speed <386.4>;
		turn lleg to x-axis <9.000000> speed <187.2>;
		turn lfoot to x-axis <7.000000> speed <825.6>;
		sleep 2000 / currentSpeed;
	}
	if( bMoving )
	{
		move hips to y-axis [-0.424957] speed [18];
		move l_thigh to y-axis [0.299957] speed [12];
		move r_thigh to y-axis [0.924957] speed [0];
		turn hips to x-axis <9.000000> speed <134.4>;
		turn l_thigh to x-axis <-20.000000> speed <465.6>;
		turn r_thigh to x-axis <7.000000> speed <753.6>;
		turn rleg to x-axis <36.005495> speed <789.6>;
		turn rfoot to x-axis <-5.000000> speed <249.6>;
		turn lleg to x-axis <7.000000> speed <124.8>;
		turn lfoot to x-axis <3.000000> speed <196.8>;
		sleep 2000 / currentSpeed;
	}
	if( bMoving )
	{
		move hips to y-axis [0.000000] speed [18];
		move l_thigh to y-axis [0.000000] speed [12];
		move r_thigh to y-axis [1.000000] speed [0];
		turn hips to x-axis <6.000000> speed <129.6>;
		turn l_thigh to x-axis <-11.000000> speed <456>;
		turn r_thigh to x-axis <-7.000000> speed <736.8>;
		turn rleg to x-axis <52.005495> speed <772.8>;
		turn rfoot to x-axis <-10.000000> speed <244.8>;
		turn lleg to x-axis <4.000000> speed <122.4>;
		turn lfoot to x-axis <0.000000> speed <192>;
		sleep 2000 / currentSpeed;
	}
	if( bMoving )
	{
		move l_thigh to y-axis [0.000000] speed [0];
		move r_thigh to y-axis [1.750000] speed [24];
		turn hips to x-axis <5.000000> speed <50.4>;
		turn l_thigh to x-axis <0.000000> speed <386.4>;
		turn r_thigh to x-axis <-13.000000> speed <216>;
		turn rleg to x-axis <39.005495> speed <432>;
		turn rfoot to x-axis <-7.000000> speed <96>;
		turn lleg to x-axis <4.000000> speed <4.8>;
		turn lfoot to x-axis <-8.000000> speed <261.6>;
		sleep 3100 / currentSpeed;
	}
	if( bMoving )
	{
		move l_thigh to y-axis [0.000000] speed [0];
		move r_thigh to y-axis [2.500000] speed [18];
		turn hips to x-axis <3.000000> speed <48>;
		turn l_thigh to x-axis <12.000000> speed <376.8>;
		turn r_thigh to x-axis <-20.000000> speed <208.8>;
		turn rleg to x-axis <25.005495> speed <420>;
		turn rfoot to x-axis <-4.000000> speed <93.60001>;
		turn lleg to x-axis <4.000000> speed <4.8>;
		turn lfoot to x-axis <-16.000000> speed <254.4>;
		sleep 3200 / currentSpeed;
	}
	if( bMoving )
	{
		move l_thigh to y-axis [0.000000] speed [0];
		move r_thigh to y-axis [1.750000] speed [18];
		turn hips to x-axis <5.000000> speed <43.2>;
		turn l_thigh to x-axis <15.000000> speed <67.2>;
		turn r_thigh to x-axis <-29.005495> speed <223.2>;
		turn rleg to x-axis <21.000000> speed <105.6>;
		turn rfoot to x-axis <-12.000000> speed <206.4>;
		turn lleg to x-axis <2.000000> speed <52.8>;
		turn lfoot to x-axis <-16.000000> speed <7.2>;
		sleep 3900 / currentSpeed;
	}
}

MotionControl(moving, aiming, justmoved)
{
	justmoved = TRUE;
	while( TRUE )
	{
		moving = bMoving;
		aiming = bAiming;
		if( moving )
		{
			if( aiming )
			{
				Static_Var_3 = 1;
				call-script walklegs();
			}
			else
			{
				Static_Var_3 = 0;
				call-script walk();
			}
			justmoved = TRUE;
		}
		else
		{
			Static_Var_3 = 1;
			if( justmoved )
			{
				turn r_thigh to x-axis <0.000000> speed <200.000000>;
				turn rleg to x-axis <0.000000> speed <200.000000>;
				turn rfoot to x-axis <0.000000> speed <200.000000>;
				turn l_thigh to x-axis <0.000000> speed <200.000000>;
				turn lleg to x-axis <0.000000> speed <200.000000>;
				turn lfoot to x-axis <0.000000> speed <200.000000>;
				if( !aiming )
				{
					turn torso to y-axis <0.000000> speed <90.000000>;
					turn rarm to x-axis <0.000000> speed <200.000000>;
					turn ruparm to x-axis <0.000000> speed <200.000000>;
					turn larm to x-axis <0.000000> speed <200.000000>;
					turn luparm to x-axis <0.000000> speed <200.000000>;
				}
				justmoved = FALSE;
			}
			sleep 100;
		}
	}
}

UnitSpeed()
{
	while(TRUE)
	{
		currentSpeed = (get CURRENT_SPEED)*100/moveSpeed;
		if (currentSpeed<20) currentSpeed=20;
		sleep 142;
	}
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 500;
	}
	start-script UnitSpeed();
	start-script MotionControl();
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = SFXTYPE_BLACKSMOKE;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = SFXTYPE_WHITESMOKE;
			}
			emit-sfx smoketype from torso;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Create()
{
	hide gunflare;
	hide emgflare;
	turn gunflare to y-axis <180.000000> now;
	turn emgflare to y-axis <180.000000> now;
	bMoving = FALSE;
	bAiming = FALSE;
	Static_Var_3 = 1;
	restore_delay = 3000;
	gun_1 = 0;
	moveSpeed = get MAX_SPEED;
	currentSpeed = 100;
	start-script SmokeUnit();
}

SetMaxReloadTime(Func_Var_1)
{
	restore_delay = Func_Var_1 * 2;
}

StartMoving()
{
	bMoving = TRUE;
}

StopMoving()
{
	bMoving = FALSE;
}

SweetSpot(piecenum)
{
	piecenum = torso;
}

RestoreAfterDelay()
{
	sleep restore_delay;
	turn torso to y-axis <0.000000> speed <90.000000>;
	turn ruparm to x-axis <0.000000> speed <45.000000>;
	turn rarm to y-axis <0.000000> speed <45.000000>;
	turn luparm to x-axis <0.000000> speed <45.000000>;
	wait-for-turn torso around y-axis;
	wait-for-turn ruparm around x-axis;
	wait-for-turn rarm around y-axis;
	wait-for-turn luparm around x-axis;
	bAiming = FALSE;
}

AimFromPrimary(piecenum)
{
	piecenum = torso;
}

QueryPrimary(piecenum)
{
	if( gun_1 )
	{
		piecenum = emgflare;
	}
	else
	{
		piecenum = gunflare;
	}
}

FirePrimary()
{
	if( gun_1 )
	{
		emit-sfx UNIT_SFX1 from emgflare;
		move lemg to z-axis [-3.750000] speed [37.500000];
		sleep 100;
		wait-for-move lemg along z-axis;
		move lemg to z-axis [0.000000] speed [37.500000];
	}
	else
	{
		emit-sfx UNIT_SFX1 from gunflare;
		move rgun to z-axis [-3.750000] speed [37.500000];
		sleep 100;
		wait-for-move rgun along z-axis;
		move rgun to z-axis [0.000000] speed [37.500000];
	}
	gun_1 = !gun_1;
}

AimPrimary(heading, pitch)
{
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	bAiming = TRUE;
	while( !Static_Var_3 )
	{
		sleep 100;
	}
	turn torso to y-axis heading speed <240.000000>;
	turn ruparm to x-axis <0.000000> - pitch speed <200.000000>;
	turn luparm to x-axis <0.000000> - pitch speed <200.000000>;
	wait-for-turn torso around y-axis;
	wait-for-turn luparm around x-axis;
	wait-for-turn ruparm around x-axis;
	start-script RestoreAfterDelay();
	return (1);
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode lemg type BITMAPONLY | BITMAP2;
		explode lfoot type BITMAPONLY | BITMAP3;
		explode lleg type BITMAPONLY | BITMAP4;
		explode larm type BITMAPONLY | BITMAP5;
		explode l_thigh type BITMAPONLY | BITMAP1;
		explode luparm type BITMAPONLY | BITMAP2;
		explode rgun type BITMAPONLY | BITMAP4;
		explode rfoot type BITMAPONLY | BITMAP5;
		explode rleg type BITMAPONLY | BITMAP1;
		explode rarm type BITMAPONLY | BITMAP2;
		explode r_thigh type BITMAPONLY | BITMAP3;
		explode ruparm type BITMAPONLY | BITMAP4;
		explode torso type BITMAPONLY | BITMAP5;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode lemg type FALL | BITMAP2;
		explode lfoot type FALL | BITMAP3;
		explode lleg type FALL | BITMAP4;
		explode larm type FALL | BITMAP5;
		explode l_thigh type FALL | BITMAP1;
		explode luparm type FALL | BITMAP2;
		explode rgun type FALL | BITMAP4;
		explode rfoot type FALL | BITMAP5;
		explode rleg type FALL | BITMAP1;
		explode rarm type FALL | BITMAP2;
		explode r_thigh type FALL | BITMAP3;
		explode ruparm type FALL | BITMAP4;
		explode torso type SHATTER | BITMAP5;
		return (0);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode lemg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode lfoot type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode lleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode larm type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
		explode l_thigh type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode luparm type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode rgun type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode rfoot type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
		explode rleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode rarm type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode r_thigh type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode ruparm type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode torso type SHATTER | BITMAP5;
		return (0);
	}
	corpsetype = 3;
	explode lemg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode lfoot type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode lleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode larm type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
	explode l_thigh type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode luparm type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode rgun type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode rfoot type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
	explode rleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode rarm type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode r_thigh type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode ruparm type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode torso type SHATTER | EXPLODE_ON_HIT | BITMAP5;
	return (0);
}
