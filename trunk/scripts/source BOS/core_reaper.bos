#define TAK			// This is a TAK script

#include "sfxtype.h"
#include "exptype.h"

piece  base, body, turret, sleeve1, sleeve2, barrel1, barrel2, firepoint1,
       firepoint2, smoke1, smoke2, tracks1, tracks2, tracks3, tracks4, wheels1,
       wheels2, wheels3, wheels4, wheels5, wheels6, wheels7;

static-var  Static_Var_1, Static_Var_2, Static_Var_3, Static_Var_4;


RestoreAfterDelay(Func_Var_1)
{
	sleep Func_Var_1;
	turn turret to y-axis <0.000000> speed <90.021978>;
	turn sleeve1 to x-axis <0.000000> speed <50.010989>;
	turn sleeve2 to x-axis <0.000000> speed <50.010989>;
}

DamageControl(Func_Var_1)
{
	while( TRUE )
	{
		Func_Var_1 = get HEALTH;
		if( Func_Var_1 < 50 )
		{
			emit-sfx SFXTYPE_WHITESMOKE from body;
			if( Func_Var_1 < 25 )
			{
				emit-sfx SFXTYPE_BLACKSMOKE from turret;
			}
		}
		sleep 1000;
	}
}

AnimationControl(Func_Var_1)
{
	Func_Var_1 = 0;
	while( TRUE )
	{
		if( Static_Var_1 OR Static_Var_2 )
		{
			if( Func_Var_1 == 0 )
			{
				show tracks1;
				hide tracks4;
				++Func_Var_1;
			}
			else if( Func_Var_1 == 1 )
			{
				show tracks2;
				hide tracks1;
				++Func_Var_1;
			}
			else if( Func_Var_1 == 2 )
			{
				show tracks3;
				hide tracks2;
				++Func_Var_1;
			}
			else if( Func_Var_1 == 3 )
			{
				show tracks4;
				hide tracks3;
				Func_Var_1 = 0;
				if( Static_Var_2 )
				{
					--Static_Var_2;
				}
			}
		}
		++Static_Var_3;
		sleep 50;
	}
}

StartMoving()
{
	Static_Var_1 = 1;
	Static_Var_3 = 0;
	spin wheels2 around x-axis speed <960.230769> accelerate <30.005495>;
	spin wheels4 around x-axis speed <960.230769> accelerate <30.005495>;
	spin wheels6 around x-axis speed <960.230769> accelerate <30.005495>;
	spin wheels1 around x-axis speed <480.115385> accelerate <15.000000>;
	spin wheels3 around x-axis speed <480.115385> accelerate <15.000000>;
	spin wheels5 around x-axis speed <480.115385> accelerate <15.000000>;
	spin wheels7 around x-axis speed <480.115385> accelerate <15.000000>;
}

StopMoving()
{
	Static_Var_1 = 0;
	Static_Var_2 = Static_Var_3 * 50 / 1000;
	if( Static_Var_2 > 3 )
	{
		Static_Var_2 = 3;
	}
	stop-spin wheels2 around x-axis decelerate <60.010989>;
	stop-spin wheels4 around x-axis decelerate <60.010989>;
	stop-spin wheels6 around x-axis decelerate <60.010989>;
	stop-spin wheels1 around x-axis decelerate <30.005495>;
	stop-spin wheels3 around x-axis decelerate <30.005495>;
	stop-spin wheels5 around x-axis decelerate <30.005495>;
	stop-spin wheels7 around x-axis decelerate <30.005495>;
}

AimFromWeapon1(Func_Var_1)
{
	Func_Var_1 = 2;
}

QueryWeapon1(piecenum)
{
	if( Static_Var_4 )
	{
		piecenum = firepoint1;
	}
	else
	{
		piecenum = firepoint2;
	}
}

AimWeapon1(heading, pitch)
{
	signal 1;
	set-signal-mask 1;
	turn turret to y-axis heading speed <90.021978>;
	turn sleeve1 to x-axis <0.000000> - pitch speed <50.010989>;
	turn sleeve2 to x-axis <0.000000> - pitch speed <50.010989>;
	wait-for-turn turret around y-axis;
	wait-for-turn sleeve1 around x-axis;
	wait-for-turn sleeve2 around x-axis;
	start-script RestoreAfterDelay(3000);
	return (1);
}

Shot1()
{
	if( Static_Var_4 )
	{
		emit-sfx 1024 from firepoint1;
		emit-sfx 1025 from smoke1;
		move barrel1 to z-axis [-5.000000] speed [100.000000];
		sleep 150;
		move barrel1 to z-axis [0.000000] speed [10.000000];
	}
	else
	{
		emit-sfx 1024 from firepoint2;
		emit-sfx 1025 from smoke2;
		move barrel2 to z-axis [-5.000000] speed [100.000000];
		sleep 150;
		move barrel2 to z-axis [0.000000] speed [10.000000];
	}
	Static_Var_4 = !Static_Var_4;
}

Killed(Func_Var_1, Func_Var_2)
{
	if( Func_Var_1 >= 0 AND Func_Var_1 < 25 )
	{
		Func_Var_2 = 1;
		explode barrel1 type BITMAPONLY | 10000001;
		explode barrel2 type BITMAPONLY | 10000001;
		explode sleeve1 type BITMAPONLY | 10000001;
		explode sleeve2 type BITMAPONLY | 10000001;
		explode body type BITMAPONLY | 10000001;
		explode turret type BITMAPONLY | 10000001;
	}
	else if( Func_Var_1 >= 25 AND Func_Var_1 < 50 )
	{
		Func_Var_2 = 2;
		explode barrel1 type FALL | 10000001;
		explode barrel2 type FALL | 10000001;
		explode sleeve1 type 1 | 10000001;
		explode sleeve2 type FALL | 10000001;
		explode body type BITMAPONLY | 10000001;
		explode turret type 1 | 10000001;
	}
	else if( Func_Var_1 >= 50 AND Func_Var_1 < 100 )
	{
		Func_Var_2 = 3;
		explode barrel1 type FALL | 8 | 16 | 2 | 10000001;
		explode barrel2 type FALL | 8 | 16 | 2 | 10000001;
		explode sleeve1 type FALL | 8 | 16 | 2 | 10000001;
		explode sleeve2 type FALL | 8 | 16 | 2 | 10000001;
		explode body type BITMAPONLY | 10000001;
		explode turret type 1 | 10000001;
	}
	else if( Func_Var_1 >= 100 )
	{
		Func_Var_2 = 3;
		explode barrel1 type FALL | 8 | 16 | 2 | 10000001;
		explode barrel2 type FALL | 8 | 16 | 2 | 10000001;
		explode sleeve1 type FALL | 8 | 16 | 2 | 10000001;
		explode sleeve2 type FALL | 8 | 16 | 2 | 10000001;
		explode body type 1 | 10000001;
		explode turret type FALL | 8 | 16 | 2 | 10000001;
	}
}

Create()
{
	Static_Var_1 = 0;
	Static_Var_4 = 0;
	hide tracks1;
	hide tracks2;
	hide tracks3;
	turn smoke1 to y-axis <-90.021978> now;
	turn smoke2 to y-axis <90.021978> now;
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 500;
	}
	start-script AnimationControl();
	start-script DamageControl();
}
