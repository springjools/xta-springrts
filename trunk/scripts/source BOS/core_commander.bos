#define TAK			// This is a TAK script

#include "exptype.h"

#define SIG_AIM1  2
#define SIG_AIM2  4
#define SIG_BUILD 8
#define SIG_IDLE  32
#define SIG_AIM1IDLE  34
#define SIG_AIM2IDLE  36

piece  torso, ruparm, luparm, rbigflash, nanospray, pelvis, lfirept, head,
       lthigh, rthigh, nanolathe, biggun, rleg, lleg, orbit, orbitfire, l_foot, r_foot;

static-var  bMoving, aiming, bAiming, DGunning, singing, building, currentSpeed,
			moveSpeed, speedFactor, LOS, AirLOS, radarRange, sonarRange, wRange, wFactor, DRange,
            weapon1Disabled, weapon2Disabled, weapon4Disabled, weapon5Disabled,
            weapon6Disabled, idling;

ON()
{
	while( DGunning )
	{
		emit-sfx UNIT_SFX4 from rbigflash;
		sleep 16;
	}
}

Experience()
{
	var XP;
	while( TRUE )
	{
		XP=get VETERAN_LEVEL;
		if( XP <= 15 ) 
		{
			weapon2Disabled = 1;
			weapon4Disabled = 1;
			weapon5Disabled = 1;
			weapon6Disabled = 1;
			set ARMORED to 0;
		}
		else if( XP <= 30 )
		{
			weapon2Disabled = 0;
			weapon4Disabled = 1;
			weapon5Disabled = 1;
			weapon6Disabled = 1;
			set ARMORED to 1;
		}
		else if( XP <= 60 )
		{
			weapon2Disabled = 0;
			weapon4Disabled = 0;
			weapon5Disabled = 1;
			weapon6Disabled = 1;
			set ARMORED to 1;
		}
		else if( XP <= 120 )
		{
			weapon2Disabled = 0;
			weapon4Disabled = 0;
			weapon5Disabled = 0;
			weapon6Disabled = 1;
			set ARMORED to 1;
		}
		else if( XP > 140 )
		{
			weapon2Disabled = 1;
			weapon4Disabled = 0;
			weapon5Disabled = 0;
			weapon6Disabled = 0;
			set ARMORED to 1;
		}
		speedFactor = XP/3 + 100;
		if(speedFactor>150) speedFactor=150;
		wFactor = XP*4/9 + 100;
		if(wFactor>200) wFactor=200; 
		set MAX_SPEED to moveSpeed*speedFactor/100;
		set LOS_RADIUS to LOS*speedFactor/100;
		set AIR_LOS_RADIUS to AirLOS*speedFactor/100;
		set RADAR_RADIUS to radarRange*((speedFactor - 100)*4+100)/100;
		set SONAR_RADIUS to sonarRange*((speedFactor - 100)*2+100)/100;
		get WEAPON_RANGE(-1, wRange/100*wFactor );
		get WEAPON_RANGE(-2, get WEAPON_RANGE(1) );
		sleep 1000;
	}	
}

Sing()
{
	singing = Rand( 0, 9 );
	if( singing == 0 )
	{
		play-sound( "honk", 15 );
		play-sound( "honk", 15 );
		play-sound( "honk", 15 );
		play-sound( "honk", 15 );
		play-sound( "honk", 15 );
	}
	else if( singing == 1 )
	{
		play-sound( "CorCom1", 15 );
		play-sound( "CorCom1", 15 );
		play-sound( "CorCom1", 15 );
		play-sound( "CorCom1", 15 );
		play-sound( "CorCom1", 15 );
	}
	else if( singing > 1 AND singing < 10 )
	{
		play-sound( "sing", 15 );
		play-sound( "sing", 15 );
		play-sound( "sing", 15 );
		play-sound( "sing", 15 );
		play-sound( "sing", 15 );
	}
}

Build()
{
	signal SIG_BUILD;
	set-signal-mask SIG_BUILD;
	while( building )
	{
		emit-sfx UNIT_SFX2 from nanospray;
		sleep 100;
	}
}

walk()
{
	if( bMoving )
	{
		move pelvis to y-axis [-1.750000] now;
		move head to y-axis [0.000000] now;
		turn pelvis to x-axis <6.692308> now;
		turn lthigh to x-axis <-41.791209> now;
		turn rthigh to x-axis <17.593407> now;
		turn torso to y-axis <4.192308> now;
		turn ruparm to x-axis <-11.192308> now;
		turn luparm to x-axis <11.192308> now;
		turn nanolathe to x-axis <36.791209> now;
		turn biggun to x-axis <41.593407> now;
		turn rleg to x-axis <39.390110> now;
		turn lleg to x-axis <41.791209> now;
		sleep 3600/currentSpeed;
	}
	if( bMoving )
	{
		turn torso to y-axis <3.890110> now;
		turn ruparm to x-axis <-13.390110> now;
		turn luparm to x-axis <12.291209> now;
		turn nanolathe to x-axis <36.791209> now;
		sleep 3600/currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-1.500000] now;
		turn pelvis to x-axis <5.291209> now;
		turn lthigh to x-axis <-29.500000> now;
		turn rthigh to x-axis <8.791209> now;
		turn torso to y-axis <3.192308> now;
		turn ruparm to x-axis <-8.093407> now;
		turn luparm to x-axis <6.291209> now;
		turn nanolathe to x-axis <36.791209> now;
		turn biggun to x-axis <41.593407> now;
		turn rleg to x-axis <51.692308> now;
		turn lleg to x-axis <28.500000> now;
		sleep 9100/currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-0.750000] now;
		turn pelvis to x-axis <4.593407> now;
		turn lthigh to x-axis <-16.192308> now;
		turn rthigh to x-axis <0.000000> now;
		turn torso to y-axis <1.390110> now;
		turn ruparm to x-axis <-3.192308> now;
		turn luparm to x-axis <0.000000> now;
		turn nanolathe to x-axis <36.791209> now;
		turn biggun to x-axis <41.593407> now;
		turn rleg to x-axis <58.000000> now;
		turn lleg to x-axis <16.192308> now;
		sleep 8200/currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.000000] now;
		turn pelvis to x-axis <3.500000> now;
		turn lthigh to x-axis <7.000000> now;
		turn rthigh to x-axis <-6.291209> now;
		turn torso to y-axis <0.000000> now;
		turn ruparm to x-axis <3.192308> now;
		turn luparm to x-axis <-6.291209> now;
		turn nanolathe to x-axis <36.791209> now;
		turn rleg to x-axis <44.291209> now;
		turn lleg to x-axis <5.593407> now;
		sleep 8200/currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-0.500000] now;
		turn pelvis to x-axis <4.593407> now;
		turn lthigh to x-axis <10.890110> now;
		turn rthigh to x-axis <-34.500000> now;
		turn torso to y-axis <-1.390110> now;
		turn ruparm to x-axis <6.692308> now;
		turn luparm to x-axis <-8.093407> now;
		turn nanolathe to x-axis <36.791209> now;
		turn biggun to x-axis <41.593407> now;
		turn rleg to x-axis <71.390110> now;
		turn lleg to x-axis <20.000000> now;
		sleep 7300/currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-0.750000] now;
		turn lthigh to x-axis <13.000000> now;
		turn rthigh to x-axis <-42.890110> now;
		turn torso to y-axis <-2.500000> now;
		turn ruparm to x-axis <8.390110> now;
		turn luparm to x-axis <-9.093407> now;
		turn rleg to x-axis <54.500000> now;
		sleep 6400/currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-1.000000] now;
		turn pelvis to x-axis <5.291209> now;
		turn lthigh to x-axis <16.890110> now;
		turn rthigh to x-axis <-48.192308> now;
		turn torso to y-axis <-3.192308> now;
		turn ruparm to x-axis <10.192308> now;
		turn luparm to x-axis <-10.192308> now;
		turn nanolathe to x-axis <36.791209> now;
		turn biggun to x-axis <41.593407> now;
		turn rleg to x-axis <34.500000> now;
		turn lleg to x-axis <20.000000> now;
		sleep 7300/currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-1.750000] now;
		turn pelvis to x-axis <6.692308> now;
		turn lthigh to x-axis <15.500000> now;
		turn rthigh to x-axis <-40.390110> now;
		turn torso to y-axis <-4.192308> now;
		turn ruparm to x-axis <11.192308> now;
		turn luparm to x-axis <-11.192308> now;
		turn nanolathe to x-axis <36.791209> now;
		turn biggun to x-axis <41.593407> now;
		turn rleg to x-axis <40.390110> now;
		turn lleg to x-axis <30.593407> now;
		sleep 3600/currentSpeed;
	}
	if( bMoving )
	{
		turn ruparm to x-axis <13.390110> now;
		turn luparm to x-axis <-12.291209> now;
		turn nanolathe to x-axis <36.791209> now;
		turn biggun to x-axis <41.593407> now;
		sleep 3600/currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-1.500000] now;
		turn pelvis to x-axis <5.291209> now;
		turn lthigh to x-axis <9.500000> now;
		turn rthigh to x-axis <-34.500000> now;
		turn torso to y-axis <-3.192308> now;
		turn ruparm to x-axis <8.390110> now;
		turn luparm to x-axis <-8.390110> now;
		turn nanolathe to x-axis <36.791209> now;
		turn biggun to x-axis <41.192308> now;
		turn lleg to x-axis <43.890110> now;
		sleep 9100/currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-0.750000] now;
		turn pelvis to x-axis <4.593407> now;
		turn lthigh to x-axis <0.692308> now;
		turn rthigh to x-axis <-26.390110> now;
		turn torso to y-axis <-1.791209> now;
		turn ruparm to x-axis <3.192308> now;
		turn luparm to x-axis <-3.192308> now;
		turn biggun to x-axis <41.593407> now;
		turn lleg to x-axis <54.500000> now;
		sleep 8200/currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.000000] now;
		turn pelvis to x-axis <3.500000> now;
		turn lthigh to x-axis <-16.890110> now;
		turn rthigh to x-axis <3.890110> now;
		turn torso to y-axis <0.000000> now;
		turn ruparm to x-axis <-3.192308> now;
		turn luparm to x-axis <3.890110> now;
		turn nanolathe to x-axis <36.791209> now;
		turn biggun to x-axis <41.593407> now;
		turn rleg to x-axis <8.093407> now;
		turn lleg to x-axis <60.500000> now;
		sleep 7300/currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-0.500000] now;
		turn pelvis to x-axis <4.593407> now;
		turn lthigh to x-axis <-29.500000> now;
		turn rthigh to x-axis <10.192308> now;
		turn torso to y-axis <1.791209> now;
		turn ruparm to x-axis <-6.692308> now;
		turn luparm to x-axis <8.791209> now;
		turn biggun to x-axis <41.593407> now;
		turn rleg to x-axis <26.000000> now;
		turn lleg to x-axis <56.291209> now;
		sleep 7300/currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-0.750000] now;
		turn lthigh to x-axis <-43.890110> now;
		turn rthigh to x-axis <12.291209> now;
		turn torso to y-axis <2.500000> now;
		turn ruparm to x-axis <-7.000000> now;
		turn luparm to x-axis <9.791209> now;
		turn lleg to x-axis <55.890110> now;
		sleep 6400/currentSpeed;
	}
	move pelvis to y-axis [-1.000000] now;
	turn pelvis to x-axis <5.291209> now;
	turn lthigh to x-axis <-43.890110> now;
	turn rthigh to x-axis <14.390110> now;
	turn torso to y-axis <3.192308> now;
	turn ruparm to x-axis <-8.791209> now;
	turn luparm to x-axis <10.192308> now;
	turn biggun to x-axis <41.593407> now;
	turn lleg to x-axis <25.692308> now;
	sleep 7300/currentSpeed;
}

walklegs()
{
	if( bMoving )
	{
		move pelvis to y-axis [-1.750000] now;
		move head to y-axis [0.000000] now;
		turn pelvis to x-axis <6.692308> now;
		turn lthigh to x-axis <-41.791209> now;
		turn rthigh to x-axis <17.593407> now;
		turn rleg to x-axis <39.390110> now;
		turn lleg to x-axis <41.791209> now;
		sleep 7200/currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-1.500000] now;
		turn pelvis to x-axis <5.291209> now;
		turn lthigh to x-axis <-29.500000> now;
		turn rthigh to x-axis <8.791209> now;
		turn rleg to x-axis <51.692308> now;
		turn lleg to x-axis <28.500000> now;
		sleep 9100/currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-0.750000] now;
		turn pelvis to x-axis <4.593407> now;
		turn lthigh to x-axis <-16.192308> now;
		turn rthigh to x-axis <0.000000> now;
		turn rleg to x-axis <58.000000> now;
		turn lleg to x-axis <16.192308> now;
		sleep 8200/currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.000000] now;
		turn pelvis to x-axis <3.500000> now;
		turn lthigh to x-axis <7.000000> now;
		turn rthigh to x-axis <-6.291209> now;
		turn rleg to x-axis <44.291209> now;
		turn lleg to x-axis <5.593407> now;
		sleep 8200/currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-0.500000] now;
		turn pelvis to x-axis <4.593407> now;
		turn lthigh to x-axis <10.890110> now;
		turn rthigh to x-axis <-34.500000> now;
		turn rleg to x-axis <71.390110> now;
		turn lleg to x-axis <20.000000> now;
		sleep 7300/currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-0.750000] now;
		turn lthigh to x-axis <13.000000> now;
		turn rthigh to x-axis <-42.890110> now;
		turn rleg to x-axis <54.500000> now;
		sleep 6400/currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-1.000000] now;
		turn pelvis to x-axis <5.291209> now;
		turn lthigh to x-axis <16.890110> now;
		turn rthigh to x-axis <-48.192308> now;
		turn rleg to x-axis <34.500000> now;
		turn lleg to x-axis <20.000000> now;
		sleep 7300/currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-1.750000] now;
		turn pelvis to x-axis <6.692308> now;
		turn lthigh to x-axis <15.500000> now;
		turn rthigh to x-axis <-40.390110> now;
		turn rleg to x-axis <40.390110> now;
		turn lleg to x-axis <30.593407> now;
		sleep 7200/currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-1.500000] now;
		turn pelvis to x-axis <5.291209> now;
		turn lthigh to x-axis <9.500000> now;
		turn rthigh to x-axis <-34.500000> now;
		turn lleg to x-axis <43.890110> now;
		sleep 9100/currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-0.750000] now;
		turn pelvis to x-axis <4.593407> now;
		turn lthigh to x-axis <0.692308> now;
		turn rthigh to x-axis <-26.390110> now;
		turn lleg to x-axis <54.500000> now;
		sleep 8200/currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.000000] now;
		turn pelvis to x-axis <3.500000> now;
		turn lthigh to x-axis <-16.890110> now;
		turn rthigh to x-axis <3.890110> now;
		turn rleg to x-axis <8.093407> now;
		turn lleg to x-axis <60.500000> now;
		sleep 7300/currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-0.500000] now;
		turn pelvis to x-axis <4.593407> now;
		turn lthigh to x-axis <-29.500000> now;
		turn rthigh to x-axis <10.192308> now;
		turn rleg to x-axis <26.000000> now;
		turn lleg to x-axis <56.291209> now;
		sleep 7300/currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-0.750000] now;
		turn lthigh to x-axis <-43.890110> now;
		turn rthigh to x-axis <12.291209> now;
		turn lleg to x-axis <55.890110> now;
		sleep 6400/currentSpeed;
	}
	move pelvis to y-axis [-1.000000] now;
	turn pelvis to x-axis <5.291209> now;
	turn lthigh to x-axis <-43.890110> now;
	turn rthigh to x-axis <14.390110> now;
	turn lleg to x-axis <25.692308> now;
	sleep 7300/currentSpeed;
}

StopIdle()
{
	idling=0;
	turn lthigh to y-axis <0> speed <500>;
	turn rthigh to y-axis <0> speed <500>;
	turn lthigh to x-axis <0> speed <500>;
	turn rthigh to x-axis <0> speed <500>;
	turn lleg to x-axis <0> speed <500>;
	turn rleg to x-axis <0> speed <500>;
	turn l_foot to x-axis <0> speed <500>;
	turn r_foot to x-axis <0> speed <500>;
	move pelvis to y-axis [0] now;
	turn pelvis to x-axis <0> speed <500>;
	turn luparm to x-axis <0> speed <500>;
	turn ruparm to x-axis <0> speed <500>;
	turn nanolathe to x-axis <0> speed <500>;
	sleep 64;
	turn nanolathe to y-axis <0> speed <500>;
}

Idle()
{
	signal SIG_IDLE;
	set-signal-mask SIG_IDLE;
	var tmp;
	tmp=10;
	while(tmp)
	{
		--tmp;
		if(bMoving OR aiming OR building OR (get CLOAKED)) return;
		sleep 2500;
	}
	idling=1;
	turn lthigh to y-axis <30> speed <30>;
	turn rthigh to y-axis <-30> speed <30>;
	turn lthigh to x-axis <-90> speed <60>;
	turn rthigh to x-axis <-120> speed <80>;
	turn lleg to x-axis <20> speed <13.333>;
	turn rleg to x-axis <80> speed <53.333>;
	turn l_foot to x-axis <20> speed <13.333>;
	turn r_foot to x-axis <20> speed <13.333>;
	move pelvis to y-axis [-25.0] speed [16.666];
	turn pelvis to x-axis <-20> speed <13.333>;
	turn luparm to x-axis <-65> speed <50>;
	turn ruparm to x-axis <-70> speed <70>;
	turn nanolathe to x-axis <15> speed <10>;
	turn nanolathe to y-axis <-80> speed <53.333>;
	wait-for-move pelvis along y-axis;
	while(idling AND !(get CLOAKED))
	{
		tmp=rand(55,65);
		while(tmp AND !(get CLOAKED))
		{
			turn nanolathe to y-axis <-115> speed <90>;
			wait-for-turn nanolathe around y-axis;
			turn nanolathe to y-axis <-85> speed <90>;
			wait-for-turn nanolathe around y-axis;	
			--tmp;
		}
		tmp=rand(3,6);
		while(tmp)
		{
			emit-sfx FIRE_W3 from rbigflash;
			--tmp;
			sleep rand(400,800);
		}
	}
	if(get CLOAKED) call-script StopIdle();
}

UnitSpeed()
{
	while(TRUE)
	{
		currentSpeed = (get CURRENT_SPEED)*100/moveSpeed;
		if (currentSpeed<30) currentSpeed=30;
		sleep 142;
	}
}

MotionControl()
{
	var Func_Var_1, Func_Var_2, Func_Var_3;
	Func_Var_3 = 1;
	while( TRUE )
	{
		Func_Var_1 = bMoving;
		Func_Var_2 = aiming;
		if( Func_Var_1 )
		{
			if( Func_Var_2 )
			{
				bAiming = 1;
				call-script walklegs();
			}
			else
			{
				bAiming = 0;
				call-script walk();
			}
			Func_Var_3 = 1;
		}
		else
		{
			bAiming = 1;
			if( Func_Var_3 )
			{
				move pelvis to y-axis [0.000000] speed [2.500000];
				turn rthigh to x-axis <0.000000> speed <200.000000>;
				turn rleg to x-axis <0.000000> speed <200.000000>;
				turn lthigh to x-axis <0.000000> speed <200.000000>;
				turn lleg to x-axis <0.000000> speed <200.000000>;
				if( !Func_Var_2 )
				{
					turn torso to x-axis <0.000000> speed <90.000000>;
				}
				Func_Var_3 = 0;
			}
			sleep 100;
		}
	}
}

Create()
{
	hide rbigflash;
	hide lfirept;
	hide nanospray;
	weapon1Disabled = 0;
	moveSpeed = get MAX_SPEED;
	LOS = get LOS_RADIUS;
	AirLOS = get AIR_LOS_RADIUS;
	radarRange = get RADAR_RADIUS;
	sonarRange = get SONAR_RADIUS;
	wRange = get WEAPON_RANGE(1);
	bMoving = 0;
	building = FALSE;
	aiming = 0;
	bAiming = 0;
	DGunning = 0;
	currentSpeed = 100;
	idling = 0;
	start-script MotionControl();
	start-script UnitSpeed();
	start-script Experience();
	start-script Idle();
	move orbit to y-axis [1500.000000] now;
	move orbitfire to x-axis [500.000000] now;
	spin orbit around y-axis speed <54.890110>;
}

StartMoving()
{
	signal SIG_IDLE;
	if(idling) call-script StopIdle();
	bMoving = 1;
}

StopMoving()
{
	bMoving = 0;
	if (!idling) start-script Idle();
}

SweetSpot(piecenum)
{
	piecenum = torso;
}

QueryNanoPiece(Func_Var_1)
{
	Func_Var_1 = nanospray;
}

RestorePosition()
{
	DGunning = 0;
	turn torso to y-axis <0.000000> speed <90.000000>;
	turn ruparm to x-axis <0.000000> speed <45.000000>;
	turn luparm to x-axis <0.000000> speed <45.000000>;
	wait-for-turn torso around y-axis;
	wait-for-turn ruparm around x-axis;
	wait-for-turn luparm around x-axis;
	building = FALSE;
	aiming = 0;
	weapon1Disabled = 0;
}

AimFromWeapon1(Func_Var_1)
{
	Func_Var_1 = torso;
}

QueryWeapon1(Func_Var_1)
{
	Func_Var_1 = lfirept;
}

AimWeapon1(Func_Var_1, Func_Var_2)
{
	if(DGunning OR weapon1Disabled) return 0;
	signal SIG_AIM1IDLE;
	set-signal-mask SIG_AIM1;
	if(idling) call-script StopIdle();
	aiming = TRUE;
	while( !bAiming )
	{
		sleep 100;
	}
	turn torso to y-axis Func_Var_1 speed <300.093407>;
	turn luparm to x-axis <-60.000000> - Func_Var_2 speed <95.000000>;
	wait-for-turn torso around y-axis;
	wait-for-turn luparm around x-axis;
	return (1);
}

FireWeapon1()
{
	emit-sfx UNIT_SFX3 from lfirept;
}

AimFromWeapon2(Func_Var_1)
{
	Func_Var_1 = torso;
}

QueryWeapon2(Func_Var_1)
{
	Func_Var_1 = rbigflash;
}

AimWeapon2(Func_Var_1, Func_Var_2)
{
	if( DGunning OR weapon2Disabled ) return (0);
	signal SIG_AIM2IDLE;
	set-signal-mask SIG_AIM2;
	if(idling) call-script StopIdle();
	aiming = TRUE;
	while( !bAiming )
	{
		sleep 100;
	}
	turn torso to y-axis Func_Var_1 speed <300.093407>;
	turn ruparm to x-axis <-30.000000> - Func_Var_2 speed <95.000000>;
	wait-for-turn torso around y-axis;
	wait-for-turn ruparm around x-axis;
	return (1);
}

FireWeapon2()
{
	emit-sfx UNIT_SFX3 from rbigflash;
}

AimFromWeapon3(Func_Var_1)
{
	Func_Var_1 = torso;
}

QueryWeapon3(Func_Var_1)
{
	Func_Var_1 = rbigflash;
}

AimWeapon3(Func_Var_1, Func_Var_2)
{
	signal SIG_AIM2IDLE;
	set-signal-mask SIG_AIM2;
	if(idling) call-script StopIdle();
	DGunning = 1;
	start-script ON();
	aiming = TRUE;
	while( !bAiming )
	{
		sleep 100;
	}
	turn torso to y-axis Func_Var_1 speed <300.093407>;
	turn ruparm to x-axis <-49.000000> - Func_Var_2 speed <110.000000>;
	wait-for-turn torso around y-axis;
	wait-for-turn ruparm around x-axis;
	return (1);
}

FireWeapon3()
{
	emit-sfx UNIT_SFX1 from rbigflash;
	move biggun to z-axis [-5.000000] now;
	move pelvis to z-axis [-5.000000] now;
	move biggun to z-axis [0.000000] speed [150.000000];
	move pelvis to z-axis [0.000000] speed [150.000000];
	sleep 100;
}

AimFromWeapon4(Func_Var_1)
{
	Func_Var_1 = torso;
}

QueryWeapon4(Func_Var_1)
{
	Func_Var_1 = lfirept;
}

AimWeapon4(Func_Var_1, Func_Var_2)
{
	if(DGunning OR weapon4Disabled) return 0;
	signal SIG_AIM1IDLE;
	set-signal-mask SIG_AIM1;
	if(idling) call-script StopIdle();
	aiming = TRUE;
	weapon1Disabled = 1;
	while( !bAiming )
	{
		sleep 100;
	}
	turn torso to y-axis Func_Var_1 speed <300.093407>;
	turn luparm to x-axis <-60.000000> - Func_Var_2 speed <95.000000>;
	wait-for-turn torso around y-axis;
	wait-for-turn luparm around x-axis;
	return (1);
}

FireWeapon4()
{
	emit-sfx UNIT_SFX5 from lfirept;
}

AimFromWeapon5(Func_Var_1)
{
	Func_Var_1 = orbit;
}

QueryWeapon5(Func_Var_1)
{
	Func_Var_1 = orbitfire;
}

AimWeapon5(Func_Var_1, Func_Var_2)
{
	if(weapon5Disabled) return 0;
	return (1);
}

AimFromWeapon6(Func_Var_1)
{
	Func_Var_1 = torso;
}

QueryWeapon6(Func_Var_1)
{
	Func_Var_1 = rbigflash;
}

AimWeapon6(Func_Var_1, Func_Var_2)
{
	if(DGunning OR weapon6Disabled) return 0;
	signal SIG_AIM2IDLE;
	set-signal-mask SIG_AIM2;
	if(idling) call-script StopIdle();
	aiming = TRUE;
	while( !bAiming )
	{
		sleep 100;
	}
	turn torso to y-axis Func_Var_1 speed <300.093407>;
	turn ruparm to x-axis <-49.000000> - Func_Var_2 speed <110.000000>;
	wait-for-turn torso around y-axis;
	wait-for-turn ruparm around x-axis;
	return (1);
}

FireWeapon6()
{
	emit-sfx UNIT_SFX5 from rbigflash;
}

StartBuilding(Func_Var_1, Func_Var_2)
{
	signal SIG_IDLE;
	if(idling) call-script StopIdle();
	aiming = TRUE;
	while( !bAiming )
	{
		sleep 100;
	}
	turn torso to y-axis Func_Var_1 speed <300.093407>;
	turn luparm to x-axis <-25.000000> - Func_Var_2 speed <45.000000>;
	wait-for-turn torso around y-axis;
	wait-for-turn luparm around x-axis;
	set INBUILDSTANCE to 1;
	building = 1;
	start-script Build();
}

TargetCleared(weaponnum)
{
	signal SIG_AIM1;
	set-signal-mask SIG_AIM1;
	call-script RestorePosition();
	if (!idling AND !bMoving AND !aiming AND !(get CLOAKED)) start-script Idle();
}

StopBuilding()
{
	set INBUILDSTANCE to 0;
	signal SIG_AIM1;
	set-signal-mask SIG_AIM1;
	call-script RestorePosition();
	building = 0;
	//if (!idling AND !bMoving AND !aiming AND !(get CLOAKED)) start-script Idle();
}

Killed(Func_Var_1, Func_Var_2)
{
	play-sound( "VICTORY2", 60 );
	sleep 1;
	play-sound( "VICTORY2", 60 );
}
