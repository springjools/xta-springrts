#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, body, turret, gun, barrel1a, barrel1b, flare1a, flare1b,
	   slgs, slgfl1, slgfl2, turret3, gun3, flare3a, flare3b, flare3c,
	   flare3d, leg1, foot1, leg2, foot2, leg3, foot3, leg4, foot4;

static-var  bMoving, gun_1, gun_2, gun_3;

//Signal definitions
#define SIG_AIM			2
#define SIG_AIM_2		4
#define SIG_AIM_3		8

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from turret;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

MotionControl()
{
	while( TRUE )
	{
		if( bMoving )
		{
			turn Leg1 to y-axis <15.000000> speed <72.000000>;
			move Leg1 to x-axis [0.075000] now;
			move Leg1 to z-axis [-0.075000] now;
			turn Leg2 to y-axis <-25.000000> speed <144.000000>;
			turn Leg2 to z-axis <50.000000> speed <144.000000>;
			turn Foot2 to z-axis <-50.000000> speed <144.000000>;
			turn Leg3 to y-axis <-35.000000> speed <72.000000>;
			turn Leg4 to y-axis <25.000000> speed <72.000000>;
			turn Foot1 to y-axis <-15.000000> speed <72.000000>;
			turn Foot2 to y-axis <25.000000> speed <144.000000>;
			turn Foot3 to y-axis <35.000000> speed <72.000000>;
			turn Foot4 to y-axis <-25.000000> speed <72.000000>;
			sleep 80;
			turn Leg1 to y-axis <10.000000> speed <72.000000>;
			move Leg1 to x-axis [0.150000] now;
			move Leg1 to z-axis [-0.150000] now;
			turn Leg2 to y-axis <-10.000000> speed <144.000000>;
			turn Leg3 to y-axis <-30.000000> speed <72.000000>;
			turn Leg4 to y-axis <30.000000> speed <72.000000>;
			turn Foot1 to y-axis <-10.000000> speed <72.000000>;
			turn Foot2 to y-axis <10.000000> speed <144.000000>;
			turn Foot3 to y-axis <30.000000> speed <72.000000>;
			turn Foot4 to y-axis <-30.000000> speed <72.000000>;
			sleep 80;
			turn Leg1 to y-axis <5.000000> speed <72.000000>;
			move Leg1 to x-axis [0.225000] now;
			move Leg1 to z-axis [-0.225000] now;
			turn Leg2 to y-axis <5.000000> speed <144.000000>;
			move Leg2 to x-axis [0.300000] now;
			move Leg2 to z-axis [0.300000] now;
			turn Leg3 to y-axis <-25.000000> speed <72.000000>;
			turn Leg4 to y-axis <35.000000> speed <72.000000>;
			turn Foot1 to y-axis <-5.000000> speed <72.000000>;
			turn Foot2 to y-axis <-5.000000> speed <144.000000>;
			turn Foot3 to y-axis <25.000000> speed <72.000000>;
			turn Foot4 to y-axis <-35.000000> speed <72.000000>;
			sleep 80;
			turn Leg1 to y-axis <0.000000> speed <72.000000>;
			move Leg1 to x-axis [0.300000] now;
			move Leg1 to z-axis [-0.300000] now;
			turn Leg2 to y-axis <20.000000> speed <144.000000>;
			turn Leg2 to z-axis <0.000000> speed <144.000000>;
			move Leg2 to x-axis [0.900000] speed [14.000000];
			move Leg2 to z-axis [0.900000] speed [14.000000];
			turn Foot2 to z-axis <0.000000> speed <144.000000>;
			turn Leg3 to y-axis <-20.000000> speed <72.000000>;
			turn Leg4 to y-axis <40.000000> speed <72.000000>;
			turn Foot1 to y-axis <0.000000> speed <72.000000>;
			turn Foot2 to y-axis <0.000000> speed <144.000000>;
			turn Foot3 to y-axis <20.000000> speed <72.000000>;
			turn Foot4 to y-axis <-40.000000> speed <72.000000>;
			sleep 80;
		}
		if( bMoving )
		{
			turn Leg1 to y-axis <-5.000000> speed <72.000000>;
			move Leg1 to x-axis [0.450000] now;
			move Leg1 to z-axis [-0.450000] now;
			turn Leg2 to y-axis <15.000000> speed <72.000000>;
			move Leg2 to x-axis [0.750000] now;
			move Leg2 to z-axis [0.750000] now;
			turn Leg3 to y-axis <-15.000000> speed <72.000000>;
			move Leg3 to x-axis [-0.075000] now;
			move Leg3 to z-axis [-0.075000] now;
			turn Leg4 to y-axis <25.000000> speed <144.000000>;
			turn Leg4 to z-axis <-50.000000> speed <144.000000>;
			turn Foot4 to z-axis <50.000000> speed <144.000000>;
			turn Foot1 to y-axis <5.000000> speed <72.000000>;
			turn Foot2 to y-axis <-15.000000> speed <72.000000>;
			turn Foot3 to y-axis <15.000000> speed <72.000000>;
			turn Foot4 to y-axis <-25.000000> speed <144.000000>;
			sleep 80;
			turn Leg1 to y-axis <-10.000000> speed <72.000000>;
			move Leg1 to x-axis [0.600000] now;
			move Leg1 to z-axis [-0.600000] now;
			turn Leg2 to y-axis <10.000000> speed <72.000000>;
			move Leg2 to x-axis [0.600000] now;
			move Leg2 to z-axis [0.600000] now;
			turn Leg3 to y-axis <-10.000000> speed <72.000000>;
			move Leg3 to x-axis [-0.150000] now;
			move Leg3 to z-axis [-0.150000] now;
			turn Leg4 to y-axis <10.000000> speed <144.000000>;
			turn Foot1 to y-axis <10.000000> speed <72.000000>;
			turn Foot2 to y-axis <-10.000000> speed <72.000000>;
			turn Foot3 to y-axis <10.000000> speed <72.000000>;
			turn Foot4 to y-axis <-10.000000> speed <144.000000>;
			sleep 80;
			turn Leg1 to y-axis <-15.000000> speed <72.000000>;
			move Leg1 to x-axis [0.750000] now;
			move Leg1 to z-axis [-0.750000] now;
			turn Leg2 to y-axis <5.000000> speed <72.000000>;
			move Leg2 to x-axis [0.450000] now;
			move Leg2 to z-axis [0.450000] now;
			turn Leg3 to y-axis <-5.000000> speed <72.000000>;
			move Leg3 to x-axis [-0.225000] now;
			move Leg3 to z-axis [-0.225000] now;
			turn Leg4 to y-axis <-5.000000> speed <144.000000>;
			move Leg4 to x-axis [-0.300000] now;
			move Leg4 to z-axis [0.300000] now;
			turn Foot1 to y-axis <15.000000> speed <72.000000>;
			turn Foot2 to y-axis <-5.000000> speed <72.000000>;
			turn Foot3 to y-axis <5.000000> speed <72.000000>;
			turn Foot4 to y-axis <5.000000> speed <144.000000>;
			sleep 80;
			turn Leg1 to y-axis <-20.000000> speed <72.000000>;
			move Leg1 to x-axis [0.900000] now;
			move Leg1 to z-axis [-0.900000] now;
			turn Leg2 to y-axis <0.000000> speed <72.000000>;
			move Leg2 to x-axis [0.300000] now;
			move Leg2 to z-axis [0.300000] now;
			turn Leg3 to y-axis <0.000000> speed <72.000000>;
			move Leg3 to x-axis [-0.300000] now;
			move Leg3 to z-axis [-0.300000] now;
			turn Leg4 to y-axis <-20.000000> speed <144.000000>;
			turn Leg4 to z-axis <0.000000> speed <144.000000>;
			move Leg4 to x-axis [-0.900000] speed [14.000000];
			move Leg4 to z-axis [0.900000] speed [14.000000];
			turn Foot4 to z-axis <0.000000> speed <144.000000>;
			turn Foot1 to y-axis <20.000000> speed <72.000000>;
			turn Foot2 to y-axis <0.000000> speed <72.000000>;
			turn Foot3 to y-axis <0.000000> speed <72.000000>;
			turn Foot4 to y-axis <20.000000> speed <144.000000>;
			sleep 80;
		}
		if( bMoving )
		{
			turn Leg1 to y-axis <-5.000000> speed <144.000000>;
			turn Leg1 to z-axis <50.000000> speed <144.000000>;
			move Leg1 to x-axis [0.300000] speed [14.000000];
			move Leg1 to z-axis [-0.300000] speed [14.000000];
			turn Foot1 to z-axis <-50.000000> speed <144.000000>;
			turn Leg2 to y-axis <-5.000000> speed <72.000000>;
			move Leg2 to x-axis [0.225000] now;
			move Leg2 to z-axis [0.225000] now;
			turn Leg3 to y-axis <5.000000> speed <72.000000>;
			move Leg3 to x-axis [-0.450000] now;
			move Leg3 to z-axis [-0.450000] now;
			turn Leg4 to y-axis <-15.000000> speed <72.000000>;
			move Leg4 to x-axis [-0.750000] now;
			move Leg4 to z-axis [0.750000] now;
			turn Foot1 to y-axis <5.000000> speed <144.000000>;
			turn Foot2 to y-axis <5.000000> speed <72.000000>;
			turn Foot3 to y-axis <-5.000000> speed <72.000000>;
			turn Foot4 to y-axis <15.000000> speed <72.000000>;
			sleep 80;
			turn Leg1 to y-axis <10.000000> speed <144.000000>;
			move Leg1 to x-axis [0.000000] now;
			move Leg1 to z-axis [0.000000] now;
			turn Leg2 to y-axis <-10.000000> speed <72.000000>;
			move Leg2 to x-axis [0.150000] now;
			move Leg2 to z-axis [0.150000] now;
			turn Leg3 to y-axis <10.000000> speed <72.000000>;
			move Leg3 to x-axis [-0.600000] now;
			move Leg3 to z-axis [-0.600000] now;
			turn Leg4 to y-axis <-10.000000> speed <72.000000>;
			move Leg4 to x-axis [-0.600000] now;
			move Leg4 to z-axis [0.600000] now;
			turn Foot1 to y-axis <-10.000000> speed <144.000000>;
			turn Foot2 to y-axis <10.000000> speed <72.000000>;
			turn Foot3 to y-axis <-10.000000> speed <72.000000>;
			turn Foot4 to y-axis <10.000000> speed <72.000000>;
			sleep 80;
			turn Leg1 to y-axis <25.000000> speed <144.000000>;
			turn Leg2 to y-axis <-15.000000> speed <72.000000>;
			move Leg2 to x-axis [0.075000] now;
			move Leg2 to z-axis [0.075000] now;
			turn Leg3 to y-axis <15.000000> speed <72.000000>;
			move Leg3 to x-axis [-0.750000] now;
			move Leg3 to z-axis [-0.750000] now;
			turn Leg4 to y-axis <-5.000000> speed <72.000000>;
			move Leg4 to x-axis [-0.450000] now;
			move Leg4 to z-axis [0.450000] now;
			turn Foot1 to y-axis <-25.000000> speed <144.000000>;
			turn Foot2 to y-axis <15.000000> speed <72.000000>;
			turn Foot3 to y-axis <-15.000000> speed <72.000000>;
			turn Foot4 to y-axis <5.000000> speed <72.000000>;
			sleep 80;
			turn Leg1 to y-axis <40.000000> speed <144.000000>;
			turn Leg1 to z-axis <0.000000> speed <144.000000>;
			turn Foot1 to z-axis <0.000000> speed <144.000000>;
			turn Leg2 to y-axis <-20.000000> speed <72.000000>;
			move Leg2 to x-axis [0.000000] now;
			move Leg2 to z-axis [0.000000] now;
			turn Leg3 to y-axis <20.000000> speed <72.000000>;
			move Leg3 to x-axis [-0.900000] now;
			move Leg3 to z-axis [-0.900000] now;
			turn Leg4 to y-axis <0.000000> speed <72.000000>;
			move Leg4 to x-axis [-0.300000] now;
			move Leg4 to z-axis [0.300000] now;
			turn Foot1 to y-axis <-40.000000> speed <144.000000>;
			turn Foot2 to y-axis <20.000000> speed <72.000000>;
			turn Foot3 to y-axis <-20.000000> speed <72.000000>;
			turn Foot4 to y-axis <0.000000> speed <72.000000>;
			sleep 80;
		}
		if( bMoving )
		{
			turn Leg1 to y-axis <35.000000> speed <72.000000>;
			turn Leg2 to y-axis <-25.000000> speed <72.000000>;
			turn Leg3 to y-axis <5.000000> speed <144.000000>;
			turn Leg3 to z-axis <-50.000000> speed <144.000000>;
			move Leg3 to x-axis [-0.300000] speed [14.000000];
			move Leg3 to z-axis [-0.300000] speed [14.000000];
			turn Foot3 to z-axis <50.000000> speed <144.000000>;
			turn Leg4 to y-axis <5.000000> speed <72.000000>;
			move Leg4 to x-axis [-0.225000] now;
			move Leg4 to z-axis [0.225000] now;
			turn Foot1 to y-axis <-35.000000> speed <72.000000>;
			turn Foot2 to y-axis <25.000000> speed <72.000000>;
			turn Foot3 to y-axis <-5.000000> speed <144.000000>;
			turn Foot4 to y-axis <-5.000000> speed <72.000000>;
			sleep 80;
			turn Leg1 to y-axis <30.000000> speed <72.000000>;
			turn Leg2 to y-axis <-30.000000> speed <72.000000>;
			turn Leg3 to y-axis <-10.000000> speed <144.000000>;
			move Leg3 to x-axis [0.000000] now;
			move Leg3 to z-axis [0.000000] now;
			turn Leg4 to y-axis <10.000000> speed <72.000000>;
			move Leg4 to x-axis [-0.150000] now;
			move Leg4 to z-axis [0.150000] now;
			turn Foot1 to y-axis <-30.000000> speed <72.000000>;
			turn Foot2 to y-axis <30.000000> speed <72.000000>;
			turn Foot3 to y-axis <10.000000> speed <144.000000>;
			turn Foot4 to y-axis <-10.000000> speed <72.000000>;
			sleep 80;
			turn Leg1 to y-axis <25.000000> speed <72.000000>;
			turn Leg2 to y-axis <-35.000000> speed <72.000000>;
			turn Leg3 to y-axis <-25.000000> speed <144.000000>;
			turn Leg4 to y-axis <15.000000> speed <72.000000>;
			move Leg4 to x-axis [-0.075000] now;
			move Leg4 to z-axis [0.075000] now;
			turn Foot1 to y-axis <-25.000000> speed <72.000000>;
			turn Foot2 to y-axis <35.000000> speed <72.000000>;
			turn Foot3 to y-axis <25.000000> speed <144.000000>;
			turn Foot4 to y-axis <-15.000000> speed <72.000000>;
			sleep 80;
			turn Leg1 to y-axis <20.000000> speed <72.000000>;
			turn Leg2 to y-axis <-40.000000> speed <72.000000>;
			turn Leg3 to y-axis <-40.000000> speed <144.000000>;
			turn Leg3 to z-axis <0.000000> speed <144.000000>;
			turn Foot3 to z-axis <0.000000> speed <144.000000>;
			turn Leg4 to y-axis <20.000000> speed <72.000000>;
			move Leg4 to x-axis [0.000000] now;
			move Leg4 to z-axis [0.000000] now;
			turn Foot1 to y-axis <-20.000000> speed <72.000000>;
			turn Foot2 to y-axis <40.000000> speed <72.000000>;
			turn Foot3 to y-axis <40.000000> speed <144.000000>;
			turn Foot4 to y-axis <-20.000000> speed <72.000000>;
			sleep 80;
		}
		if( !bMoving )
		{
			turn Leg1 to y-axis <0.000000> speed <144.000000>;
			move Leg1 to x-axis [0.000000] now;
			move Leg1 to z-axis [0.000000] now;
			turn Leg2 to y-axis <0.000000> speed <144.000000>;
			move Leg2 to x-axis [0.000000] now;
			move Leg2 to z-axis [0.000000] now;
			turn Leg3 to y-axis <0.000000> speed <144.000000>;
			move Leg3 to x-axis [0.000000] now;
			move Leg3 to z-axis [0.000000] now;
			turn Leg4 to y-axis <0.000000> speed <144.000000>;
			move Leg4 to x-axis [0.000000] now;
			move Leg4 to z-axis [0.000000] now;
			turn Foot1 to y-axis <0.000000> speed <144.000000>;
			turn Foot2 to y-axis <0.000000> speed <144.000000>;
			turn Foot3 to y-axis <0.000000> speed <144.000000>;
			turn Foot4 to y-axis <0.000000> speed <144.000000>;
			sleep 80;
		}
	}
}

Create()
{
	hide flare1a;
	hide flare1b;
	dont-cache flare1a;
	dont-cache flare1b;
	hide slgfl1;
	hide slgfl2;
	dont-cache slgfl1;
	dont-cache slgfl2;
	hide flare3a;
	hide flare3b;
	hide flare3c;
	hide flare3d;
	bMoving = FALSE;
	gun_1 = 0;
	gun_2 = 0;
	gun_3 = 0;
	start-script SmokeUnit();
	start-script MotionControl();
}

SweetSpot(piecenum)
{
	piecenum = base;
}

StartMoving()
{
	bMoving = TRUE;
}

StopMoving()
{
	bMoving = FALSE;
}

RestoreAfterDelay()
{
	sleep 6000;
	turn turret to y-axis <0> speed <30>;
	turn gun to x-axis <0> speed <15>;
}

RestoreAfterDelay2()
{
	sleep 3000;
	turn slgs to y-axis <0> speed <125>;
}

RestoreAfterDelay3()
{
	sleep 3000;
	turn turret3 to y-axis <0> speed <475>;
	turn gun3 to x-axis <0> speed <135>;
}

QueryPrimary(piecenum)
{
	if( gun_1 == 0 )
	{
		piecenum = flare1a;
	}
	if( gun_1 == 1 )
	{
		piecenum = flare1b;
	}
}

AimFromPrimary(piecenum)
{
	piecenum = turret;
}

AimPrimary(heading, pitch)
{
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	turn turret to y-axis heading speed <70>;
	turn gun to x-axis <0> - pitch speed <45>;
	wait-for-turn turret around y-axis;
	wait-for-turn gun around x-axis;
	start-script RestoreAfterDelay();
	return (1);
}

FirePrimary()
{
	if( gun_1 == 0 )
	{
		emit-sfx UNIT_SFX1 from flare1a;
		move barrel1a to z-axis [-6] speed [100];
		sleep 500;
		move barrel1a to z-axis [0] speed [2.5];
		gun_1 = 1;
		return (0);
	}
	if( gun_1 == 1 )
	{
		emit-sfx UNIT_SFX1 from flare1b;
		move barrel1b to z-axis [-6] speed [100];
		sleep 500;
		move barrel1b to z-axis [0] speed [2.5];
		gun_1 = 0;
		return (0);
	}
}

QuerySecondary(piecenum)
{
	if( gun_2 == 0 )
	{
		piecenum = slgfl1;
	}
	if( gun_2 == 1 )
	{
		piecenum = slgfl2;
	}
}

AimFromSecondary(piecenum)
{
	piecenum = slgs;
}

AimSecondary(heading)
{
	signal SIG_AIM_2;
	set-signal-mask SIG_AIM_2;
	if( heading > 24563 AND heading < 40937 )
	{
	start-script RestoreAfterDelay2();
	return (0);
	}
	turn slgs to y-axis heading speed <125>;
	wait-for-turn slgs around y-axis;
	start-script RestoreAfterDelay2();
	return (1);
}

FireSecondary()
{
	if( gun_2 == 0 )
	{
		emit-sfx UNIT_SFX2 from slgfl1;
		sleep 150;
		gun_2 = 1;
		return (0);
	}
	if( gun_2 == 1 )
	{
		emit-sfx UNIT_SFX2 from slgfl2;
		sleep 150;
		gun_2 = 0;
		return (0);
	}
}

QueryTertiary(piecenum)
{
	if( gun_3 == 0 )
	{
		piecenum = flare3a;
	}
	if( gun_3 == 1 )
	{
		piecenum = flare3b;
	}
	if( gun_3 == 2 )
	{
		piecenum = flare3c;
	}
	if( gun_3 == 3 )
	{
		piecenum = flare3b;
	}
}

AimFromTertiary(piecenum)
{
	piecenum = turret3;
}

AimTertiary(heading, pitch)
{
	signal SIG_AIM_3;
	set-signal-mask SIG_AIM_3;
	turn turret3 to y-axis heading speed <475>;
	turn gun3 to x-axis <0> - pitch speed <135>;
	wait-for-turn turret3 around y-axis;
	wait-for-turn gun3 around x-axis;
	start-script RestoreAfterDelay3();
	return (1);
}

FireTertiary()
{
	if( gun_3 == 0 )
	{
		emit-sfx UNIT_SFX3 from flare3a;
		sleep 100;
		gun_3 = 1;
		return (0);
	}
	if( gun_3 == 1 )
	{
		emit-sfx UNIT_SFX3 from flare3b;
		sleep 100;
		gun_3 = 2;
		return (0);
	}
	if( gun_3 == 2 )
	{
		emit-sfx UNIT_SFX3 from flare3c;
		sleep 100;
		gun_3 = 3;
		return (0);
	}
	if( gun_3 == 3 )
	{
		emit-sfx UNIT_SFX3 from flare3d;
		sleep 100;
		gun_3 = 0;
		return (0);
	}
//	++gun_3;
//	if( gun_3 > 3 )
//	{
//		sleep 50;
//		gun_3 = 0;
//	}
}

Killed(severity, corpsetype)
{
	hide flare1a;
	hide flare1b;
	hide slgfl1;
	hide slgfl2;
	hide flare3a;
	hide flare3b;
	hide flare3c;
	hide flare3d;
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode body type BITMAPONLY | BITMAP1;
		explode foot1 type BITMAPONLY | BITMAP2;
		explode foot2 type BITMAPONLY | BITMAP2;
		explode foot3 type BITMAPONLY | BITMAP2;
		explode foot4 type BITMAPONLY | BITMAP2;
		explode turret type BITMAPONLY | BITMAP2;
		explode barrel1a type BITMAPONLY | BITMAP3;
		explode barrel1b type BITMAPONLY | BITMAP3;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode body type BITMAPONLY | BITMAP1;
		explode foot1 type BITMAPONLY | BITMAP2;
		explode foot2 type BITMAPONLY | BITMAP2;
		explode foot3 type BITMAPONLY | BITMAP2;
		explode foot4 type BITMAPONLY | BITMAP2;
		explode turret type BITMAPONLY | BITMAP2;
		explode barrel1a type BITMAPONLY | BITMAP3;
		explode barrel1b type FALL | BITMAP3;
		return (0);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode body type BITMAPONLY | BITMAP1;
		explode foot1 type FALL | EXPLODE_ON_HIT | BITMAP2;
		explode foot2 type FALL | EXPLODE_ON_HIT | BITMAP2;
		explode foot3 type FALL | EXPLODE_ON_HIT | BITMAP2;
		explode foot4 type FALL | EXPLODE_ON_HIT | BITMAP2;
		explode turret type SHATTER | BITMAP2;
		explode barrel1a type FALL | BITMAP3;
		explode barrel1b type FALL | EXPLODE_ON_HIT | BITMAP3;
		explode slgs type BITMAPONLY | BITMAP3;
		return (0);
	}
	explode body type BITMAPONLY | BITMAP1;
	explode foot1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode foot2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode foot3 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode foot4 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode turret type SHATTER | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode barrel1a type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode barrel1b type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode slgs type BITMAPONLY | BITMAP3;
}