#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, p, body, lights, rotor, glowpoint;

static-var  Static_Var_1, Static_Var_2, Static_Var_3, Static_Var_4, Static_Var_5,
            Static_Var_6, glowing;

// Signal definitions
#define SIG_ACTIVATE			2

#define SMOKEPIECE1 body

#include "StateChg.h"

Glow()
{
	emit-sfx UNIT_SFX1 from glowpoint;
	sleep 50;
	emit-sfx UNIT_SFX1 from glowpoint;
	sleep 50;
	if(glowing)
	{
		start-script Glow();
	}
}

HitByWeapon(anglex, anglez)
{
	var Func_Var_3;
	Func_Var_3 = get HEALTH;
	if( Func_Var_3 <= 60 )
	{
		if( Static_Var_4 == 0 )
		{
			Static_Var_4 = 1;
			hide p;
			explode p type FALL | SHATTER | SMOKE | BITMAP2;
		}
	}
	if( Func_Var_3 <= 50 )
	{
		if( Static_Var_5 == 0 )
		{
			Static_Var_5 = 1;
			hide p;
			explode p type FALL | SHATTER | SMOKE | BITMAP2;
		}
	}
	if( Func_Var_3 <= 35 )
	{
		if( Static_Var_6 == 0 )
		{
			Static_Var_6 = 1;
			hide p;
			explode p type FALL | SHATTER | SMOKE | BITMAP2;
		}
	}
}
#include "SmokeUnit.h"

Go()
{
	glowing=1;
	spin rotor around y-axis speed Static_Var_1 accelerate Static_Var_2;
		start-script Glow();
}

Stop()
{
	glowing=0;
	stop-spin rotor around x-axis decelerate Static_Var_3;
}
#define ACTIVATECMD			call-script Go();
#define DEACTIVATECMD		call-script Stop();
#include "StateChg.h"

Create()
{
	Static_Var_1 = 0;
	Static_Var_2 = 45;
	Static_Var_3 = 182;
	dont-shade rotor;
	dont-cache rotor;
	dont-shade lights;
	call-script InitState();
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 500;
	}
	start-script SmokeUnit();
		start-script Glow();
}

Activate()
{
	start-script RequestState(0);
	signal SIG_ACTIVATE;
	set-signal-mask SIG_ACTIVATE;
}

Deactivate()
{
	start-script RequestState(1);
	signal SIG_ACTIVATE;
}

SweetSpot(piecenum)
{
	piecenum = base;
}

SetSpeed(Func_Var_1)
{
	Static_Var_1 = Func_Var_1 * 20;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode rotor type BITMAPONLY | BITMAP1;
		explode body type BITMAPONLY | BITMAP2;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode rotor type SHATTER | BITMAP1;
		explode body type BITMAPONLY | BITMAP2;
		return (0);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode body type SHATTER | EXPLODE_ON_HIT | BITMAP1;
		explode rotor type BITMAPONLY | BITMAP2;
		return (0);
	}
	corpsetype = 3;
	explode body type SHATTER | EXPLODE_ON_HIT | BITMAP2;
	explode rotor type SHATTER | EXPLODE_ON_HIT | BITMAP2;
}
