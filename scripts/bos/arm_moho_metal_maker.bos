#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base2, lid2, lid3, mmakercore, lid1, lid4, glowingthing, glow;

static-var  Static_Var_1, Static_Var_2;

#define SMOKEPIECE1 base2


activatescr()
{
	Static_Var_2 = 1;
	turn lid2 to x-axis <30.390110> speed <38.593407>;
	turn lid3 to x-axis <-26.791209> speed <35.500000>;
	turn mmakercore to y-axis <-30.390110> speed <39.390110>;
	sleep 772;
	move mmakercore to y-axis [5.000000] speed [15.800000];
	turn lid1 to x-axis <35.291209> speed <45.593407>;
	turn lid4 to x-axis <-30.390110> speed <39.291209>;
	turn lid2 to x-axis <60.791209> speed <39.291209>;
	turn lid3 to x-axis <-74.192308> speed <61.291209>;
	turn mmakercore to y-axis <-60.791209> speed <39.291209>;
	sleep 774;
	set ARMORED to 0;
	move mmakercore to y-axis [15.800000] speed [13.900000];
	turn mmakercore to y-axis <-90.000000> speed <37.692308>;
	sleep 775;
	wait-for-turn lid1 around x-axis;
	wait-for-turn lid2 around x-axis;
	wait-for-turn lid3 around x-axis;
	wait-for-turn lid4 around x-axis;
	wait-for-move mmakercore along y-axis;
	wait-for-turn mmakercore around y-axis;
	Static_Var_1 = 1;
	set ACTIVATION to 1;
}

deactivatescr()
{
	set ACTIVATION to 0;
	Static_Var_2 = 0;
	Static_Var_1 = 0;
	move mmakercore to y-axis [5.000000] speed [15.800000];
	turn mmakercore to y-axis <-60.791209> speed <42.692308>;
	sleep 683;
	move mmakercore to y-axis [0.000000] speed [7.400000];
	turn lid1 to x-axis <0.000000> speed <51.390110>;
	turn lid4 to x-axis <0.000000> speed <44.291209>;
	turn lid2 to x-axis <30.390110> speed <44.291209>;
	turn lid3 to x-axis <-26.791209> speed <69.093407>;
	turn mmakercore to y-axis <-30.390110> speed <44.291209>;
	set ARMORED to 1;
	sleep 687;
	turn lid2 to x-axis <0.593407> speed <43.593407>;
	turn lid3 to x-axis <0.593407> speed <40.000000>;
	turn mmakercore to y-axis <0.000000> speed <44.500000>;
	sleep 684;
}

Activate()
{
	call-script activatescr();
}

Deactivate()
{
	call-script deactivatescr();
}

MMStatus(Func_Var_1)
{
	Static_Var_2 = Func_Var_1;
}

ImAMetalMaker()
{
	Static_Var_1 = -1;
	while( TRUE )
	{
		if( Static_Var_2 == 1 )
		{
			if( Static_Var_1 != 1 )
			{
				call-script activatescr();
			}
		}
		else if( Static_Var_1 != 0 )
		{
			call-script deactivatescr();
		}
		sleep 1000;
	}
}

Standby()
{
	while( TRUE )
	{
		if (Static_Var_1 == 1)
		{
		emit-sfx 1025 from glow;
		sleep 200;
		emit-sfx 1025 from glow;
		sleep 200;
		emit-sfx 1026 from glow;
		}
		sleep 200;
	}
}

#include "SmokeUnit.h"

Create()
{
	set ARMORED to 0;
	set ACTIVATION to 0;
	Static_Var_2 = 0;
	start-script SmokeUnit();
	start-script Standby();
	hide glow;
}

SweetSpot(piecenum)
{
	piecenum = base2;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode base2 type BITMAPONLY | BITMAP1;
		explode glowingthing type BITMAPONLY | BITMAP2;
		explode lid1 type BITMAPONLY | BITMAP3;
		explode lid2 type BITMAPONLY | BITMAP4;
		explode lid3 type BITMAPONLY | BITMAP5;
		explode lid4 type BITMAPONLY | BITMAP1;
		explode mmakercore type BITMAPONLY | BITMAP2;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode base2 type BITMAPONLY | BITMAP1;
		explode glowingthing type SHATTER | BITMAP2;
		explode lid1 type FALL | BITMAP3;
		explode lid2 type FALL | BITMAP4;
		explode lid3 type FALL | BITMAP5;
		explode lid4 type FALL | BITMAP1;
		explode mmakercore type BITMAPONLY | BITMAP2;
		return (0);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode base2 type BITMAPONLY | BITMAP1;
		explode glowingthing type SHATTER | BITMAP2;
		explode lid1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode lid2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode lid3 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
		explode lid4 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode mmakercore type BITMAPONLY | BITMAP2;
		return (0);
	}
	corpsetype = 3;
	explode base2 type BITMAPONLY | BITMAP1;
	explode glowingthing type SHATTER | EXPLODE_ON_HIT | BITMAP2;
	explode lid1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode lid2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode lid3 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
	explode lid4 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode mmakercore type BITMAPONLY | BITMAP2;
}
