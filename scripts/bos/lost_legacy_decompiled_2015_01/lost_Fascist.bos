#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, body, turret, flare1, flare2, aimpoint;

static-var  gun_1;

// Signal definitions
#define SIG_AIM				2

#define SMOKEPIECE1 turret

#include "SmokeUnit.h"

Create()
{
	hide flare2;
	hide flare1;
	dont-shade body;
	dont-shade turret;
	dont-cache flare1;
	dont-cache flare2;
	gun_1 = body;
	start-script SmokeUnit();
}

AimPrimary(heading, pitch)
{
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	turn turret to y-axis heading speed <180.000000>;
	wait-for-turn turret around y-axis;
	return (1);
}

FirePrimary()
{
	++gun_1;
	if( gun_1 >= 3 )
	{
		gun_1 = body;
	}
}

QueryPrimary(piecenum)
{
	if( gun_1 == 1 )
	{
		piecenum = flare1;
	}
	if( gun_1 == 2 )
	{
		piecenum = flare2;
	}
}

AimFromPrimary(piecenum)
{
	piecenum = aimpoint;
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode turret type BITMAPONLY | BITMAP3;
		explode body type BITMAPONLY | BITMAP1;
		explode base type BITMAPONLY | BITMAP2;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode turret type SHATTER | BITMAP3;
		explode body type FALL | BITMAP5;
		return (0);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode body type SHATTER | BITMAP2;
		explode turret type SHATTER | BITMAP3;
		explode flare1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
		explode flare2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		return (0);
	}
	corpsetype = 3;
	explode body type SHATTER | BITMAP5;
	explode turret type SHATTER | BITMAP3;
	explode flare1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
	explode flare2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
}
