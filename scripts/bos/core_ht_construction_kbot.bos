#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, spray, body, turret, feetparent, FLFoot, FRFoot, RLFoot,
       RRFoot, rightchunk, leftchunk, arm, nano, door, hips, knobs;

static-var  statechg_DesiredState, statechg_StateChanging, bMoving, Static_Var_4, Static_Var_5,
            Static_Var_6, Static_Var_7, moveSpeed, currentSpeed;


UnitSpeed()
{
	while(TRUE)
	{
		currentSpeed = (get CURRENT_SPEED)*100/moveSpeed;
		if (currentSpeed<20) currentSpeed=20;
		sleep 142;
	}
}
walk()
{
	if( TRUE )
	{
		move feetparent to z-axis [-0.900000] now;
		move FLFoot to x-axis [-0.900000] now;
		move FLFoot to y-axis [0.400000] now;
		move FLFoot to z-axis [0.000000] now;
		move FLFoot to z-axis [-0.400000] speed [2.400000];
		move FRFoot to x-axis [0.900000] now;
		move FRFoot to y-axis [0.400000] now;
		move FRFoot to z-axis [2.300000] now;
		move FRFoot to z-axis [3.500000] speed [7.600000];
		move RLFoot to x-axis [-0.900000] now;
		move RLFoot to y-axis [0.400000] now;
		move RLFoot to z-axis [-0.700000] now;
		move RLFoot to z-axis [-1.300000] speed [4.000000];
		move RRFoot to x-axis [0.900000] now;
		move RRFoot to y-axis [0.400000] now;
		move RRFoot to z-axis [-1.400000] now;
		move RRFoot to z-axis [-1.700000] speed [2.100000];
		move body to y-axis [1.300000] now;
		move body to z-axis [-0.300000] now;
		move rightchunk to x-axis [0.600000] now;
		move rightchunk to y-axis [1.300000] now;
		move rightchunk to z-axis [-0.300000] now;
		move leftchunk to x-axis [-0.600000] now;
		move leftchunk to y-axis [1.300000] now;
		move leftchunk to z-axis [-0.300000] now;
		move turret to x-axis [0.000000] now;
		move turret to y-axis [0.400000] now;
		move turret to z-axis [-0.100000] now;
		turn hips to y-axis <-1.500000> now;
		turn hips to y-axis <3.796703> speed <32.395604>;
		turn FRFoot to x-axis <-17.895604> now;
		turn FRFoot to x-axis <-14.796703> speed <18.500000>;
		turn rightchunk to x-axis <-8.000000> now;
		turn rightchunk to x-axis <-11.395604> speed <20.796703>;
		turn turret to y-axis <0.000000> now;
		turn turret to y-axis <-6.500000> speed <39.395604>;
		sleep 100 / currentSpeed;
	}
	if( TRUE )
	{
		move FLFoot to z-axis [1.500000] speed [11.200000];
		move FRFoot to z-axis [3.500000] speed [0.300000];
		move RLFoot to z-axis [-1.600000] speed [1.800000];
		move RRFoot to z-axis [-1.600000] speed [0.600000];
		turn hips to y-axis <2.296703> speed <9.197802>;
		turn FLFoot to x-axis <-12.895604> speed <78.296703>;
		turn FRFoot to x-axis <0.796703> speed <94.395604>;
		turn RRFoot to x-axis <9.895604> speed <59.895604>;
		turn body to x-axis <9.500000> speed <57.500000>;
		turn rightchunk to x-axis <-0.395604> speed <66.796703>;
		turn leftchunk to x-axis <-5.697802> speed <34.500000>;
		turn turret to y-axis <-4.598901> speed <11.500000>;
		sleep 100 / currentSpeed;
	}
	if( TRUE )
	{
		move FLFoot to z-axis [2.800000] speed [8.100000];
		move FRFoot to z-axis [2.500000] speed [5.700000];
		move RLFoot to z-axis [-2.100000] speed [2.700000];
		move RRFoot to z-axis [-1.600000] speed [0.300000];
		turn hips to y-axis <-1.895604> speed <25.197802>;
		turn FLFoot to x-axis <-30.395604> speed <105.296703>;
		turn RRFoot to x-axis <15.598901> speed <34.296703>;
		turn body to x-axis <14.395604> speed <29.697802>;
		turn rightchunk to x-axis <8.000000> speed <50.296703>;
		turn leftchunk to x-axis <-11.395604> speed <34.296703>;
		turn turret to y-axis <2.296703> speed <41.197802>;
		sleep 100 / currentSpeed;
	}
	if( TRUE )
	{
		move FRFoot to z-axis [2.300000] speed [1.200000];
		move RLFoot to z-axis [-2.500000] speed [2.400000];
		move RRFoot to z-axis [-0.600000] speed [6.100000];
		turn hips to y-axis <-2.296703> speed <2.296703>;
		turn FLFoot to x-axis <-19.000000> speed <69.098901>;
		turn RRFoot to x-axis <19.697802> speed <25.296703>;
		turn body to x-axis <2.296703> speed <73.697802>;
		turn rightchunk to x-axis <1.895604> speed <36.796703>;
		turn leftchunk to x-axis <-6.796703> speed <27.598901>;
		turn turret to y-axis <3.000000> speed <4.598901>;
		sleep 100 / currentSpeed;
	}
	if( TRUE )
	{
		move FRFoot to z-axis [1.700000] speed [3.600000];
		move RLFoot to z-axis [-3.200000] speed [4.500000];
		move RRFoot to z-axis [0.600000] speed [7.200000];
		turn hips to y-axis <-1.500000> speed <4.598901>;
		turn FLFoot to x-axis <-0.796703> speed <109.796703>;
		turn RRFoot to x-axis <7.598901> speed <73.197802>;
		turn body to x-axis <0.000000> speed <13.697802>;
		turn leftchunk to x-axis <0.000000> speed <41.197802>;
		turn turret to y-axis <1.098901> speed <11.395604>;
		sleep 100 / currentSpeed;
	}
	if( TRUE )
	{
		move FLFoot to z-axis [2.000000] speed [5.200000];
		move FRFoot to z-axis [0.700000] speed [6.400000];
		move RRFoot to z-axis [0.300000] speed [2.100000];
		turn hips to y-axis <0.000000> speed <9.296703>;
		turn FLFoot to x-axis <0.000000> speed <4.598901>;
		turn RLFoot to x-axis <22.395604> speed <136.598901>;
		turn RRFoot to x-axis <0.796703> speed <41.697802>;
		turn body to x-axis <-2.296703> speed <13.895604>;
		turn leftchunk to x-axis <9.098901> speed <55.598901>;
		turn turret to y-axis <0.000000> speed <6.895604>;
		sleep 100 / currentSpeed;
	}
	if( TRUE )
	{
		move FLFoot to z-axis [1.500000] speed [2.700000];
		move FRFoot to z-axis [0.100000] speed [3.600000];
		move RLFoot to z-axis [-1.800000] speed [8.700000];
		move RRFoot to z-axis [-0.200000] speed [2.700000];
		turn hips to y-axis <1.098901> speed <6.895604>;
		turn RLFoot to x-axis <28.895604> speed <38.895604>;
		turn body to x-axis <-1.098901> speed <6.895604>;
		turn leftchunk to x-axis <10.296703> speed <6.895604>;
		sleep 100 / currentSpeed;
	}
	if( TRUE )
	{
		move FLFoot to z-axis [1.000000] speed [3.300000];
		move FRFoot to z-axis [-0.300000] speed [2.100000];
		move RLFoot to z-axis [-0.500000] speed [7.600000];
		move RRFoot to z-axis [-0.700000] speed [3.300000];
		turn hips to y-axis <-1.500000> speed <16.098901>;
		turn RLFoot to x-axis <10.296703> speed <112.796703>;
		turn body to x-axis <0.000000> speed <6.895604>;
		turn leftchunk to x-axis <2.697802> speed <46.000000>;
		sleep 100 / currentSpeed;
	}
	if( TRUE )
	{
		move FLFoot to z-axis [0.800000] speed [0.900000];
		move FRFoot to z-axis [0.000000] speed [1.800000];
		move RLFoot to z-axis [0.400000] speed [5.400000];
		move RRFoot to z-axis [-0.900000] speed [1.200000];
		turn hips to y-axis <-1.895604> speed <2.296703>;
		turn FRFoot to x-axis <-10.296703> speed <66.395604>;
		turn RLFoot to x-axis <-0.395604> speed <64.098901>;
		turn rightchunk to x-axis <-1.098901> speed <18.296703>;
		turn leftchunk to x-axis <-2.697802> speed <32.000000>;
		sleep 100 / currentSpeed;
	}
	if( TRUE )
	{
		move FLFoot to z-axis [0.400000] speed [2.700000];
		move FRFoot to z-axis [1.200000] speed [7.300000];
		move RLFoot to z-axis [-0.400000] speed [4.800000];
		move RRFoot to z-axis [-1.400000] speed [2.700000];
		turn hips to y-axis <-2.296703> speed <2.296703>;
		turn FRFoot to x-axis <-12.500000> speed <13.796703>;
		turn rightchunk to x-axis <-4.197802> speed <18.395604>;
		sleep 100 / currentSpeed;
	}
	sleep 166;
}

walklegs()
{
	if( TRUE )
	{
		move feetparent to z-axis [-0.900000] now;
		move FLFoot to x-axis [-0.900000] now;
		move FLFoot to y-axis [0.400000] now;
		move FLFoot to z-axis [0.000000] now;
		move FLFoot to z-axis [-0.400000] speed [2.400000];
		move FRFoot to x-axis [0.900000] now;
		move FRFoot to y-axis [0.400000] now;
		move FRFoot to z-axis [2.300000] now;
		move FRFoot to z-axis [3.500000] speed [7.600000];
		move RLFoot to x-axis [-0.900000] now;
		move RLFoot to y-axis [0.400000] now;
		move RLFoot to z-axis [-0.700000] now;
		move RLFoot to z-axis [-1.300000] speed [4.000000];
		move RRFoot to x-axis [0.900000] now;
		move RRFoot to y-axis [0.400000] now;
		move RRFoot to z-axis [-1.400000] now;
		move RRFoot to z-axis [-1.700000] speed [2.100000];
		move body to y-axis [1.300000] now;
		move body to z-axis [-0.300000] now;
		move rightchunk to x-axis [0.600000] now;
		move rightchunk to y-axis [1.300000] now;
		move rightchunk to z-axis [-0.300000] now;
		move leftchunk to x-axis [-0.600000] now;
		move leftchunk to y-axis [1.300000] now;
		move leftchunk to z-axis [-0.300000] now;
		move turret to x-axis [0.000000] now;
		move turret to y-axis [0.400000] now;
		move turret to z-axis [-0.100000] now;
		turn FRFoot to x-axis <-17.895604> now;
		turn FRFoot to x-axis <-14.796703> speed <18.500000>;
		turn rightchunk to x-axis <-8.000000> now;
		turn rightchunk to x-axis <-11.395604> speed <20.796703>;
		sleep 100 / currentSpeed;
	}
	if( TRUE )
	{
		move FLFoot to z-axis [1.500000] speed [11.200000];
		move FRFoot to z-axis [3.500000] speed [0.300000];
		move RLFoot to z-axis [-1.600000] speed [1.800000];
		move RRFoot to z-axis [-1.600000] speed [0.600000];
		turn FLFoot to x-axis <-12.895604> speed <78.296703>;
		turn FRFoot to x-axis <0.796703> speed <94.395604>;
		turn RRFoot to x-axis <9.895604> speed <59.895604>;
		turn rightchunk to x-axis <-0.395604> speed <66.796703>;
		turn leftchunk to x-axis <-5.697802> speed <34.500000>;
		sleep 100 / currentSpeed;
	}
	if( TRUE )
	{
		move FLFoot to z-axis [2.800000] speed [8.100000];
		move FRFoot to z-axis [2.500000] speed [5.700000];
		move RLFoot to z-axis [-2.100000] speed [2.700000];
		move RRFoot to z-axis [-1.600000] speed [0.300000];
		turn FLFoot to x-axis <-30.395604> speed <105.296703>;
		turn RRFoot to x-axis <15.598901> speed <34.296703>;
		turn rightchunk to x-axis <8.000000> speed <50.296703>;
		turn leftchunk to x-axis <-11.395604> speed <34.296703>;
		sleep 100 / currentSpeed;
	}
	if( TRUE )
	{
		move FRFoot to z-axis [2.300000] speed [1.200000];
		move RLFoot to z-axis [-2.500000] speed [2.400000];
		move RRFoot to z-axis [-0.600000] speed [6.100000];
		turn FLFoot to x-axis <-19.000000> speed <69.098901>;
		turn RRFoot to x-axis <19.697802> speed <25.296703>;
		turn rightchunk to x-axis <1.895604> speed <36.796703>;
		turn leftchunk to x-axis <-6.796703> speed <27.598901>;
		sleep 100 / currentSpeed;
	}
	if( TRUE )
	{
		move FRFoot to z-axis [1.700000] speed [3.600000];
		move RLFoot to z-axis [-3.200000] speed [4.500000];
		move RRFoot to z-axis [0.600000] speed [7.200000];
		turn FLFoot to x-axis <-0.796703> speed <109.796703>;
		turn RRFoot to x-axis <7.598901> speed <73.197802>;
		turn leftchunk to x-axis <0.000000> speed <41.197802>;
		sleep 100 / currentSpeed;
	}
	if( TRUE )
	{
		move FLFoot to z-axis [2.000000] speed [5.200000];
		move FRFoot to z-axis [0.700000] speed [6.400000];
		move RRFoot to z-axis [0.300000] speed [2.100000];
		turn FLFoot to x-axis <0.000000> speed <4.598901>;
		turn RLFoot to x-axis <22.395604> speed <136.598901>;
		turn RRFoot to x-axis <0.796703> speed <41.697802>;
		turn leftchunk to x-axis <9.098901> speed <55.598901>;
		sleep 100 / currentSpeed;
	}
	if( TRUE )
	{
		move FLFoot to z-axis [1.500000] speed [2.700000];
		move FRFoot to z-axis [0.100000] speed [3.600000];
		move RLFoot to z-axis [-1.800000] speed [8.700000];
		move RRFoot to z-axis [-0.200000] speed [2.700000];
		turn RLFoot to x-axis <28.895604> speed <38.895604>;
		turn leftchunk to x-axis <10.296703> speed <6.895604>;
		sleep 100 / currentSpeed;
	}
	if( TRUE )
	{
		move FLFoot to z-axis [1.000000] speed [3.300000];
		move FRFoot to z-axis [-0.300000] speed [2.100000];
		move RLFoot to z-axis [-0.500000] speed [7.600000];
		move RRFoot to z-axis [-0.700000] speed [3.300000];
		turn RLFoot to x-axis <10.296703> speed <112.796703>;
		turn leftchunk to x-axis <2.697802> speed <46.000000>;
		sleep 100 / currentSpeed;
	}
	if( TRUE )
	{
		move FLFoot to z-axis [0.800000] speed [0.900000];
		move FRFoot to z-axis [0.000000] speed [1.800000];
		move RLFoot to z-axis [0.400000] speed [5.400000];
		move RRFoot to z-axis [-0.900000] speed [1.200000];
		turn FRFoot to x-axis <-10.296703> speed <66.395604>;
		turn RLFoot to x-axis <-0.395604> speed <64.098901>;
		turn rightchunk to x-axis <-1.098901> speed <18.296703>;
		turn leftchunk to x-axis <-2.697802> speed <32.000000>;
		sleep 100 / currentSpeed;
	}
	if( TRUE )
	{
		move FLFoot to z-axis [0.400000] speed [2.700000];
		move FRFoot to z-axis [1.200000] speed [7.300000];
		move RLFoot to z-axis [-0.400000] speed [4.800000];
		move RRFoot to z-axis [-1.400000] speed [2.700000];
		turn FRFoot to x-axis <-12.500000> speed <13.796703>;
		turn rightchunk to x-axis <-4.197802> speed <18.395604>;
		sleep 100 / currentSpeed;
	}
	sleep 100 / currentSpeed;
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from body;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

MotionControl(moving, aiming, justmoved)
{
	justmoved = TRUE;
	while( TRUE )
	{
		moving = bMoving;
		aiming = Static_Var_4;
		if( moving )
		{
			if( aiming )
			{
				Static_Var_5 = 1;
				call-script walklegs();
			}
			if( !aiming )
			{
				Static_Var_5 = 0;
				call-script walk();
			}
			justmoved = TRUE;
		}
		if( !moving )
		{
			Static_Var_5 = 1;
			if( justmoved )
			{
				turn rightchunk to x-axis <0.000000> speed <150.000000>;
				turn RRFoot to x-axis <0.000000> speed <150.000000>;
				turn FRFoot to x-axis <0.000000> speed <150.000000>;
				turn leftchunk to x-axis <0.000000> speed <150.000000>;
				turn RLFoot to x-axis <0.000000> speed <150.000000>;
				turn FLFoot to x-axis <0.000000> speed <150.000000>;
				justmoved = FALSE;
			}
			sleep 100;
		}
	}
}

open()
{
	turn door to x-axis <165.000000> speed <250.000000>;
	wait-for-turn door around x-axis;
	turn arm to x-axis <55.000000> speed <150.000000>;
	turn nano to x-axis <-55.000000> speed <150.000000>;
	wait-for-turn nano around x-axis;
}

close()
{
	turn arm to x-axis <0.000000> speed <150.000000>;
	turn nano to x-axis <0.000000> speed <150.000000>;
	wait-for-turn nano around x-axis;
	turn door to x-axis <0.000000> speed <190.000000>;
	wait-for-turn door around x-axis;
}

Go()
{
	Static_Var_4 = 1;
	call-script open();
	turn turret to y-axis Static_Var_6 speed <160.000000>;
	wait-for-turn turret around y-axis;
	set INBUILDSTANCE to 1;
}

Stop()
{
	set INBUILDSTANCE to 0;
	turn turret to y-axis <0.000000> speed <160.000000>;
	wait-for-turn turret around y-axis;
	call-script close();
	Static_Var_4 = 0;
}

InitState()
{
	statechg_DesiredState = TRUE;
	statechg_StateChanging = FALSE;
}

RequestState(requestedstate, currentstate)
{
	if( statechg_StateChanging )
	{
		statechg_DesiredState = requestedstate;
		return (0);
	}
	statechg_StateChanging = TRUE;
	currentstate = statechg_DesiredState;
	statechg_DesiredState = requestedstate;
	while( statechg_DesiredState != currentstate )
	{
		if( statechg_DesiredState == 0 )
		{
			call-script Go();
			currentstate = 0;
		}
		if( statechg_DesiredState == 1 )
		{
			call-script Stop();
			currentstate = 1;
		}
	}
	statechg_StateChanging = FALSE;
}

Create()
{
	bMoving = FALSE;
	Static_Var_4 = 0;
	Static_Var_7 = 1;
	Static_Var_6 = 0;
	call-script InitState();
	start-script SmokeUnit();
	start-script MotionControl();
	moveSpeed = get MAX_SPEED;
	currentSpeed = 100;
}

Activate()
{
	start-script RequestState(0);
}

Deactivate()
{
	start-script RequestState(1);
}

StartBuilding(Func_Var_1)
{
	Static_Var_6 = Func_Var_1;
	start-script RequestState(0);
}

StopBuilding()
{
	start-script RequestState(1);
}

StartMoving()
{
	bMoving = TRUE;
}

StopMoving()
{
	bMoving = FALSE;
}

QueryNanoPiece(piecenum)
{
	piecenum = spray;
}

TargetHeading(Func_Var_1)
{
	Static_Var_6 = 0 - Func_Var_1;
}

SweetSpot(piecenum)
{
	piecenum = turret;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode body type BITMAPONLY | BITMAP1;
		explode FLFoot type BITMAPONLY | BITMAP1;
		explode FRFoot type BITMAPONLY | BITMAP2;
		explode knobs type BITMAPONLY | BITMAP3;
		explode leftchunk type BITMAPONLY | BITMAP5;
		explode rightchunk type BITMAPONLY | BITMAP1;
		explode RLFoot type BITMAPONLY | BITMAP2;
		explode RRFoot type BITMAPONLY | BITMAP3;
		explode turret type BITMAPONLY | BITMAP4;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode body type BITMAPONLY | BITMAP1;
		explode FLFoot type BITMAPONLY | BITMAP1;
		explode FRFoot type BITMAPONLY | BITMAP2;
		explode knobs type FALL | BITMAP3;
		explode leftchunk type BITMAPONLY | BITMAP5;
		explode rightchunk type BITMAPONLY | BITMAP1;
		explode RLFoot type BITMAPONLY | BITMAP2;
		explode RRFoot type BITMAPONLY | BITMAP3;
		explode turret type FALL | BITMAP4;
		return (0);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode body type SHATTER | BITMAP1;
		explode FLFoot type BITMAPONLY | BITMAP1;
		explode FRFoot type BITMAPONLY | BITMAP2;
		explode knobs type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode leftchunk type BITMAPONLY | BITMAP5;
		explode rightchunk type BITMAPONLY | BITMAP1;
		explode RLFoot type BITMAPONLY | BITMAP2;
		explode RRFoot type BITMAPONLY | BITMAP3;
		explode turret type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		return (0);
	}
	corpsetype = 3;
	explode body type SHATTER | EXPLODE_ON_HIT | BITMAP1;
	explode FLFoot type BITMAPONLY | BITMAP1;
	explode FRFoot type BITMAPONLY | BITMAP2;
	explode knobs type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode leftchunk type BITMAPONLY | BITMAP5;
	explode rightchunk type BITMAPONLY | BITMAP1;
	explode RLFoot type BITMAPONLY | BITMAP2;
	explode RRFoot type BITMAPONLY | BITMAP3;
	explode turret type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
}
