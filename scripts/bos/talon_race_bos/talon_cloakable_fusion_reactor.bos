#define TA			// This is a TA script
#include "sfxtype.h"
#include "exptype.h"

piece  crystal, base, towers, pillars, tubes, GP, rays1, rays2, trueglow, flareglow;

static-var shared, CloakGlow;

CloakControl()
{
	while( TRUE )
	{
		CloakGlow = get CLOAKED;
		if( CloakGlow == 1 ) 
			{
		show crystal;
		show rays1;
		show rays2;
	sleep 100;
			}
		else if( CloakGlow == 0 ) 
		{
		emit-sfx UNIT_SFX1 from trueglow;
		//emit-sfx UNIT_SFX1 from flareglow;
		hide crystal;
		hide rays1;
		hide rays2;
	sleep 100;
		}
	}
	sleep 100;
}
sharing()
{
	while(1)
	{
		move rays1 to y-axis [5] speed [40];
		move rays2 to y-axis [0] speed [20];
		wait-for-move rays1 along y-axis;
		move rays1 to y-axis [25] speed [40];
		move rays2 to y-axis [-10] speed [20];
		wait-for-move rays1 along y-axis;
	sleep 100;
	}
	sleep 100;
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Create()
{
	hide crystal;
	hide rays1;
	hide rays2;
	hide trueglow;
	hide flareglow;
	start-script SmokeUnit();
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 1000;
	}
	spin crystal around y-axis speed <100>;
	start-script cloakcontrol();
	start-script sharing();
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode crystal type SHATTER | BITMAP1;
		explode gp type BITMAPONLY | BITMAP2;
		explode base type BITMAPONLY | BITMAP3;
		explode towers type BITMAPONLY | BITMAP4;
		explode pillars type BITMAPONLY | BITMAP5;
		explode tubes type BITMAPONLY | BITMAP1;
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode crystal type SHATTER | EXPLODE_ON_HIT | BITMAP1;
		explode gp type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode base type BITMAPONLY | BITMAP3;
		explode towers type BITMAPONLY | BITMAP4;
		explode pillars type BITMAPONLY | BITMAP5;
		explode tubes type BITMAPONLY | BITMAP1;
		return (0);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode crystal type SHATTER | EXPLODE_ON_HIT | BITMAP1;
		explode gp type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode base type BITMAPONLY | BITMAP3;
		explode towers type BITMAPONLY | BITMAP4;
		explode pillars type BITMAPONLY | BITMAP5;
		explode tubes type BITMAPONLY | BITMAP1;
		return (0);
	}
	corpsetype = 3;
	explode crystal type SHATTER | EXPLODE_ON_HIT | BITMAP1;
	explode gp type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode base type BITMAPONLY | BITMAP3;
	explode towers type BITMAPONLY | BITMAP4;
	explode pillars type BITMAPONLY | BITMAP5;
	explode tubes type BITMAPONLY | BITMAP1;
}
