#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, fire, body, turret, w1, w2, w3, w4, w5, w6, w7, w8, w9, w10, w11, w12, w13, w14, w15, w16, w17, w18, w19, w20, w21, w22, w23, w24, wakes1, wakes2, sleeve, gun, tri, aimpoint;

static-var  gun_1, restore_delay;

// Signal definitions
#define SIG_AIM				2
#define SIG_AIM_2			4
#define SIG_MOVE			8


RockOnWaves()
{
	while(1)
	{
		turn base to x-axis <1.0> speed <1.5>;
		move base to y-axis [0.0] speed [0.3];
		wait-for-turn base around x-axis;
		turn base to x-axis <-1.0> speed <1.5>;
		move base to y-axis [-0.2] speed [0.3];
		wait-for-move base along y-axis;
		move base to y-axis [0.0] speed [0.3];
		wait-for-turn base around x-axis;
		turn base to x-axis <1.0> speed <1.5>;
		move base to y-axis [-0.2] speed [0.3];
		wait-for-move base along y-axis;
	}
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from body;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Create()
{
	hide fire;
	restore_delay = 3000;
	start-script SmokeUnit();
	start-script RockOnWaves();
}

SetMaxReloadTime(Func_Var_1)
{
	restore_delay = Func_Var_1 * 2;
}

RestoreAfterDelay()
{
	sleep restore_delay;
	turn sleeve to x-axis <0.000000> speed <100.005495>;
	turn turret to y-axis <0.000000> speed <50.000000>;
}

StartMoving()
{
	signal SIG_MOVE;
	set-signal-mask SIG_MOVE;
	while( TRUE )
	{
		emit-sfx 3 from w1;
		emit-sfx 3 from w2;
		emit-sfx 3 from w3;
		emit-sfx 3 from w4;
		emit-sfx 3 from w5;
		emit-sfx 3 from w6;
		emit-sfx 3 from w7;
		emit-sfx 3 from w8;
		emit-sfx 3 from w9;
		emit-sfx 3 from w10;
		emit-sfx 3 from w11;
		emit-sfx 3 from w12;
		emit-sfx 3 from w13;
		emit-sfx 3 from w14;
		emit-sfx 3 from w15;
		emit-sfx 3 from w16;
		emit-sfx 3 from w17;
		emit-sfx 3 from w18;
		emit-sfx 3 from w19;
		emit-sfx 3 from w20;
		emit-sfx 3 from w21;
		emit-sfx 3 from w22;
		emit-sfx 3 from w23;
		emit-sfx 3 from w24;
		emit-sfx 5 from w1;
		emit-sfx 5 from w2;
		emit-sfx 5 from w3;
		emit-sfx 5 from w4;
		emit-sfx 5 from w5;
		emit-sfx 5 from w6;
		emit-sfx 5 from w7;
		emit-sfx 5 from w8;
		emit-sfx 5 from w9;
		emit-sfx 5 from w10;
		emit-sfx 5 from w11;
		emit-sfx 5 from w12;
		emit-sfx 5 from w13;
		emit-sfx 5 from w14;
		emit-sfx 5 from w15;
		emit-sfx 5 from w16;
		emit-sfx 5 from w17;
		emit-sfx 5 from w18;
		emit-sfx 5 from w19;
		emit-sfx 5 from w20;
		emit-sfx 5 from w21;
		emit-sfx 5 from w22;
		emit-sfx 5 from w23;
		emit-sfx 5 from w24;
		sleep 200;
	}
}

StopMoving()
{
	signal SIG_MOVE;
}

AimPrimary(heading, pitch)
{
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	turn turret to y-axis heading speed <120.016484>;
	turn sleeve to x-axis <0.000000> - pitch speed <80.005495>;
	wait-for-turn turret around y-axis;
	wait-for-turn sleeve around x-axis;
	start-script RestoreAfterDelay();
	return (1);
}

FirePrimary()
{
	emit-sfx UNIT_SFX1 from fire;
	explode fire type BITMAPONLY | BITMAP5;
	move gun to z-axis [-2.600000] now;
	move gun to z-axis [0.000000] speed [5.000000];
	show fire;
	sleep 150;
	hide fire;
	sleep 350;
}

AimFromPrimary(piecenum)
{
	piecenum = aimpoint;
}

QueryPrimary(piecenum)
{
	piecenum = fire;
}

SweetSpot(piecenum)
{
	piecenum = body;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode body type BITMAPONLY | BITMAP3;
		explode fire type BITMAPONLY | BITMAP4;
		explode gun type BITMAPONLY | BITMAP5;
		explode turret type BITMAPONLY | BITMAP1;
		explode tri type SHATTER | BITMAP1;
		explode w1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode w2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode w3 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode w4 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode w5 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode w6 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode w7 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode w8 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode w9 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode w10 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode w11 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode w12 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode w13 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode w14 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode w15 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode w16 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode w17 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode w18 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode w19 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode w20 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode w21 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode w22 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode w23 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode w24 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode body type BITMAPONLY | BITMAP3;
		explode fire type BITMAPONLY | BITMAP4;
		explode gun type BITMAPONLY | BITMAP5;
		explode turret type BITMAPONLY | BITMAP1;
		explode tri type SHATTER | BITMAP1;
		explode w1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode w2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode w3 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode w4 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode w5 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode w6 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode w7 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode w8 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode w9 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode w10 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode w11 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode w12 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode w13 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode w14 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode w15 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode w16 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode w17 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode w18 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode w19 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode w20 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode w21 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode w22 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode w23 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode w24 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		return (0);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode body type BITMAPONLY | BITMAP3;
		explode fire type BITMAPONLY | BITMAP4;
		explode gun type BITMAPONLY | BITMAP5;
		explode turret type BITMAPONLY | BITMAP1;
		explode tri type SHATTER | BITMAP1;
		explode w1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode w2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode w3 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode w4 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode w5 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode w6 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode w7 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode w8 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode w9 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode w10 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode w11 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode w12 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode w13 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode w14 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode w15 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode w16 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode w17 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode w18 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode w19 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode w20 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode w21 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode w22 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode w23 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode w24 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		return (0);
	}
	corpsetype = 3;
	explode body type BITMAPONLY | BITMAP3;
	explode fire type BITMAPONLY | BITMAP4;
	explode gun type BITMAPONLY | BITMAP5;
	explode turret type BITMAPONLY | BITMAP1;
	explode tri type SHATTER | BITMAP1;
	explode w1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode w2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode w3 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode w4 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode w5 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode w6 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode w7 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode w8 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode w9 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode w10 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode w11 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode w12 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode w13 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode w14 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode w15 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode w16 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode w17 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode w18 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode w19 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode w20 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode w21 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode w22 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode w23 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode w24 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
}
