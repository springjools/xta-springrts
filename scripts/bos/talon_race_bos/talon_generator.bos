#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, body, beacon, glow;

static-var  statechg_DesiredState, statechg_StateChanging;

Glowstate()
{
	while( TRUE )
	{
		emit-sfx 1025 from glow;
		sleep 400;
		emit-sfx 1026 from glow;
		sleep 400;
	}
}
SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	start-script Glowstate();
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from body;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Go()
{
	dont-cache beacon;
}

Stop()
{
	cache beacon;
}

InitState()
{
	statechg_DesiredState = TRUE;
	statechg_StateChanging = FALSE;
}

RequestState(requestedstate, currentstate)
{
	if( statechg_StateChanging )
	{
		statechg_DesiredState = requestedstate;
		return (0);
	}
	statechg_StateChanging = TRUE;
	currentstate = statechg_DesiredState;
	statechg_DesiredState = requestedstate;
	while( statechg_DesiredState != currentstate )
	{
		if( statechg_DesiredState == 0 )
		{
			call-script Go();
			currentstate = 0;
		}
		if( statechg_DesiredState == 1 )
		{
			call-script Stop();
			currentstate = 1;
		}
	}
	statechg_StateChanging = FALSE;
}

Create()
{
	dont-shade beacon;
	call-script InitState();
	start-script SmokeUnit();
}

Activate()
{
	start-script RequestState(0);
}

Deactivate()
{
	start-script RequestState(1);
}

SweetSpot(piecenum)
{
	piecenum = body;
}

Killed( severity, corpsetype )
{
	if (severity <= 25)
	{
		corpsetype = 1;
		explode body type BITMAPONLY | BITMAP1;
		explode beacon type BITMAPONLY | BITMAP2;
		return (0);
	}
	if (severity <= 50)
	{
		corpsetype = 2;
		explode body type BITMAPONLY | BITMAP1;
		explode beacon type FALL | BITMAP2;
		return (0);
	}
	if (severity <= 99)
	{
		corpsetype = 3;
		explode body type SHATTER | BITMAP1;
		explode beacon type FALL | EXPLODE_ON_HIT | BITMAP2;
		return (0);
	}
	corpsetype = 3;
	explode body type SHATTER | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode beacon type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
}