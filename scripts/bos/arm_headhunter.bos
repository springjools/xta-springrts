#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  groundx2, hips, rlegmain, rfoot, llegmain, lfoot, base, torso,
       head, rshoulder, ruparm, rarm, barrels, flare, lshoulder, luparm,
       larm, rucksack, cable2, emit, emit1, aimpoint;

static-var  bMoving, bAiming, Static_Var_3, restore_delay, unitviewer, moveSpeed, currentPitch, currentHeading, currentSpeed;

// Signal definitions
#define SIG_AIM				2

#define HEADING_TOLERANCE	<50.000000>
#define PITCH_TOLERANCE		<50.000000>


SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from rucksack;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
	return (0);
	// Build by COBBLER Ver3.0 beta2 Copyright @1998 DIGITAL CONCEPT SOFTWARE (MANU@inext.fr) / http://www.netzine.ml.org/DCS   
}

walk()
{
	if( TRUE )
	{
		move hips to y-axis [0.000000] now;
		move hips to z-axis [0.000000] now;
		move torso to y-axis [0.000000] now;
		move rlegmain to y-axis [1.000000] now;
		move llegmain to y-axis [0.000000] now;
		move rfoot to y-axis [1.000000] now;
		move head to z-axis [0.000000] now;
		move luparm to x-axis [0.000000] now;
		move ruparm to x-axis [0.000000] now;
		turn rlegmain to x-axis <-19.000000> now;
		turn rfoot to x-axis <26.005495> now;
		turn rshoulder to x-axis <16.000000> now;
		turn lshoulder to x-axis <-17.000000> now;
		turn luparm to z-axis <-15.000000> now;
		turn larm to x-axis <-14.000000> now;
		turn ruparm to z-axis <15.000000> now;
		turn rarm to x-axis <-26.005495> now;
		sleep 2100 / currentSpeed;
	}
	if( TRUE )
	{
		move hips to y-axis [0.000000] now;
		move rlegmain to y-axis [0.000000] now;
		move llegmain to y-axis [0.000000] now;
		move rfoot to y-axis [0.000000] now;
		turn hips to x-axis <3.000000> now;
		turn torso to y-axis <-1.000000> now;
		turn rlegmain to x-axis <-34.005495> now;
		turn llegmain to x-axis <6.000000> now;
		turn lfoot to x-axis <-9.000000> now;
		turn rfoot to x-axis <20.000000> now;
		turn head to y-axis <2.000000> now;
		turn rshoulder to x-axis <25.005495> now;
		turn lshoulder to x-axis <-24.005495> now;
		turn luparm to z-axis <-11.000000> now;
		turn larm to x-axis <-20.000000> now;
		turn ruparm to z-axis <13.000000> now;
		turn rarm to x-axis <-38.005495> now;
		sleep 1800 / currentSpeed;
	}
	if( TRUE )
	{
		move hips to y-axis [0.000000] now;
		move rlegmain to y-axis [0.000000] now;
		move llegmain to y-axis [-1.000000] now;
		move rfoot to y-axis [0.000000] now;
		turn hips to x-axis <6.000000> now;
		turn torso to y-axis <-3.000000> now;
		turn rlegmain to x-axis <-50.010989> now;
		turn llegmain to x-axis <12.000000> now;
		turn lfoot to x-axis <-18.000000> now;
		turn rfoot to x-axis <13.000000> now;
		turn head to y-axis <4.000000> now;
		turn rshoulder to x-axis <34.005495> now;
		turn lshoulder to x-axis <-30.005495> now;
		turn luparm to z-axis <-7.000000> now;
		turn larm to x-axis <-27.005495> now;
		turn ruparm to z-axis <11.000000> now;
		turn rarm to x-axis <-51.010989> now;
		sleep 1600 / currentSpeed;
	}
	if( TRUE )
	{
		move rlegmain to y-axis [0.000000] now;
		move llegmain to y-axis [0.000000] now;
		move rfoot to y-axis [0.000000] now;
		turn hips to x-axis <8.000000> now;
		turn torso to y-axis <-5.000000> now;
		turn rlegmain to x-axis <-52.010989> now;
		turn llegmain to x-axis <17.000000> now;
		turn lfoot to x-axis <-13.000000> now;
		turn rfoot to x-axis <6.000000> now;
		turn head to y-axis <6.000000> now;
		turn rshoulder to x-axis <44.005495> now;
		turn lshoulder to x-axis <-38.005495> now;
		turn luparm to z-axis <-3.000000> now;
		turn larm to x-axis <-16.000000> now;
		turn ruparm to z-axis <10.000000> now;
		turn rarm to x-axis <-60.010989> now;
		sleep 1200 / currentSpeed;
	}
	if( TRUE )
	{
		move rlegmain to y-axis [0.000000] now;
		move llegmain to y-axis [0.000000] now;
		move rfoot to y-axis [0.000000] now;
		turn hips to x-axis <11.000000> now;
		turn torso to y-axis <-7.000000> now;
		turn rlegmain to x-axis <-53.010989> now;
		turn llegmain to x-axis <22.000000> now;
		turn lfoot to x-axis <-7.000000> now;
		turn rfoot to x-axis <0.000000> now;
		turn head to y-axis <8.000000> now;
		turn rshoulder to x-axis <54.010989> now;
		turn lshoulder to x-axis <-45.010989> now;
		turn luparm to z-axis <0.000000> now;
		turn larm to x-axis <-6.000000> now;
		turn ruparm to z-axis <9.000000> now;
		turn rarm to x-axis <-69.016484> now;
		sleep 1200 / currentSpeed;
	}
	if( TRUE )
	{
		move rlegmain to y-axis [0.000000] now;
		move llegmain to y-axis [0.000000] now;
		turn hips to x-axis <14.000000> now;
		turn torso to y-axis <-5.000000> now;
		turn rlegmain to x-axis <-53.010989> now;
		turn lfoot to x-axis <10.000000> now;
		turn rfoot to x-axis <17.000000> now;
		turn head to y-axis <6.000000> now;
		turn rshoulder to x-axis <45.010989> now;
		turn lshoulder to x-axis <-40.005495> now;
		turn luparm to z-axis <-4.000000> now;
		turn larm to x-axis <-14.000000> now;
		turn ruparm to z-axis <12.000000> now;
		sleep 1200 / currentSpeed;
	}
	if( TRUE )
	{
		move rlegmain to y-axis [0.000000] now;
		move llegmain to y-axis [0.000000] now;
		turn hips to x-axis <18.000000> now;
		turn torso to y-axis <-3.000000> now;
		turn rlegmain to x-axis <-53.010989> now;
		turn lfoot to x-axis <29.005495> now;
		turn rfoot to x-axis <35.005495> now;
		turn head to y-axis <4.000000> now;
		turn rshoulder to x-axis <35.005495> now;
		turn lshoulder to x-axis <-35.005495> now;
		turn luparm to z-axis <-9.000000> now;
		turn larm to x-axis <-22.000000> now;
		turn ruparm to z-axis <15.000000> now;
		sleep 1100 / currentSpeed;
	}
	if( TRUE )
	{
		move hips to y-axis [0.000000] now;
		move rlegmain to y-axis [0.000000] now;
		move llegmain to y-axis [0.000000] now;
		move lfoot to y-axis [0.000000] now;
		turn hips to x-axis <13.000000> now;
		turn torso to y-axis <-2.000000> now;
		turn rlegmain to x-axis <-39.005495> now;
		turn llegmain to x-axis <12.000000> now;
		turn lfoot to x-axis <28.005495> now;
		turn rfoot to x-axis <26.005495> now;
		turn head to y-axis <3.000000> now;
		turn rshoulder to x-axis <22.000000> now;
		turn lshoulder to x-axis <-22.000000> now;
		turn luparm to z-axis <-11.000000> now;
		turn larm to x-axis <-23.005495> now;
		turn ruparm to z-axis <15.000000> now;
		turn rarm to x-axis <-55.010989> now;
		sleep 1100 / currentSpeed;
	}
	if( TRUE )
	{
		move hips to y-axis [0.000000] now;
		move rlegmain to y-axis [0.000000] now;
		move llegmain to y-axis [0.000000] now;
		move lfoot to y-axis [0.000000] now;
		turn hips to x-axis <9.000000> now;
		turn torso to y-axis <-1.000000> now;
		turn rlegmain to x-axis <-26.005495> now;
		turn llegmain to x-axis <1.000000> now;
		turn lfoot to x-axis <27.005495> now;
		turn rfoot to x-axis <17.000000> now;
		turn head to y-axis <2.000000> now;
		turn rshoulder to x-axis <9.000000> now;
		turn lshoulder to x-axis <-9.000000> now;
		turn luparm to z-axis <-12.000000> now;
		turn larm to x-axis <-24.005495> now;
		turn ruparm to z-axis <15.000000> now;
		turn rarm to x-axis <-41.005495> now;
		sleep 2100 / currentSpeed;
	}
	if( TRUE )
	{
		move hips to y-axis [0.000000] now;
		move rlegmain to y-axis [0.000000] now;
		move llegmain to y-axis [0.000000] now;
		move lfoot to y-axis [0.000000] now;
		turn hips to x-axis <4.000000> now;
		turn torso to y-axis <0.000000> now;
		turn rlegmain to x-axis <-13.000000> now;
		turn llegmain to x-axis <-8.000000> now;
		turn lfoot to x-axis <27.005495> now;
		turn rfoot to x-axis <8.000000> now;
		turn head to y-axis <1.000000> now;
		turn rshoulder to x-axis <-4.000000> now;
		turn lshoulder to x-axis <3.000000> now;
		turn luparm to z-axis <-13.000000> now;
		turn larm to x-axis <-25.005495> now;
		turn ruparm to z-axis <15.000000> now;
		turn rarm to x-axis <-28.005495> now;
		sleep 2100 / currentSpeed;
	}
	if( TRUE )
	{
		move hips to y-axis [0.000000] now;
		move rlegmain to y-axis [0.000000] now;
		move llegmain to y-axis [1.000000] now;
		move lfoot to y-axis [1.000000] now;
		turn hips to x-axis <0.000000> now;
		turn torso to y-axis <0.000000> now;
		turn rlegmain to x-axis <0.000000> now;
		turn llegmain to x-axis <-19.000000> now;
		turn lfoot to x-axis <26.005495> now;
		turn rfoot to x-axis <0.000000> now;
		turn head to y-axis <0.000000> now;
		turn rshoulder to x-axis <-17.000000> now;
		turn lshoulder to x-axis <16.000000> now;
		turn luparm to z-axis <-15.000000> now;
		turn larm to x-axis <-26.005495> now;
		turn ruparm to z-axis <15.000000> now;
		turn rarm to x-axis <-14.000000> now;
		sleep 2400 / currentSpeed;
	}
	if( TRUE )
	{
		move hips to y-axis [0.000000] now;
		move rlegmain to y-axis [0.000000] now;
		move llegmain to y-axis [0.000000] now;
		move lfoot to y-axis [0.000000] now;
		turn hips to x-axis <3.000000> now;
		turn torso to y-axis <2.000000> now;
		turn rlegmain to x-axis <6.000000> now;
		turn llegmain to x-axis <-34.005495> now;
		turn lfoot to x-axis <19.000000> now;
		turn rfoot to x-axis <-9.000000> now;
		turn head to y-axis <-1.000000> now;
		turn rshoulder to x-axis <-24.005495> now;
		turn lshoulder to x-axis <25.005495> now;
		turn luparm to z-axis <-13.000000> now;
		turn larm to x-axis <-38.005495> now;
		turn ruparm to z-axis <11.000000> now;
		turn rarm to x-axis <-20.000000> now;
		sleep 1900 / currentSpeed;
	}
	if( TRUE )
	{
		move hips to y-axis [0.000000] now;
		move rlegmain to y-axis [-1.000000] now;
		move llegmain to y-axis [0.000000] now;
		move lfoot to y-axis [0.000000] now;
		turn hips to x-axis <6.000000> now;
		turn torso to y-axis <4.000000> now;
		turn rlegmain to x-axis <12.000000> now;
		turn llegmain to x-axis <-50.010989> now;
		turn lfoot to x-axis <13.000000> now;
		turn rfoot to x-axis <-18.000000> now;
		turn head to y-axis <-3.000000> now;
		turn rshoulder to x-axis <-30.005495> now;
		turn lshoulder to x-axis <34.005495> now;
		turn luparm to z-axis <-11.000000> now;
		turn larm to x-axis <-51.010989> now;
		turn ruparm to z-axis <7.000000> now;
		turn rarm to x-axis <-27.005495> now;
		sleep 1700 / currentSpeed;
	}
	if( TRUE )
	{
		move rlegmain to y-axis [0.000000] now;
		move llegmain to y-axis [0.000000] - [0.000031] now;
		move lfoot to y-axis [0.000000] now;
		turn hips to x-axis <8.000000> now;
		turn torso to y-axis <6.000000> now;
		turn rlegmain to x-axis <17.000000> now;
		turn llegmain to x-axis <-51.010989> now;
		turn lfoot to x-axis <6.000000> now;
		turn rfoot to x-axis <-12.000000> now;
		turn head to y-axis <-5.000000> now;
		turn rshoulder to x-axis <-37.005495> now;
		turn lshoulder to x-axis <44.005495> now;
		turn luparm to z-axis <-10.000000> now;
		turn larm to x-axis <-60.010989> now;
		turn ruparm to z-axis <3.000000> now;
		turn rarm to x-axis <-16.000000> now;
		sleep 2100 / currentSpeed;
	}
	if( TRUE )
	{
		move rlegmain to y-axis [0.000000] now;
		move llegmain to y-axis [0.000000] now;
		move lfoot to y-axis [0.000000] now;
		turn hips to x-axis <11.000000> now;
		turn torso to y-axis <8.000000> now;
		turn rlegmain to x-axis <22.000000> now;
		turn llegmain to x-axis <-53.010989> now;
		turn lfoot to x-axis <0.000000> now;
		turn rfoot to x-axis <-7.000000> now;
		turn head to y-axis <-7.000000> now;
		turn rshoulder to x-axis <-45.010989> now;
		turn lshoulder to x-axis <54.010989> now;
		turn luparm to z-axis <-9.000000> now;
		turn larm to x-axis <-69.016484> now;
		turn ruparm to z-axis <0.000000> now;
		turn rarm to x-axis <-6.000000> now;
		sleep 2000 / currentSpeed;
	}
	if( TRUE )
	{
		move rlegmain to y-axis [0.000000] now;
		move llegmain to y-axis [0.000000] now;
		turn hips to x-axis <14.000000> now;
		turn torso to y-axis <6.000000> now;
		turn rlegmain to x-axis <22.000000> now;
		turn llegmain to x-axis <-53.010989> now;
		turn lfoot to x-axis <17.000000> now;
		turn rfoot to x-axis <10.000000> now;
		turn head to y-axis <-6.000000> now;
		turn rshoulder to x-axis <-40.005495> now;
		turn lshoulder to x-axis <44.005495> now;
		turn luparm to z-axis <-12.000000> now;
		turn larm to x-axis <-69.016484> now;
		turn ruparm to z-axis <4.000000> now;
		turn rarm to x-axis <-19.000000> now;
		sleep 2000 / currentSpeed;
	}
	if( TRUE )
	{
		move rlegmain to y-axis [0.000000] now;
		move llegmain to y-axis [0.000000] now;
		turn hips to x-axis <18.000000> now;
		turn torso to y-axis <4.000000> now;
		turn rlegmain to x-axis <22.000000> now;
		turn llegmain to x-axis <-53.010989> now;
		turn lfoot to x-axis <35.005495> now;
		turn rfoot to x-axis <29.005495> now;
		turn head to y-axis <-4.000000> now;
		turn rshoulder to x-axis <-35.005495> now;
		turn lshoulder to x-axis <35.005495> now;
		turn luparm to z-axis <-15.000000> now;
		turn larm to x-axis <-69.016484> now;
		turn ruparm to z-axis <9.000000> now;
		turn rarm to x-axis <-32.005495> now;
		sleep 1100 / currentSpeed;
	}
	if( TRUE )
	{
		move hips to y-axis [0.000000] now;
		move rlegmain to y-axis [0.000000] now;
		move llegmain to y-axis [0.000000] now;
		move rfoot to y-axis [0.000000] now;
		turn hips to x-axis <13.000000> now;
		turn torso to y-axis <3.000000> now;
		turn rlegmain to x-axis <11.000000> now;
		turn llegmain to x-axis <-40.005495> now;
		turn lfoot to x-axis <26.005495> now;
		turn rfoot to x-axis <28.005495> now;
		turn head to y-axis <-3.000000> now;
		turn rshoulder to x-axis <-22.000000> now;
		turn lshoulder to x-axis <21.000000> now;
		turn larm to x-axis <-55.010989> now;
		turn ruparm to z-axis <11.000000> now;
		turn rarm to x-axis <-31.005495> now;
		sleep 1100 / currentSpeed;
	}
	if( TRUE )
	{
		move hips to y-axis [0.000000] now;
		move rlegmain to y-axis [0.000000] now;
		move llegmain to y-axis [0.000000] now;
		move rfoot to y-axis [0.000000] now;
		turn hips to x-axis <9.000000> now;
		turn torso to y-axis <2.000000> now;
		turn rlegmain to x-axis <1.000000> now;
		turn llegmain to x-axis <-26.005495> now;
		turn lfoot to x-axis <17.000000> now;
		turn rfoot to x-axis <27.005495> now;
		turn head to y-axis <-2.000000> now;
		turn rshoulder to x-axis <-9.000000> now;
		turn lshoulder to x-axis <8.000000> now;
		turn larm to x-axis <-41.005495> now;
		turn ruparm to z-axis <12.000000> now;
		turn rarm to x-axis <-29.005495> now;
		sleep 1400 / currentSpeed;
	}
	move hips to y-axis [0.000000] now;
	move rlegmain to y-axis [0.000000] now;
	move llegmain to y-axis [0.000000] now;
	move rfoot to y-axis [0.000000] now;
	turn hips to x-axis <4.000000> now;
	turn torso to y-axis <1.000000> now;
	turn rlegmain to x-axis <-8.000000> now;
	turn llegmain to x-axis <-13.000000> now;
	turn lfoot to x-axis <8.000000> now;
	turn rfoot to x-axis <27.005495> now;
	turn head to y-axis <-1.000000> now;
	turn rshoulder to x-axis <3.000000> now;
	turn lshoulder to x-axis <-4.000000> now;
	turn larm to x-axis <-27.005495> now;
	turn ruparm to z-axis <13.000000> now;
	turn rarm to x-axis <-27.005495> now;
	sleep 1400 / currentSpeed;
}

walklegs()
{
	if( TRUE )
	{
		move hips to y-axis [0.000000] now;
		move hips to z-axis [0.000000] now;
		move rlegmain to y-axis [1.000000] now;
		move llegmain to y-axis [0.000000] now;
		move rfoot to y-axis [1.000000] now;
		turn rlegmain to x-axis <-19.000000> now;
		turn rfoot to x-axis <26.005495> now;
		sleep 2400 / currentSpeed;
	}
	if( TRUE )
	{
		move hips to y-axis [0.000000] now;
		move rlegmain to y-axis [0.000000] now;
		move llegmain to y-axis [0.000000] now;
		move rfoot to y-axis [0.000000] now;
		turn hips to x-axis <3.000000> now;
		turn rlegmain to x-axis <-34.005495> now;
		turn llegmain to x-axis <6.000000> now;
		turn lfoot to x-axis <-9.000000> now;
		turn rfoot to x-axis <20.000000> now;
		sleep 2100 / currentSpeed;
	}
	if( TRUE )
	{
		move hips to y-axis [0.000000] now;
		move rlegmain to y-axis [0.000000] now;
		move llegmain to y-axis [-1.000000] now;
		move rfoot to y-axis [0.000000] now;
		turn hips to x-axis <6.000000> now;
		turn rlegmain to x-axis <-50.010989> now;
		turn llegmain to x-axis <12.000000> now;
		turn lfoot to x-axis <-18.000000> now;
		turn rfoot to x-axis <13.000000> now;
		sleep 1900 / currentSpeed;
	}
	if( TRUE )
	{
		move rlegmain to y-axis [0.000000] now;
		move llegmain to y-axis [0.000000] now;
		move rfoot to y-axis [0.000000] now;
		turn hips to x-axis <8.000000> now;
		turn rlegmain to x-axis <-52.010989> now;
		turn llegmain to x-axis <17.000000> now;
		turn lfoot to x-axis <-13.000000> now;
		turn rfoot to x-axis <6.000000> now;
		sleep 1700 / currentSpeed;
	}
	if( TRUE )
	{
		move rlegmain to y-axis [0.000000] now;
		move llegmain to y-axis [0.000000] now;
		move rfoot to y-axis [0.000000] now;
		turn hips to x-axis <11.000000> now;
		turn rlegmain to x-axis <-53.010989> now;
		turn llegmain to x-axis <22.000000> now;
		turn lfoot to x-axis <-7.000000> now;
		turn rfoot to x-axis <0.000000> now;
		sleep 1700 / currentSpeed;
	}
	if( TRUE )
	{
		move rlegmain to y-axis [0.000000] now;
		move llegmain to y-axis [0.000000] now;
		turn hips to x-axis <14.000000> now;
		turn rlegmain to x-axis <-53.010989> now;
		turn lfoot to x-axis <10.000000> now;
		turn rfoot to x-axis <17.000000> now;
		sleep 1700 / currentSpeed;
	}
	if( TRUE )
	{
		move rlegmain to y-axis [0.000000] now;
		move llegmain to y-axis [0.000000] now;
		turn hips to x-axis <18.000000> now;
		turn rlegmain to x-axis <-53.010989> now;
		turn lfoot to x-axis <29.005495> now;
		turn rfoot to x-axis <35.005495> now;
		sleep 1600 / currentSpeed;
	}
	if( TRUE )
	{
		move hips to y-axis [0.000000] now;
		move rlegmain to y-axis [0.000000] now;
		move llegmain to y-axis [0.000000] now;
		move lfoot to y-axis [0.000000] now;
		turn hips to x-axis <13.000000> now;
		turn rlegmain to x-axis <-39.005495> now;
		turn llegmain to x-axis <12.000000> now;
		turn lfoot to x-axis <28.005495> now;
		turn rfoot to x-axis <26.005495> now;
		sleep 1600 / currentSpeed;
	}
	if( TRUE )
	{
		move hips to y-axis [0.000000] now;
		move rlegmain to y-axis [0.000000] now;
		move llegmain to y-axis [0.000000] now;
		move lfoot to y-axis [0.000000] now;
		turn hips to x-axis <9.000000> now;
		turn rlegmain to x-axis <-26.005495> now;
		turn llegmain to x-axis <1.000000> now;
		turn lfoot to x-axis <27.005495> now;
		turn rfoot to x-axis <17.000000> now;
		sleep 2400 / currentSpeed;
	}
	if( TRUE )
	{
		move hips to y-axis [0.000000] now;
		move rlegmain to y-axis [0.000000] now;
		move llegmain to y-axis [0.000000] now;
		move lfoot to y-axis [0.000000] now;
		turn hips to x-axis <4.000000> now;
		turn rlegmain to x-axis <-13.000000> now;
		turn llegmain to x-axis <-8.000000> now;
		turn lfoot to x-axis <27.005495> now;
		turn rfoot to x-axis <8.000000> now;
		sleep 2400 / currentSpeed;
	}
	if( TRUE )
	{
		move hips to y-axis [0.000000] now;
		move rlegmain to y-axis [0.000000] now;
		move llegmain to y-axis [1.000000] now;
		move lfoot to y-axis [1.000000] now;
		turn hips to x-axis <0.000000> now;
		turn rlegmain to x-axis <0.000000> now;
		turn llegmain to x-axis <-19.000000> now;
		turn lfoot to x-axis <26.005495> now;
		turn rfoot to x-axis <0.000000> now;
		sleep 2400 / currentSpeed;
	}
	if( TRUE )
	{
		move hips to y-axis [0.000000] now;
		move rlegmain to y-axis [0.000000] now;
		move llegmain to y-axis [0.000000] now;
		move lfoot to y-axis [0.000000] now;
		turn hips to x-axis <3.000000> now;
		turn rlegmain to x-axis <6.000000> now;
		turn llegmain to x-axis <-34.005495> now;
		turn lfoot to x-axis <19.000000> now;
		turn rfoot to x-axis <-9.000000> now;
		sleep 2200 / currentSpeed;
	}
	if( TRUE )
	{
		move hips to y-axis [0.000000] now;
		move rlegmain to y-axis [-1.000000] now;
		move llegmain to y-axis [0.000000] now;
		move lfoot to y-axis [0.000000] now;
		turn hips to x-axis <6.000000> now;
		turn rlegmain to x-axis <12.000000> now;
		turn llegmain to x-axis <-50.010989> now;
		turn lfoot to x-axis <13.000000> now;
		turn rfoot to x-axis <-18.000000> now;
		sleep 2100 / currentSpeed;
	}
	if( TRUE )
	{
		move rlegmain to y-axis [0.000000] now;
		move llegmain to y-axis [0.000000] - [0.000031] now;
		move lfoot to y-axis [0.000000] now;
		turn hips to x-axis <8.000000> now;
		turn rlegmain to x-axis <17.000000> now;
		turn llegmain to x-axis <-51.010989> now;
		turn lfoot to x-axis <6.000000> now;
		turn rfoot to x-axis <-12.000000> now;
		sleep 2200 / currentSpeed;
	}
	if( TRUE )
	{
		move rlegmain to y-axis [0.000000] now;
		move llegmain to y-axis [0.000000] now;
		move lfoot to y-axis [0.000000] now;
		turn hips to x-axis <11.000000> now;
		turn rlegmain to x-axis <22.000000> now;
		turn llegmain to x-axis <-53.010989> now;
		turn lfoot to x-axis <0.000000> now;
		turn rfoot to x-axis <-7.000000> now;
		sleep 2000 / currentSpeed;
	}
	if( TRUE )
	{
		move rlegmain to y-axis [0.000000] now;
		move llegmain to y-axis [0.000000] now;
		turn hips to x-axis <14.000000> now;
		turn rlegmain to x-axis <22.000000> now;
		turn llegmain to x-axis <-53.010989> now;
		turn lfoot to x-axis <17.000000> now;
		turn rfoot to x-axis <10.000000> now;
		sleep 2000 / currentSpeed;
	}
	if( TRUE )
	{
		move rlegmain to y-axis [0.000000] now;
		move llegmain to y-axis [0.000000] now;
		turn hips to x-axis <18.000000> now;
		turn rlegmain to x-axis <22.000000> now;
		turn llegmain to x-axis <-53.010989> now;
		turn lfoot to x-axis <35.005495> now;
		turn rfoot to x-axis <29.005495> now;
		sleep 1400 / currentSpeed;
	}
	if( TRUE )
	{
		move hips to y-axis [0.000000] now;
		move rlegmain to y-axis [0.000000] now;
		move llegmain to y-axis [0.000000] now;
		move rfoot to y-axis [0.000000] now;
		turn hips to x-axis <13.000000> now;
		turn rlegmain to x-axis <11.000000> now;
		turn llegmain to x-axis <-40.005495> now;
		turn lfoot to x-axis <26.005495> now;
		turn rfoot to x-axis <28.005495> now;
		sleep 1200 / currentSpeed;
	}
	if( TRUE )
	{
		move hips to y-axis [0.000000] now;
		move rlegmain to y-axis [0.000000] now;
		move llegmain to y-axis [0.000000] now;
		move rfoot to y-axis [0.000000] now;
		turn hips to x-axis <9.000000> now;
		turn rlegmain to x-axis <1.000000> now;
		turn llegmain to x-axis <-26.005495> now;
		turn lfoot to x-axis <17.000000> now;
		turn rfoot to x-axis <27.005495> now;
		sleep 1800 / currentSpeed;
	}
	move hips to y-axis [0.000000] now;
	move rlegmain to y-axis [0.000000] now;
	move llegmain to y-axis [0.000000] now;
	move rfoot to y-axis [0.000000] now;
	turn hips to x-axis <4.000000> now;
	turn rlegmain to x-axis <-8.000000> now;
	turn llegmain to x-axis <-13.000000> now;
	turn lfoot to x-axis <8.000000> now;
	turn rfoot to x-axis <27.005495> now;
	sleep 2000 / currentSpeed;
}

MotionControl(moving, aiming, justmoved)
{
	justmoved = TRUE;
	while( TRUE )
	{
		moving = bMoving;
		aiming = bAiming;
		if( moving )
		{
			if( aiming )
			{
				Static_Var_3 = 1;
				call-script walklegs();
			}
			if( !aiming )
			{
				Static_Var_3 = 0;
				call-script walk();
			}
			justmoved = TRUE;
		}
		if( !moving )
		{
			Static_Var_3 = 1;
			if( justmoved )
			{
				move hips to y-axis [0.000000] speed [-62.143994];
				turn hips to x-axis <0.000000> speed <200.043956>;
				turn rlegmain to x-axis <0.000000> speed <200.043956>;
				turn rfoot to x-axis <0.000000> speed <200.043956>;
				turn llegmain to x-axis <0.000000> speed <200.043956>;
				turn lfoot to x-axis <0.000000> speed <200.043956>;
				if( !aiming )
				{
					turn torso to y-axis <0.000000> speed <90.021978>;
					turn rarm to x-axis <0.000000> speed <200.043956>;
					turn ruparm to x-axis <0.000000> speed <200.043956>;
					turn larm to x-axis <0.000000> speed <200.043956>;
					turn luparm to x-axis <0.000000> speed <200.043956>;
					turn rarm to z-axis <0.000000> speed <200.043956>;
					turn ruparm to z-axis <4.000000> speed <200.043956>;
					turn larm to z-axis <0.000000> speed <200.043956>;
					turn luparm to z-axis <-4.000000> speed <200.043956>;
					turn luparm to y-axis <0.000000> speed <200.043956>;
					turn ruparm to y-axis <0.000000> speed <200.043956>;
					turn lshoulder to x-axis <0.000000> speed <200.043956>;
					turn rshoulder to x-axis <0.000000> speed <200.043956>;
				}
				justmoved = FALSE;
			}
			sleep 100;
		}
	}
}

UnitSpeed()
{
	while(TRUE)
	{
		currentSpeed = (get CURRENT_SPEED)*100/moveSpeed;
		if (currentSpeed<20) currentSpeed=20;
		sleep 142;
	}
}
Create()
{
	hide flare;
	hide emit1;
	unitviewer = FALSE;
	bMoving = FALSE;
	bAiming = FALSE;
	Static_Var_3 = 1;
	restore_delay = 1000;
	moveSpeed = get MAX_SPEED;
	currentSpeed = 100;
	start-script MotionControl();
	start-script SmokeUnit();
	turn flare to y-axis <180.0> speed <160.027473>;
}

SetMaxReloadTime(Func_Var_1)
{
	restore_delay = Func_Var_1 * 6;
}

StartMoving()
{
	bMoving = TRUE;
}

StopMoving()
{
	bMoving = FALSE;
}

RestoreAfterDelay()
{
	sleep 5000;
	stop-spin barrels around y-axis decelerate <2.000000>;
	turn luparm to z-axis <-4.000000> speed <80.016484>;
	turn larm to z-axis <0.000000> speed <220.049451>;
	move barrels to y-axis [0.000000] speed [10.000000];
	move flare to y-axis [0.000000] speed [10.000000];
	turn ruparm to y-axis <0.000000> speed <40.005495>;
	turn torso to y-axis <0.000000> speed <100.021978>;
	turn rarm to z-axis <0.000000> speed <220.049451>;
	turn rshoulder to x-axis <0.000000> speed <180.043956>;
	turn larm to x-axis <0.000000> speed <180.043956>;
	turn lshoulder to x-axis <0.000000> speed <160.038462>;
	turn ruparm to z-axis <6.000000> speed <180.043956>;
	turn luparm to x-axis <0.000000> speed <180.043956>;
	turn larm to x-axis <0.000000> speed <90.021978>;
	turn luparm to y-axis <0.000000> speed <180.043956>;
	turn ruparm to x-axis <0.000000> speed <180.043956>;
	turn base to y-axis <0.000000> speed <120.027473>;
	turn head to y-axis <0.000000> speed <160.038462>;
	wait-for-turn luparm around x-axis;
	wait-for-turn larm around z-axis;
	wait-for-turn ruparm around x-axis;
	wait-for-turn rarm around z-axis;
	wait-for-turn base around y-axis;
	bAiming = FALSE;
}

Demo()
{
	unitviewer = TRUE;
}

SweetSpot(piecenum)
{
	piecenum = torso;
}

QueryPrimary(piecenum)
{
	piecenum = emit;
}

AimFromPrimary(piecenum)
{
	piecenum = aimpoint;
}

AimPrimary(heading, pitch)
{
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	bAiming = TRUE;
	while( !Static_Var_3 )
	{
		sleep 100;
	}
	spin barrels around y-axis speed <-895.428571> accelerate <5.000000>;
	turn rshoulder to x-axis <-90.021978> speed <180.043956>;
	turn ruparm to z-axis <30.005495> speed <180.043956>;
	turn luparm to z-axis <0.000000> speed <80.016484>;
	turn luparm to y-axis <0.000000> speed <180.043956>;
	turn lshoulder to x-axis <-60.010989> speed <160.038462>;
	turn rarm to z-axis <-85.016484> speed <180.043956>;
	turn larm to z-axis <70.016484> speed <100.021978>;
	turn larm to x-axis <-20.000000> speed <90.021978>;
	wait-for-turn lshoulder around x-axis;
	wait-for-turn rshoulder around x-axis;
	wait-for-turn larm around z-axis;
	wait-for-turn rarm around z-axis;
	move barrels to y-axis [-3.000000] speed [10.000000];
	move flare to y-axis [-3.000000] speed [10.000000];
	turn base to y-axis heading speed <220.032967>;
	turn torso to y-axis <-55.010989> speed <160.027473>;
	turn head to y-axis <55.010989> speed <140.021978>;
	turn ruparm to y-axis <5.000000> speed <140.021978>;
	//turn rshoulder to x-axis <0.000000> - pitch speed <150.000000>;
	//turn luparm to x-axis <0.000000> - pitch speed <150.000000>;
	if ( get ABS(heading - currentHeading)  > HEADING_TOLERANCE || get ABS(pitch - currentPitch) > PITCH_TOLERANCE )
	{
	wait-for-turn base around y-axis;
	wait-for-turn torso around y-axis;
	wait-for-turn ruparm around y-axis;
	//wait-for-turn rshoulder around x-axis;
	//wait-for-turn luparm around x-axis;
		currentHeading = heading;
		currentPitch = pitch;
	}
	start-script RestoreAfterDelay();
	return (1);
}

FirePrimary()
{
	//turn base to x-axis <-2.000000> now;
	emit-sfx 1024 + 0 from flare;
	emit-sfx 1024 + 1 from emit1;
	sleep 50;
	//turn base to x-axis <0.000000> speed <20.000000>;
	emit-sfx 1024 + 1 from emit1;
}

Killed(severity, corpsetype)
{
	hide flare;
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode groundx2 type BITMAPONLY | BITMAP1;
		explode hips type BITMAPONLY | BITMAP1;
		explode rlegmain type BITMAPONLY | BITMAP1;
		explode rfoot type BITMAPONLY | BITMAP1;
		explode llegmain type BITMAPONLY | BITMAP1;
		explode lfoot type BITMAPONLY | BITMAP1;
		explode base type BITMAPONLY | BITMAP1;
		explode torso type BITMAPONLY | BITMAP1;
		explode head type BITMAPONLY | BITMAP1;
		explode rshoulder type BITMAPONLY | BITMAP1;
		explode ruparm type BITMAPONLY | BITMAP1;
		explode rarm type BITMAPONLY | BITMAP1;
		explode barrels type BITMAPONLY | BITMAP1;
		explode flare type BITMAPONLY | BITMAP1;
		explode emit type BITMAPONLY | BITMAP1;
		explode lshoulder type BITMAPONLY | BITMAP1;
		explode luparm type BITMAPONLY | BITMAP1;
		explode larm type BITMAPONLY | BITMAP1;
		explode rucksack type BITMAPONLY | BITMAP1;
		explode cable2 type BITMAPONLY | BITMAP1;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode groundx2 type SHATTER | BITMAP4;
		explode hips type SHATTER | BITMAP4;
		explode rlegmain type SHATTER | BITMAP4;
		explode rfoot type SHATTER | BITMAP4;
		explode llegmain type SHATTER | BITMAP4;
		explode lfoot type SHATTER | BITMAP4;
		explode base type SHATTER | BITMAP4;
		explode torso type SHATTER | BITMAP4;
		explode head type SHATTER | BITMAP4;
		explode rshoulder type SHATTER | BITMAP4;
		explode ruparm type SHATTER | BITMAP4;
		explode rarm type SHATTER | BITMAP4;
		explode barrels type SHATTER | BITMAP4;
		explode flare type SHATTER | BITMAP4;
		explode emit type SHATTER | BITMAP4;
		explode lshoulder type SHATTER | BITMAP4;
		explode luparm type SHATTER | BITMAP4;
		explode larm type SHATTER | BITMAP4;
		explode rucksack type SHATTER | BITMAP4;
		explode cable2 type SHATTER | BITMAP4;
		return (0);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode groundx2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode hips type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode rlegmain type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode rfoot type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode llegmain type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode lfoot type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode base type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode torso type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode head type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode rshoulder type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode ruparm type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode rarm type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode barrels type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode flare type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode emit type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode lshoulder type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode luparm type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode larm type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode rucksack type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode cable2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		return (0);
	}
	corpsetype = 3;
	explode groundx2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode hips type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode rlegmain type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode rfoot type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode llegmain type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode lfoot type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode base type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode torso type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode head type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode rshoulder type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode ruparm type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode rarm type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode barrels type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode flare type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode emit type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode lshoulder type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode luparm type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode larm type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode rucksack type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode cable2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
}
