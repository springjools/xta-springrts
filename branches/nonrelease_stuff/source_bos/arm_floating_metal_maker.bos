#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, dome, ground, glow;

static-var  mmState;

#define OPERATING 1024

SetDirection(heading)
{
	var spd;
	spd = get ABS(heading);
	turn ground to y-axis heading speed spd;
	turn base to y-axis 0-heading speed spd;
}

RockOnWaves()
{
	while(1)
	{
		turn ground to x-axis <1.0> speed <1.5>;
		move ground to y-axis [0.0] speed [0.15];
		wait-for-turn ground around x-axis;
		turn ground to x-axis <-1.0> speed <1.5>;
		move ground to y-axis [-0.1] speed [0.15];
		wait-for-move ground along y-axis;
		move ground to y-axis [0.0] speed [0.15];
		wait-for-turn ground around x-axis;
		turn ground to x-axis <1.0> speed <1.5>;
		move ground to y-axis [-0.1] speed [0.15];
		wait-for-move ground along y-axis;
	}
}

activatescr()
{
	set OPERATING to 1;
	turn dome to x-axis <0.000000> now;
	turn dome to x-axis <180.285714> speed <112.467033>;
	sleep 1676;
	wait-for-turn dome around x-axis;
	mmState = 1;
	set ACTIVATION to 1;
}

deactivatescr()
{
	mmState = 0;
	set ACTIVATION to 0;
	set OPERATING to 0;
	turn dome to x-axis <180.285714> now;
	turn dome to x-axis <0.000000> speed <112.467033>;
	sleep 1676;
}

Activate()
{
	call-script activatescr();	
}

Deactivate()
{
	call-script deactivatescr();
}

Standby()
{
	while( TRUE )
	{
		if (mmState == 1)
		{
		emit-sfx 1025 from glow;
		}
		sleep 450;
	}
}

ImAMetalMaker()
{
	mmState = -1;
	while( TRUE )
	{
		if ((get OPERATING) == 1)
		{
			if (mmState != 1) {
				call-script activatescr();
			}
		}
		else
		{
			if (mmState != 0) {
				call-script deactivatescr();
			}
		}
		sleep 1000;
	}
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 500;
	}
	start-script ImAMetalMaker();
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 258;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 257;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Create()
{
	dont-cache dome;
	dont-shade dome;
	move base to y-axis [-1.0] now;
	start-script SmokeUnit();
	start-script RockOnWaves();
	start-script Standby();
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode base type BITMAPONLY | BITMAP1;
		explode dome type BITMAPONLY | BITMAP2;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode base type BITMAPONLY | BITMAP1;
		explode dome type BITMAPONLY | BITMAP2;
		return (0);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode base type BITMAPONLY | BITMAP1;
		explode dome type BITMAPONLY | BITMAP2;
		return (0);
	}
	corpsetype = 3;
	explode base type BITMAPONLY | BITMAP1;
	explode dome type BITMAPONLY | BITMAP2;
}
