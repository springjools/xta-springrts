#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, flare, stand, gun, ground;

// Signal definitions
#define SIG_AIM				2

SetDirection(heading)
{
	var spd;
	spd = get ABS(heading);
	turn ground to y-axis heading speed spd;
	turn base to y-axis 0-heading speed spd;
}

RockOnWaves()
{
	while(1)
	{
		turn ground to x-axis <1.0> speed <1.5>;
		move ground to y-axis [0.0] speed [0.15];
		wait-for-turn ground around x-axis;
		turn ground to x-axis <-1.0> speed <1.5>;
		move ground to y-axis [-0.1] speed [0.15];
		wait-for-move ground along y-axis;
		move ground to y-axis [0.0] speed [0.15];
		wait-for-turn ground around x-axis;
		turn ground to x-axis <1.0> speed <1.5>;
		move ground to y-axis [-0.1] speed [0.15];
		wait-for-move ground along y-axis;
	}
}

#include "SmokeUnit.bos"

Create()
{
	hide flare;
	dont-cache flare;
	dont-cache gun;
	dont-cache stand;
	dont-shade flare;
	dont-shade gun;
	dont-shade stand;
	start-script SmokeUnit();
	start-script RockOnWaves();
}

AimPrimary(heading, pitch)
{
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	turn stand to y-axis heading speed <300.071429>;
	turn gun to x-axis <0.000000> - pitch speed <200.038462>;
	wait-for-turn stand around y-axis;
	wait-for-turn gun around x-axis;
	return (1);
}

FirePrimary()
{
	emit-sfx UNIT_SFX1 from flare;
}

AimFromPrimary(piecenum)
{
	piecenum = stand;
}

QueryPrimary(piecenum)
{
	piecenum = flare;
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	hide flare;
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode base type BITMAPONLY | BITMAP1;
		explode flare type BITMAPONLY | BITMAP2;
		explode gun type BITMAPONLY | BITMAP3;
		explode stand type BITMAPONLY | BITMAP4;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode base type BITMAPONLY | BITMAP1;
		explode flare type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode gun type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode stand type BITMAPONLY | BITMAP4;
		return (0);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode base type BITMAPONLY | BITMAP1;
		explode flare type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode gun type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode stand type SHATTER | BITMAP4;
		return (0);
	}
	corpsetype = 3;
	explode base type BITMAPONLY | BITMAP1;
	explode flare type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode gun type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode stand type SHATTER | EXPLODE_ON_HIT | BITMAP4;
}
