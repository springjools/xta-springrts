#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  bombay, base, winga, wingb, thrusta1, thrusta2, thrustb, thrust1,
       thrust2;

static-var  Static_Var_1, Static_Var_2, Static_Var_3;


SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 500;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 258;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 257;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Go()
{
	turn winga to z-axis <-90.016484> speed <60.005495>;
	turn wingb to z-axis <90.016484> speed <60.005495>;
}

Stop()
{
	turn winga to z-axis <0.000000> speed <20.000000>;
	turn wingb to z-axis <0.000000> speed <20.000000>;
}

RequestState(requestedstate, currentstate)
{
	if( Static_Var_2 )
	{
		Static_Var_1 = requestedstate;
		return (0);
	}
	Static_Var_2 = 1;
	currentstate = Static_Var_1;
	Static_Var_1 = requestedstate;
	while( Static_Var_1 != currentstate )
	{
		if( Static_Var_1 )
		{
			call-script Stop();
			currentstate = 1;
		}
		else
		{
			call-script Go();
			currentstate = 0;
		}
	}
	Static_Var_2 = 0;
}

Create()
{
	Static_Var_1 = 1;
	Static_Var_2 = 0;
	start-script SmokeUnit();
}

Activate()
{
	start-script RequestState(0);
}

Deactivate()
{
	start-script RequestState(1);
}

QueryPrimary(piecenum)
{
	piecenum = bombay;
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode base type BITMAPONLY | BITMAP1;
		explode bombay type BITMAPONLY | BITMAP2;
		explode thrusta1 type BITMAPONLY | BITMAP3;
		explode thrusta2 type BITMAPONLY | BITMAP4;
		explode thrustb type BITMAPONLY | BITMAP5;
		explode winga type BITMAPONLY | BITMAP1;
		explode wingb type BITMAPONLY | BITMAP2;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode base type BITMAPONLY | BITMAP1;
		explode bombay type FALL | BITMAP2;
		explode thrusta1 type FALL | BITMAP3;
		explode thrusta2 type FALL | BITMAP4;
		explode thrustb type FALL | BITMAP5;
		explode winga type SHATTER | BITMAP1;
		explode wingb type BITMAPONLY | BITMAP2;
		return (0);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode base type BITMAPONLY | BITMAP1;
		explode bombay type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode thrusta1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode thrusta2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode thrustb type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
		explode winga type SHATTER | BITMAP1;
		explode wingb type BITMAPONLY | BITMAP2;
		return (0);
	}
	corpsetype = 3;
	explode base type BITMAPONLY | BITMAP1;
	explode bombay type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode thrusta1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode thrusta2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode thrustb type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
	explode winga type SHATTER | EXPLODE_ON_HIT | BITMAP1;
	explode wingb type BITMAPONLY | BITMAP2;
}
