#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, glow, plug, glowpoint;

static-var  statechg_DesiredState, statechg_StateChanging, mmState;

#define OPERATING 1024

Go()
{
	set OPERATING to 1;
	dont-cache glow;
	turn plug to z-axis <0.000000> speed <50.010989>;
	wait-for-turn plug around z-axis;
	mmState = 1;
	set ACTIVATION to 1;
	cache plug;
}

Stop()
{
	mmState = 0;
	set ACTIVATION to 0;
	set OPERATING to 0;
	cache plug;
	turn plug to z-axis <180.043956> speed <50.010989>;
	wait-for-turn plug around z-axis;
	cache plug;
	cache glow;
}

Standby()
{
	while( TRUE )
	{
		if (mmState == 1)
		{		
		emit-sfx 1025 from glowpoint;
		}
		sleep 450;
	}
}

Activate()
{
	call-script Go();
}

Deactivate()
{
	call-script Stop();
}

ImAMetalMaker()
{
	mmState = -1;
	while( TRUE )
	{
		if ((get OPERATING) == 1)
		{
			if (mmState != 1) {
				call-script Go();
			}
		}
		else
		{
			if (mmState != 0) {
				call-script Stop();
			}
		}
		sleep 1000;
	}
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 500;
	}
	start-script ImAMetalMaker();
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 258;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 257;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Create()
{
	dont-shade plug;
	dont-shade glow;
	dont-cache glow;
	start-script SmokeUnit();
	start-script Standby();
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode base type BITMAPONLY | BITMAP1;
		explode glow type BITMAPONLY | BITMAP2;
		explode plug type BITMAPONLY | BITMAP3;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode base type BITMAPONLY | BITMAP1;
		explode glow type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode plug type BITMAPONLY | BITMAP3;
		return (0);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode base type BITMAPONLY | BITMAP1;
		explode glow type SHATTER | BITMAP2;
		explode plug type BITMAPONLY | BITMAP3;
		return (0);
	}
	corpsetype = 3;
	explode base type BITMAPONLY | BITMAP1;
	explode glow type SHATTER | EXPLODE_ON_HIT | BITMAP2;
	explode plug type BITMAPONLY | BITMAP3;
}
