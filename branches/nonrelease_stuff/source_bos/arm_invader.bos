#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

#define SPEEDUP_FACTOR 400

piece  leg1, leg2, leg3, leg4, base;

static-var  bMoving, justMoved, moveSpeed, currentSpeed, animSpeed;

stand()
{
	turn leg1 to z-axis <0.000000> speed <800>;
	turn leg1 to y-axis <30.000000> speed <800>;
	
	turn leg2 to z-axis <0.000000> speed <800>;
	turn leg2 to y-axis <-30.000000> speed <800>;
	
	turn leg3 to z-axis <0.000000> speed <800>;
	turn leg3 to y-axis <30.000000> speed <800>;
	
	turn leg4 to z-axis <0.000000> speed <800>;
	turn leg4 to y-axis <-30.000000> speed <800>;
}

walkscr()
{
	if( bMoving )
	{
		turn leg1 to z-axis <0.000000> now;
		turn leg1 to z-axis <-38.258242> speed <524.0879>;
		turn leg2 to y-axis <55.362637> now;
		turn leg2 to y-axis <55.362637> speed <0>;
		turn leg2 to z-axis <38.258242> now;
		turn leg2 to z-axis <0.000000> speed <524.0879>;
		turn leg3 to y-axis <0.000000> now;
		turn leg3 to y-axis <60.313187> speed <826.2198>;
		turn leg3 to z-axis <37.807692> now;
		turn leg4 to y-axis <-60.313187> now;
		turn leg4 to y-axis <0.000000> speed <826.2198>;
		turn leg4 to z-axis <0.000000> now;
		turn leg4 to z-axis <0.000000> speed <0>;
		sleep animSpeed;
	}
	if( bMoving )
	{
		turn leg1 to y-axis <-55.362637> speed <755.8022>;
		turn leg1 to z-axis <-38.258242> speed <0>;
		turn leg2 to y-axis <0.000000> speed <755.8022>;
		turn leg2 to z-axis <0.000000> speed <0>;
		turn leg3 to z-axis <0.000000> speed <516.1539>;
		turn leg4 to z-axis <-38.258242> speed <522.3077>;
		sleep animSpeed;
	}
	if( bMoving )
	{
		turn leg1 to y-axis <-55.362637> speed <0>;
		turn leg1 to z-axis <0.000000> speed <524.0879>;
		turn leg2 to z-axis <38.258242> speed <524.0879>;
		turn leg3 to y-axis <0.000000> speed <826.2198>;
		turn leg3 to z-axis <0.000000> speed <0>;
		turn leg4 to y-axis <-60.313187> speed <826.2198>;
		turn leg4 to z-axis <-38.258242> speed <0>;
		sleep animSpeed;
	}
	turn leg1 to y-axis <0.000000> speed <755.8022>;
	turn leg1 to z-axis <0.000000> speed <0>;
	turn leg2 to y-axis <55.362637> speed <755.8022>;
	turn leg2 to z-axis <38.258242> speed <0>;
	turn leg3 to z-axis <37.807692> speed <516.1539>;
	turn leg4 to y-axis <-60.313187> speed <0>;
	turn leg4 to z-axis <0.000000> speed <522.3077>;
	sleep animSpeed;
}

MotionControl(Func_Var_1)
{
	while( TRUE )
	{
		Func_Var_1 = bMoving;
		if( Func_Var_1 )
		{
			call-script walkscr();
		}
		else
		{
			if( justMoved)
			{
				call-script stand();
				justMoved = FALSE;
			}
			sleep 100;
		}
	}
}

UnitSpeed()
{
	while(TRUE)
	{
		currentSpeed = (get CURRENT_SPEED)*100/moveSpeed;
		if (currentSpeed<20) currentSpeed=20;
		animSpeed = 7300 / currentSpeed;
		sleep 142;
	}
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 500;
	}
	start-script UnitSpeed();
	start-script MotionControl();
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = SFXTYPE_BLACKSMOKE;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = SFXTYPE_WHITESMOKE;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Create()
{
	bMoving = FALSE;
	justMoved = FALSE;
	moveSpeed = get MAX_SPEED;
	animSpeed = 73;
	start-script SmokeUnit();
}

StartMoving()
{
	bMoving = TRUE;
}

StopMoving()
{
	bMoving = FALSE;
	justMoved = TRUE;
}

SweetSpot(piecenum)
{
	piecenum = leg1;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode base type BITMAPONLY | BITMAP1;
		explode leg1 type BITMAPONLY | BITMAP2;
		explode leg2 type BITMAPONLY | BITMAP3;
		explode leg3 type BITMAPONLY | BITMAP4;
		explode leg4 type BITMAPONLY | BITMAP5;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode base type BITMAPONLY | BITMAP1;
		explode leg1 type SHATTER | BITMAP2;
		explode leg2 type FALL | BITMAP3;
		explode leg3 type FALL | BITMAP4;
		explode leg4 type FALL | BITMAP5;
		return (0);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode base type BITMAPONLY | BITMAP1;
		explode leg1 type SHATTER | BITMAP2;
		explode leg2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode leg3 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode leg4 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
		return (0);
	}
	corpsetype = 3;
	explode base type BITMAPONLY | BITMAP1;
	explode leg1 type SHATTER | EXPLODE_ON_HIT | BITMAP2;
	explode leg2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode leg3 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode leg4 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
}
