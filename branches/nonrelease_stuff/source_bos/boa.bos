#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, turret, lmisspod, lrockbarrel, lrocket, rmisspod, rrockbarrel, rrocket, lgun, lightning, wake1, wake2, wake3, wake4, wake5,
       wake6, wake7, wake8;

static-var  _Terrain, restore_delay, gun_1;

// Signal definitions
#define SIG_AIM				2
#define SIG_AIM2			4
#define SIG_MOVE			6


SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

RockUnit(anglex, anglez)
{
	turn base to x-axis anglex speed <50.010989>;
	turn base to z-axis anglez speed <50.010989>;
	wait-for-turn base around z-axis;
	wait-for-turn base around x-axis;
	turn base to z-axis <0.000000> speed <20.000000>;
	turn base to x-axis <0.000000> speed <20.000000>;
}

HitByWeapon(Func_Var_1, Func_Var_2)
{
	turn base to z-axis Func_Var_2 speed <105.021978>;
	turn base to x-axis Func_Var_1 speed <105.021978>;
	wait-for-turn base around z-axis;
	wait-for-turn base around x-axis;
	turn base to z-axis <0.000000> speed <30.005495>;
	turn base to x-axis <0.000000> speed <30.005495>;
}

StartMoving()
{
	signal SIG_MOVE;
	set-signal-mask SIG_MOVE;
	while( TRUE )
	{
		if( _Terrain == 2 OR _Terrain == 1 )
		{
			emit-sfx 3 from wake1;
			emit-sfx 3 from wake2;
			emit-sfx 3 from wake3;
			emit-sfx 3 from wake4;
			emit-sfx 3 from wake5;
			emit-sfx 3 from wake6;
			emit-sfx 3 from wake7;
			emit-sfx 3 from wake8;
			emit-sfx 5 from wake1;
			emit-sfx 5 from wake2;
			emit-sfx 5 from wake3;
			emit-sfx 5 from wake4;
			emit-sfx 5 from wake5;
			emit-sfx 5 from wake6;
			emit-sfx 5 from wake7;
			emit-sfx 5 from wake8;
		}
		sleep 300;
	}
}

StopMoving()
{
}

setSFXoccupy(Func_Var_1)
{
	_Terrain = Func_Var_1;
}

Create()
{
	restore_delay = 3000;
	start-script SmokeUnit();
	gun_1=0;
}

SetMaxReloadTime(Func_Var_1)
{
	restore_delay = Func_Var_1 * 2;
}

RestoreAfterDelay()
{
	sleep restore_delay;
	turn turret to y-axis <0> speed <90>;
	turn lmisspod to x-axis <0> speed <50>;
	turn rmisspod to x-axis <0> speed <50>;
}

AimPrimary(heading, pitch)
{
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	turn turret to y-axis heading speed <170>;
	wait-for-turn turret around y-axis;
	wait-for-turn turret around x-axis;
	start-script RestoreAfterDelay();
	return (1);
}

FirePrimary()
{
	sleep 150;
}

AimFromPrimary(piecenum)
{
	piecenum = turret;
}

QueryPrimary(piecenum)
{
	piecenum = lightning;
}

QuerySecondary(piecenum)
{
	if(gun_1 == 0)
	{
	piecenum = lrocket;
	}
	if(gun_1 == 1)
	{
	piecenum = rrocket;
	}
}

AimFromSecondary(piecenum)
{
	piecenum = turret;
}

AimSecondary(heading, pitch)
{
	signal SIG_AIM2;
	set-signal-mask SIG_AIM2;
	turn turret to y-axis heading speed <170>;
	turn lmisspod to x-axis <0> - pitch speed <80>;
	turn rmisspod to x-axis <0> - pitch speed <80>;
	wait-for-turn turret around y-axis;
	wait-for-turn lmisspod around x-axis;
	start-script RestoreAfterDelay();
	return (1);
}

FireSecondary()
{
if(gun_1 == 0)
	{
	move lrockbarrel to z-axis [-1] now;
	sleep 150;
	move lrockbarrel to z-axis 0 speed [10];
	}

if(gun_1 == 1)
	{
	move rrockbarrel to z-axis [-1] now;
	sleep 150;
	move rrockbarrel to z-axis 0 speed [10];
	}
	
gun_1 = gun_1 + 1;
if(gun_1 == 2)
	{
	gun_1 = 0;
	}
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode lgun type BITMAPONLY | BITMAP1;
		explode base type BITMAPONLY | BITMAP2;
		explode lmisspod type BITMAPONLY | BITMAP3;
		explode rmisspod type BITMAPONLY | BITMAP3;
		explode lrockbarrel type BITMAPONLY | BITMAP3;
		explode rrockbarrel type BITMAPONLY | BITMAP3;
		explode turret type BITMAPONLY | BITMAP4;
		explode wake1 type BITMAPONLY | BITMAP1;
		explode wake2 type BITMAPONLY | BITMAP1;
		explode wake3 type BITMAPONLY | BITMAP1;
		explode wake4 type BITMAPONLY | BITMAP1;
		explode wake5 type BITMAPONLY | BITMAP1;
		explode wake6 type BITMAPONLY | BITMAP1;
		explode wake7 type BITMAPONLY | BITMAP1;
		explode wake8 type BITMAPONLY | BITMAP1;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode lgun type FALL | BITMAP1;
		explode base type BITMAPONLY | BITMAP2;
		explode lmisspod type FALL | BITMAP3;
		explode rmisspod type FALL | BITMAP3;
		explode lrockbarrel type FALL | BITMAP3;
		explode rrockbarrel type FALL | BITMAP3;
		explode turret type SHATTER | BITMAP4;
		explode wake1 type FALL | BITMAP1;
		explode wake2 type FALL | BITMAP1;
		explode wake3 type FALL | BITMAP1;
		explode wake4 type FALL | BITMAP1;
		explode wake5 type FALL | BITMAP1;
		explode wake6 type FALL | BITMAP1;
		explode wake7 type FALL | BITMAP1;
		explode wake8 type FALL | BITMAP1;
		return (0);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode lgun type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode base type BITMAPONLY | BITMAP2;
		explode lmisspod type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode rmisspod type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode lrockbarrel type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode rrockbarrel type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode turret type SHATTER | BITMAP4;
		explode wake1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode wake2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode wake3 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode wake4 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode wake5 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode wake6 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode wake7 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode wake8 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		return (0);
	}
	corpsetype = 3;
	explode lgun type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode base type BITMAPONLY | BITMAP2;
	explode lmisspod type SHATTER | EXPLODE_ON_HIT | BITMAP4;
	explode rmisspod type SHATTER | EXPLODE_ON_HIT | BITMAP4;
	explode lrockbarrel type SHATTER | EXPLODE_ON_HIT | BITMAP4;
	explode rrockbarrel type SHATTER | EXPLODE_ON_HIT | BITMAP4;
	explode turret type SHATTER | EXPLODE_ON_HIT | BITMAP4;
	explode wake1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode wake2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode wake3 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode wake4 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode wake5 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode wake6 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode wake7 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode wake8 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
}
